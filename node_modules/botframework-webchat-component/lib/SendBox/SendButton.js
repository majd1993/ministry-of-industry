"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.connectSendButton = exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _react = _interopRequireWildcard(require("react"));

var _connectToWebChat = _interopRequireDefault(require("../connectToWebChat"));

var _IconButton = _interopRequireDefault(require("./IconButton"));

var _SendIcon = _interopRequireDefault(require("./Assets/SendIcon"));

var _useFocus = _interopRequireDefault(require("../hooks/useFocus"));

var _useScrollToEnd = _interopRequireDefault(require("../hooks/useScrollToEnd"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useDisabled = _botframeworkWebchatApi.hooks.useDisabled,
    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer,
    useSubmitSendBox = _botframeworkWebchatApi.hooks.useSubmitSendBox;

var connectSendButton = function connectSendButton() {
  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {
    selectors[_key] = arguments[_key];
  }

  return _connectToWebChat.default.apply(void 0, [function (_ref) {
    var disabled = _ref.disabled,
        language = _ref.language,
        submitSendBox = _ref.submitSendBox;
    return {
      disabled: disabled,
      language: language,
      submitSendBox: submitSendBox
    };
  }].concat(selectors));
};

exports.connectSendButton = connectSendButton;

var SendButton = function SendButton() {
  var _useDisabled = useDisabled(),
      _useDisabled2 = _slicedToArray(_useDisabled, 1),
      disabled = _useDisabled2[0];

  var focus = (0, _useFocus.default)();
  var localize = useLocalizer();
  var scrollToEnd = (0, _useScrollToEnd.default)();
  var submitSendBox = useSubmitSendBox();
  var handleClick = (0, _react.useCallback)(function () {
    focus('sendBoxWithoutKeyboard');
    scrollToEnd();
    submitSendBox();
  }, [focus, scrollToEnd, submitSendBox]);
  return /*#__PURE__*/_react.default.createElement(_IconButton.default, {
    alt: localize('TEXT_INPUT_SEND_BUTTON_ALT'),
    disabled: disabled,
    onClick: handleClick
  }, /*#__PURE__*/_react.default.createElement(_SendIcon.default, null));
};

var _default = SendButton;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZW5kQm94L1NlbmRCdXR0b24uanMiXSwibmFtZXMiOlsidXNlRGlzYWJsZWQiLCJob29rcyIsInVzZUxvY2FsaXplciIsInVzZVN1Ym1pdFNlbmRCb3giLCJjb25uZWN0U2VuZEJ1dHRvbiIsInNlbGVjdG9ycyIsImNvbm5lY3RUb1dlYkNoYXQiLCJkaXNhYmxlZCIsImxhbmd1YWdlIiwic3VibWl0U2VuZEJveCIsIlNlbmRCdXR0b24iLCJmb2N1cyIsImxvY2FsaXplIiwic2Nyb2xsVG9FbmQiLCJoYW5kbGVDbGljayJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRVFBLFcsR0FBZ0RDLDZCLENBQWhERCxXO0lBQWFFLFksR0FBbUNELDZCLENBQW5DQyxZO0lBQWNDLGdCLEdBQXFCRiw2QixDQUFyQkUsZ0I7O0FBRW5DLElBQU1DLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBb0I7QUFBQSxvQ0FBSUMsU0FBSjtBQUFJQSxJQUFBQSxTQUFKO0FBQUE7O0FBQUEsU0FDeEJDLHlDQUNFO0FBQUEsUUFBR0MsUUFBSCxRQUFHQSxRQUFIO0FBQUEsUUFBYUMsUUFBYixRQUFhQSxRQUFiO0FBQUEsUUFBdUJDLGFBQXZCLFFBQXVCQSxhQUF2QjtBQUFBLFdBQTRDO0FBQzFDRixNQUFBQSxRQUFRLEVBQVJBLFFBRDBDO0FBRTFDQyxNQUFBQSxRQUFRLEVBQVJBLFFBRjBDO0FBRzFDQyxNQUFBQSxhQUFhLEVBQWJBO0FBSDBDLEtBQTVDO0FBQUEsR0FERixTQU1LSixTQU5MLEVBRHdCO0FBQUEsQ0FBMUI7Ozs7QUFVQSxJQUFNSyxVQUFVLEdBQUcsU0FBYkEsVUFBYSxHQUFNO0FBQUEscUJBQ0pWLFdBQVcsRUFEUDtBQUFBO0FBQUEsTUFDaEJPLFFBRGdCOztBQUV2QixNQUFNSSxLQUFLLEdBQUcsd0JBQWQ7QUFDQSxNQUFNQyxRQUFRLEdBQUdWLFlBQVksRUFBN0I7QUFDQSxNQUFNVyxXQUFXLEdBQUcsOEJBQXBCO0FBQ0EsTUFBTUosYUFBYSxHQUFHTixnQkFBZ0IsRUFBdEM7QUFFQSxNQUFNVyxXQUFXLEdBQUcsd0JBQVksWUFBTTtBQUNwQ0gsSUFBQUEsS0FBSyxDQUFDLHdCQUFELENBQUw7QUFDQUUsSUFBQUEsV0FBVztBQUNYSixJQUFBQSxhQUFhO0FBQ2QsR0FKbUIsRUFJakIsQ0FBQ0UsS0FBRCxFQUFRRSxXQUFSLEVBQXFCSixhQUFyQixDQUppQixDQUFwQjtBQU1BLHNCQUNFLDZCQUFDLG1CQUFEO0FBQVksSUFBQSxHQUFHLEVBQUVHLFFBQVEsQ0FBQyw0QkFBRCxDQUF6QjtBQUF5RCxJQUFBLFFBQVEsRUFBRUwsUUFBbkU7QUFBNkUsSUFBQSxPQUFPLEVBQUVPO0FBQXRGLGtCQUNFLDZCQUFDLGlCQUFELE9BREYsQ0FERjtBQUtELENBbEJEOztlQW9CZUosVSIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaG9va3MgfSBmcm9tICdib3RmcmFtZXdvcmstd2ViY2hhdC1hcGknO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgY29ubmVjdFRvV2ViQ2hhdCBmcm9tICcuLi9jb25uZWN0VG9XZWJDaGF0JztcbmltcG9ydCBJY29uQnV0dG9uIGZyb20gJy4vSWNvbkJ1dHRvbic7XG5pbXBvcnQgU2VuZEljb24gZnJvbSAnLi9Bc3NldHMvU2VuZEljb24nO1xuaW1wb3J0IHVzZUZvY3VzIGZyb20gJy4uL2hvb2tzL3VzZUZvY3VzJztcbmltcG9ydCB1c2VTY3JvbGxUb0VuZCBmcm9tICcuLi9ob29rcy91c2VTY3JvbGxUb0VuZCc7XG5cbmNvbnN0IHsgdXNlRGlzYWJsZWQsIHVzZUxvY2FsaXplciwgdXNlU3VibWl0U2VuZEJveCB9ID0gaG9va3M7XG5cbmNvbnN0IGNvbm5lY3RTZW5kQnV0dG9uID0gKC4uLnNlbGVjdG9ycykgPT5cbiAgY29ubmVjdFRvV2ViQ2hhdChcbiAgICAoeyBkaXNhYmxlZCwgbGFuZ3VhZ2UsIHN1Ym1pdFNlbmRCb3ggfSkgPT4gKHtcbiAgICAgIGRpc2FibGVkLFxuICAgICAgbGFuZ3VhZ2UsXG4gICAgICBzdWJtaXRTZW5kQm94XG4gICAgfSksXG4gICAgLi4uc2VsZWN0b3JzXG4gICk7XG5cbmNvbnN0IFNlbmRCdXR0b24gPSAoKSA9PiB7XG4gIGNvbnN0IFtkaXNhYmxlZF0gPSB1c2VEaXNhYmxlZCgpO1xuICBjb25zdCBmb2N1cyA9IHVzZUZvY3VzKCk7XG4gIGNvbnN0IGxvY2FsaXplID0gdXNlTG9jYWxpemVyKCk7XG4gIGNvbnN0IHNjcm9sbFRvRW5kID0gdXNlU2Nyb2xsVG9FbmQoKTtcbiAgY29uc3Qgc3VibWl0U2VuZEJveCA9IHVzZVN1Ym1pdFNlbmRCb3goKTtcblxuICBjb25zdCBoYW5kbGVDbGljayA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBmb2N1cygnc2VuZEJveFdpdGhvdXRLZXlib2FyZCcpO1xuICAgIHNjcm9sbFRvRW5kKCk7XG4gICAgc3VibWl0U2VuZEJveCgpO1xuICB9LCBbZm9jdXMsIHNjcm9sbFRvRW5kLCBzdWJtaXRTZW5kQm94XSk7XG5cbiAgcmV0dXJuIChcbiAgICA8SWNvbkJ1dHRvbiBhbHQ9e2xvY2FsaXplKCdURVhUX0lOUFVUX1NFTkRfQlVUVE9OX0FMVCcpfSBkaXNhYmxlZD17ZGlzYWJsZWR9IG9uQ2xpY2s9e2hhbmRsZUNsaWNrfT5cbiAgICAgIDxTZW5kSWNvbiAvPlxuICAgIDwvSWNvbkJ1dHRvbj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFNlbmRCdXR0b247XG5cbmV4cG9ydCB7IGNvbm5lY3RTZW5kQnV0dG9uIH07XG4iXX0=