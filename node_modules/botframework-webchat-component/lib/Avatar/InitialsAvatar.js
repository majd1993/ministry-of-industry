"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _useStyleSet3 = _interopRequireDefault(require("../hooks/useStyleSet"));

var _useStyleToEmotionObject = _interopRequireDefault(require("../hooks/internal/useStyleToEmotionObject"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useAvatarForBot = _botframeworkWebchatApi.hooks.useAvatarForBot,
    useAvatarForUser = _botframeworkWebchatApi.hooks.useAvatarForUser;
var ROOT_STYLE = {
  alignItems: 'center',
  display: 'flex',
  '& .webchat__initialsAvatar__initials': {
    justifyContent: 'center'
  }
};

var InitialsAvatar = function InitialsAvatar(_ref) {
  var fromUser = _ref.fromUser;

  var _useAvatarForBot = useAvatarForBot(),
      _useAvatarForBot2 = _slicedToArray(_useAvatarForBot, 1),
      avatarInitialsForBot = _useAvatarForBot2[0].initials;

  var _useAvatarForUser = useAvatarForUser(),
      _useAvatarForUser2 = _slicedToArray(_useAvatarForUser, 1),
      avatarInitialsForUser = _useAvatarForUser2[0].initials;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      initialsAvatarStyleSet = _useStyleSet2[0].initialsAvatar;

  var rootClassName = (0, _useStyleToEmotionObject.default)()(ROOT_STYLE) + '';
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('webchat__initialsAvatar', {
      'webchat__initialsAvatar--fromUser': fromUser
    }, rootClassName, initialsAvatarStyleSet + '')
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "webchat__initialsAvatar__initials"
  }, fromUser ? avatarInitialsForUser : avatarInitialsForBot));
};

InitialsAvatar.defaultProps = {
  fromUser: false
};
InitialsAvatar.propTypes = {
  fromUser: _propTypes.default.bool
};
var _default = InitialsAvatar;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BdmF0YXIvSW5pdGlhbHNBdmF0YXIuanMiXSwibmFtZXMiOlsidXNlQXZhdGFyRm9yQm90IiwiaG9va3MiLCJ1c2VBdmF0YXJGb3JVc2VyIiwiUk9PVF9TVFlMRSIsImFsaWduSXRlbXMiLCJkaXNwbGF5IiwianVzdGlmeUNvbnRlbnQiLCJJbml0aWFsc0F2YXRhciIsImZyb21Vc2VyIiwiYXZhdGFySW5pdGlhbHNGb3JCb3QiLCJpbml0aWFscyIsImF2YXRhckluaXRpYWxzRm9yVXNlciIsImluaXRpYWxzQXZhdGFyU3R5bGVTZXQiLCJpbml0aWFsc0F2YXRhciIsInJvb3RDbGFzc05hbWUiLCJkZWZhdWx0UHJvcHMiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJib29sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFUUEsZSxHQUFzQ0MsNkIsQ0FBdENELGU7SUFBaUJFLGdCLEdBQXFCRCw2QixDQUFyQkMsZ0I7QUFFekIsSUFBTUMsVUFBVSxHQUFHO0FBQ2pCQyxFQUFBQSxVQUFVLEVBQUUsUUFESztBQUVqQkMsRUFBQUEsT0FBTyxFQUFFLE1BRlE7QUFJakIsMENBQXdDO0FBQ3RDQyxJQUFBQSxjQUFjLEVBQUU7QUFEc0I7QUFKdkIsQ0FBbkI7O0FBU0EsSUFBTUMsY0FBYyxHQUFHLFNBQWpCQSxjQUFpQixPQUFrQjtBQUFBLE1BQWZDLFFBQWUsUUFBZkEsUUFBZTs7QUFBQSx5QkFDTVIsZUFBZSxFQURyQjtBQUFBO0FBQUEsTUFDcEJTLG9CQURvQix3QkFDOUJDLFFBRDhCOztBQUFBLDBCQUVPUixnQkFBZ0IsRUFGdkI7QUFBQTtBQUFBLE1BRXBCUyxxQkFGb0IseUJBRTlCRCxRQUY4Qjs7QUFBQSxxQkFHYyw0QkFIZDtBQUFBO0FBQUEsTUFHZEUsc0JBSGMsb0JBRzlCQyxjQUg4Qjs7QUFJdkMsTUFBTUMsYUFBYSxHQUFHLHdDQUEwQlgsVUFBMUIsSUFBd0MsRUFBOUQ7QUFFQSxzQkFDRTtBQUNFLElBQUEsU0FBUyxFQUFFLHlCQUNULHlCQURTLEVBRVQ7QUFDRSwyQ0FBcUNLO0FBRHZDLEtBRlMsRUFLVE0sYUFMUyxFQU1URixzQkFBc0IsR0FBRyxFQU5oQjtBQURiLGtCQVVFO0FBQUssSUFBQSxTQUFTLEVBQUM7QUFBZixLQUFvREosUUFBUSxHQUFHRyxxQkFBSCxHQUEyQkYsb0JBQXZGLENBVkYsQ0FERjtBQWNELENBcEJEOztBQXNCQUYsY0FBYyxDQUFDUSxZQUFmLEdBQThCO0FBQzVCUCxFQUFBQSxRQUFRLEVBQUU7QUFEa0IsQ0FBOUI7QUFJQUQsY0FBYyxDQUFDUyxTQUFmLEdBQTJCO0FBQ3pCUixFQUFBQSxRQUFRLEVBQUVTLG1CQUFVQztBQURLLENBQTNCO2VBSWVYLGMiLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhvb2tzIH0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtYXBpJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB1c2VTdHlsZVNldCBmcm9tICcuLi9ob29rcy91c2VTdHlsZVNldCc7XG5pbXBvcnQgdXNlU3R5bGVUb0Vtb3Rpb25PYmplY3QgZnJvbSAnLi4vaG9va3MvaW50ZXJuYWwvdXNlU3R5bGVUb0Vtb3Rpb25PYmplY3QnO1xuXG5jb25zdCB7IHVzZUF2YXRhckZvckJvdCwgdXNlQXZhdGFyRm9yVXNlciB9ID0gaG9va3M7XG5cbmNvbnN0IFJPT1RfU1RZTEUgPSB7XG4gIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICBkaXNwbGF5OiAnZmxleCcsXG5cbiAgJyYgLndlYmNoYXRfX2luaXRpYWxzQXZhdGFyX19pbml0aWFscyc6IHtcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcidcbiAgfVxufTtcblxuY29uc3QgSW5pdGlhbHNBdmF0YXIgPSAoeyBmcm9tVXNlciB9KSA9PiB7XG4gIGNvbnN0IFt7IGluaXRpYWxzOiBhdmF0YXJJbml0aWFsc0ZvckJvdCB9XSA9IHVzZUF2YXRhckZvckJvdCgpO1xuICBjb25zdCBbeyBpbml0aWFsczogYXZhdGFySW5pdGlhbHNGb3JVc2VyIH1dID0gdXNlQXZhdGFyRm9yVXNlcigpO1xuICBjb25zdCBbeyBpbml0aWFsc0F2YXRhcjogaW5pdGlhbHNBdmF0YXJTdHlsZVNldCB9XSA9IHVzZVN0eWxlU2V0KCk7XG4gIGNvbnN0IHJvb3RDbGFzc05hbWUgPSB1c2VTdHlsZVRvRW1vdGlvbk9iamVjdCgpKFJPT1RfU1RZTEUpICsgJyc7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoXG4gICAgICAgICd3ZWJjaGF0X19pbml0aWFsc0F2YXRhcicsXG4gICAgICAgIHtcbiAgICAgICAgICAnd2ViY2hhdF9faW5pdGlhbHNBdmF0YXItLWZyb21Vc2VyJzogZnJvbVVzZXJcbiAgICAgICAgfSxcbiAgICAgICAgcm9vdENsYXNzTmFtZSxcbiAgICAgICAgaW5pdGlhbHNBdmF0YXJTdHlsZVNldCArICcnXG4gICAgICApfVxuICAgID5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwid2ViY2hhdF9faW5pdGlhbHNBdmF0YXJfX2luaXRpYWxzXCI+e2Zyb21Vc2VyID8gYXZhdGFySW5pdGlhbHNGb3JVc2VyIDogYXZhdGFySW5pdGlhbHNGb3JCb3R9PC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5Jbml0aWFsc0F2YXRhci5kZWZhdWx0UHJvcHMgPSB7XG4gIGZyb21Vc2VyOiBmYWxzZVxufTtcblxuSW5pdGlhbHNBdmF0YXIucHJvcFR5cGVzID0ge1xuICBmcm9tVXNlcjogUHJvcFR5cGVzLmJvb2xcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEluaXRpYWxzQXZhdGFyO1xuIl19