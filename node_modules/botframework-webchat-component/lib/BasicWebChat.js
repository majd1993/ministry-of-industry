"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _Surface = _interopRequireDefault(require("./Utils/AccessKeySink/Surface"));

var _BasicConnectivityStatus = _interopRequireDefault(require("./BasicConnectivityStatus"));

var _BasicSendBox = _interopRequireDefault(require("./BasicSendBox"));

var _BasicToaster = _interopRequireDefault(require("./BasicToaster"));

var _BasicTranscript = _interopRequireDefault(require("./BasicTranscript"));

var _TypeFocusSink = _interopRequireDefault(require("./Utils/TypeFocusSink"));

var _useSendBoxFocusRef3 = _interopRequireDefault(require("./hooks/internal/useSendBoxFocusRef"));

var _useStyleSet3 = _interopRequireDefault(require("./hooks/useStyleSet"));

var _useStyleToEmotionObject = _interopRequireDefault(require("./hooks/internal/useStyleToEmotionObject"));

var _useTranscriptFocusRef = _interopRequireDefault(require("./hooks/internal/useTranscriptFocusRef"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useDisabled = _botframeworkWebchatApi.hooks.useDisabled,
    useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;
var ROOT_STYLE = {
  display: 'flex',
  flexDirection: 'column'
};
var SINK_STYLE = {
  display: 'flex',
  flex: 1,
  flexDirection: 'column',
  overflow: 'hidden'
};
var CONNECTIVITY_STATUS_STYLE = {
  flexShrink: 0
};
var SEND_BOX_CSS = {
  flexShrink: 0
};
var TOASTER_STYLE = {
  flexShrink: 0
};
var TRANSCRIPT_STYLE = {
  flex: 1
};

var BasicWebChat = function BasicWebChat(_ref) {
  var className = _ref.className;

  var _useStyleSet = (0, _useStyleSet3.default)(),
      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),
      rootStyleSet = _useStyleSet2[0].root;

  var _useDisabled = useDisabled(),
      _useDisabled2 = _slicedToArray(_useDisabled, 1),
      disabled = _useDisabled2[0];

  var _useStyleOptions = useStyleOptions(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      options = _useStyleOptions2[0];

  var _useSendBoxFocusRef = (0, _useSendBoxFocusRef3.default)(),
      _useSendBoxFocusRef2 = _slicedToArray(_useSendBoxFocusRef, 1),
      sendBoxFocusRef = _useSendBoxFocusRef2[0];

  var _useTranscriptFocusRe = (0, _useTranscriptFocusRef.default)(),
      _useTranscriptFocusRe2 = _slicedToArray(_useTranscriptFocusRe, 1),
      transcriptFocusRef = _useTranscriptFocusRe2[0];

  var styleToEmotionObject = (0, _useStyleToEmotionObject.default)();
  var connectivityStatusClassName = styleToEmotionObject(CONNECTIVITY_STATUS_STYLE) + '';
  var rootClassName = styleToEmotionObject(ROOT_STYLE) + '';
  var sendBoxClassName = styleToEmotionObject(SEND_BOX_CSS) + '';
  var sinkClassName = styleToEmotionObject(SINK_STYLE) + '';
  var toasterClassName = styleToEmotionObject(TOASTER_STYLE) + '';
  var transcriptClassName = styleToEmotionObject(TRANSCRIPT_STYLE) + '';
  return /*#__PURE__*/_react.default.createElement(_Surface.default, {
    className: (0, _classnames.default)(rootClassName, rootStyleSet + '', (className || '') + '')
  }, /*#__PURE__*/_react.default.createElement(_TypeFocusSink.default, {
    className: sinkClassName,
    disabled: disabled,
    ref: transcriptFocusRef,
    role: "complementary",
    sendFocusRef: sendBoxFocusRef
  }, !options.hideToaster && /*#__PURE__*/_react.default.createElement(_BasicToaster.default, {
    className: toasterClassName
  }), /*#__PURE__*/_react.default.createElement(_BasicTranscript.default, {
    className: transcriptClassName
  }), /*#__PURE__*/_react.default.createElement(_BasicConnectivityStatus.default, {
    className: connectivityStatusClassName
  }), !options.hideSendBox && /*#__PURE__*/_react.default.createElement(_BasicSendBox.default, {
    className: sendBoxClassName
  })));
};

var _default = BasicWebChat;
exports.default = _default;
BasicWebChat.defaultProps = {
  className: ''
};
BasicWebChat.propTypes = {
  className: _propTypes.default.string
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9CYXNpY1dlYkNoYXQuanMiXSwibmFtZXMiOlsidXNlRGlzYWJsZWQiLCJob29rcyIsInVzZVN0eWxlT3B0aW9ucyIsIlJPT1RfU1RZTEUiLCJkaXNwbGF5IiwiZmxleERpcmVjdGlvbiIsIlNJTktfU1RZTEUiLCJmbGV4Iiwib3ZlcmZsb3ciLCJDT05ORUNUSVZJVFlfU1RBVFVTX1NUWUxFIiwiZmxleFNocmluayIsIlNFTkRfQk9YX0NTUyIsIlRPQVNURVJfU1RZTEUiLCJUUkFOU0NSSVBUX1NUWUxFIiwiQmFzaWNXZWJDaGF0IiwiY2xhc3NOYW1lIiwicm9vdFN0eWxlU2V0Iiwicm9vdCIsImRpc2FibGVkIiwib3B0aW9ucyIsInNlbmRCb3hGb2N1c1JlZiIsInRyYW5zY3JpcHRGb2N1c1JlZiIsInN0eWxlVG9FbW90aW9uT2JqZWN0IiwiY29ubmVjdGl2aXR5U3RhdHVzQ2xhc3NOYW1lIiwicm9vdENsYXNzTmFtZSIsInNlbmRCb3hDbGFzc05hbWUiLCJzaW5rQ2xhc3NOYW1lIiwidG9hc3RlckNsYXNzTmFtZSIsInRyYW5zY3JpcHRDbGFzc05hbWUiLCJoaWRlVG9hc3RlciIsImhpZGVTZW5kQm94IiwiZGVmYXVsdFByb3BzIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBR0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFUUEsVyxHQUFpQ0MsNkIsQ0FBakNELFc7SUFBYUUsZSxHQUFvQkQsNkIsQ0FBcEJDLGU7QUFFckIsSUFBTUMsVUFBVSxHQUFHO0FBQ2pCQyxFQUFBQSxPQUFPLEVBQUUsTUFEUTtBQUVqQkMsRUFBQUEsYUFBYSxFQUFFO0FBRkUsQ0FBbkI7QUFLQSxJQUFNQyxVQUFVLEdBQUc7QUFDakJGLEVBQUFBLE9BQU8sRUFBRSxNQURRO0FBRWpCRyxFQUFBQSxJQUFJLEVBQUUsQ0FGVztBQUdqQkYsRUFBQUEsYUFBYSxFQUFFLFFBSEU7QUFJakJHLEVBQUFBLFFBQVEsRUFBRTtBQUpPLENBQW5CO0FBT0EsSUFBTUMseUJBQXlCLEdBQUc7QUFDaENDLEVBQUFBLFVBQVUsRUFBRTtBQURvQixDQUFsQztBQUlBLElBQU1DLFlBQVksR0FBRztBQUNuQkQsRUFBQUEsVUFBVSxFQUFFO0FBRE8sQ0FBckI7QUFJQSxJQUFNRSxhQUFhLEdBQUc7QUFDcEJGLEVBQUFBLFVBQVUsRUFBRTtBQURRLENBQXRCO0FBSUEsSUFBTUcsZ0JBQWdCLEdBQUc7QUFDdkJOLEVBQUFBLElBQUksRUFBRTtBQURpQixDQUF6Qjs7QUFJQSxJQUFNTyxZQUFZLEdBQUcsU0FBZkEsWUFBZSxPQUFtQjtBQUFBLE1BQWhCQyxTQUFnQixRQUFoQkEsU0FBZ0I7O0FBQUEscUJBQ0wsNEJBREs7QUFBQTtBQUFBLE1BQ3ZCQyxZQUR1QixvQkFDN0JDLElBRDZCOztBQUFBLHFCQUVuQmpCLFdBQVcsRUFGUTtBQUFBO0FBQUEsTUFFL0JrQixRQUYrQjs7QUFBQSx5QkFHcEJoQixlQUFlLEVBSEs7QUFBQTtBQUFBLE1BRy9CaUIsT0FIK0I7O0FBQUEsNEJBSVosbUNBSlk7QUFBQTtBQUFBLE1BSS9CQyxlQUorQjs7QUFBQSw4QkFLVCxxQ0FMUztBQUFBO0FBQUEsTUFLL0JDLGtCQUwrQjs7QUFNdEMsTUFBTUMsb0JBQW9CLEdBQUcsdUNBQTdCO0FBRUEsTUFBTUMsMkJBQTJCLEdBQUdELG9CQUFvQixDQUFDYix5QkFBRCxDQUFwQixHQUFrRCxFQUF0RjtBQUNBLE1BQU1lLGFBQWEsR0FBR0Ysb0JBQW9CLENBQUNuQixVQUFELENBQXBCLEdBQW1DLEVBQXpEO0FBQ0EsTUFBTXNCLGdCQUFnQixHQUFHSCxvQkFBb0IsQ0FBQ1gsWUFBRCxDQUFwQixHQUFxQyxFQUE5RDtBQUNBLE1BQU1lLGFBQWEsR0FBR0osb0JBQW9CLENBQUNoQixVQUFELENBQXBCLEdBQW1DLEVBQXpEO0FBQ0EsTUFBTXFCLGdCQUFnQixHQUFHTCxvQkFBb0IsQ0FBQ1YsYUFBRCxDQUFwQixHQUFzQyxFQUEvRDtBQUNBLE1BQU1nQixtQkFBbUIsR0FBR04sb0JBQW9CLENBQUNULGdCQUFELENBQXBCLEdBQXlDLEVBQXJFO0FBRUEsc0JBQ0UsNkJBQUMsZ0JBQUQ7QUFBc0IsSUFBQSxTQUFTLEVBQUUseUJBQVdXLGFBQVgsRUFBMEJSLFlBQVksR0FBRyxFQUF6QyxFQUE2QyxDQUFDRCxTQUFTLElBQUksRUFBZCxJQUFvQixFQUFqRTtBQUFqQyxrQkFDRSw2QkFBQyxzQkFBRDtBQUNFLElBQUEsU0FBUyxFQUFFVyxhQURiO0FBRUUsSUFBQSxRQUFRLEVBQUVSLFFBRlo7QUFHRSxJQUFBLEdBQUcsRUFBRUcsa0JBSFA7QUFJRSxJQUFBLElBQUksRUFBQyxlQUpQO0FBS0UsSUFBQSxZQUFZLEVBQUVEO0FBTGhCLEtBT0csQ0FBQ0QsT0FBTyxDQUFDVSxXQUFULGlCQUF3Qiw2QkFBQyxxQkFBRDtBQUFjLElBQUEsU0FBUyxFQUFFRjtBQUF6QixJQVAzQixlQVFFLDZCQUFDLHdCQUFEO0FBQWlCLElBQUEsU0FBUyxFQUFFQztBQUE1QixJQVJGLGVBU0UsNkJBQUMsZ0NBQUQ7QUFBeUIsSUFBQSxTQUFTLEVBQUVMO0FBQXBDLElBVEYsRUFVRyxDQUFDSixPQUFPLENBQUNXLFdBQVQsaUJBQXdCLDZCQUFDLHFCQUFEO0FBQWMsSUFBQSxTQUFTLEVBQUVMO0FBQXpCLElBVjNCLENBREYsQ0FERjtBQWdCRCxDQS9CRDs7ZUFpQ2VYLFk7O0FBRWZBLFlBQVksQ0FBQ2lCLFlBQWIsR0FBNEI7QUFDMUJoQixFQUFBQSxTQUFTLEVBQUU7QUFEZSxDQUE1QjtBQUlBRCxZQUFZLENBQUNrQixTQUFiLEdBQXlCO0FBQ3ZCakIsRUFBQUEsU0FBUyxFQUFFa0IsbUJBQVVDO0FBREUsQ0FBekIiLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludCBuby1tYWdpYy1udW1iZXJzOiBbXCJlcnJvclwiLCB7IFwiaWdub3JlXCI6IFswLCAxLCAyXSB9XSAqL1xuLyogZXNsaW50IHJlYWN0L25vLXVuc2FmZTogb2ZmICovXG5cbmltcG9ydCB7IGhvb2tzIH0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtYXBpJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBBY2Nlc3NLZXlTaW5rU3VyZmFjZSBmcm9tICcuL1V0aWxzL0FjY2Vzc0tleVNpbmsvU3VyZmFjZSc7XG5pbXBvcnQgQmFzaWNDb25uZWN0aXZpdHlTdGF0dXMgZnJvbSAnLi9CYXNpY0Nvbm5lY3Rpdml0eVN0YXR1cyc7XG5pbXBvcnQgQmFzaWNTZW5kQm94IGZyb20gJy4vQmFzaWNTZW5kQm94JztcbmltcG9ydCBCYXNpY1RvYXN0ZXIgZnJvbSAnLi9CYXNpY1RvYXN0ZXInO1xuaW1wb3J0IEJhc2ljVHJhbnNjcmlwdCBmcm9tICcuL0Jhc2ljVHJhbnNjcmlwdCc7XG5pbXBvcnQgVHlwZUZvY3VzU2lua0JveCBmcm9tICcuL1V0aWxzL1R5cGVGb2N1c1NpbmsnO1xuaW1wb3J0IHVzZVNlbmRCb3hGb2N1c1JlZiBmcm9tICcuL2hvb2tzL2ludGVybmFsL3VzZVNlbmRCb3hGb2N1c1JlZic7XG5pbXBvcnQgdXNlU3R5bGVTZXQgZnJvbSAnLi9ob29rcy91c2VTdHlsZVNldCc7XG5pbXBvcnQgdXNlU3R5bGVUb0Vtb3Rpb25PYmplY3QgZnJvbSAnLi9ob29rcy9pbnRlcm5hbC91c2VTdHlsZVRvRW1vdGlvbk9iamVjdCc7XG5pbXBvcnQgdXNlVHJhbnNjcmlwdEZvY3VzUmVmIGZyb20gJy4vaG9va3MvaW50ZXJuYWwvdXNlVHJhbnNjcmlwdEZvY3VzUmVmJztcblxuY29uc3QgeyB1c2VEaXNhYmxlZCwgdXNlU3R5bGVPcHRpb25zIH0gPSBob29rcztcblxuY29uc3QgUk9PVF9TVFlMRSA9IHtcbiAgZGlzcGxheTogJ2ZsZXgnLFxuICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJ1xufTtcblxuY29uc3QgU0lOS19TVFlMRSA9IHtcbiAgZGlzcGxheTogJ2ZsZXgnLFxuICBmbGV4OiAxLFxuICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJyxcbiAgb3ZlcmZsb3c6ICdoaWRkZW4nXG59O1xuXG5jb25zdCBDT05ORUNUSVZJVFlfU1RBVFVTX1NUWUxFID0ge1xuICBmbGV4U2hyaW5rOiAwXG59O1xuXG5jb25zdCBTRU5EX0JPWF9DU1MgPSB7XG4gIGZsZXhTaHJpbms6IDBcbn07XG5cbmNvbnN0IFRPQVNURVJfU1RZTEUgPSB7XG4gIGZsZXhTaHJpbms6IDBcbn07XG5cbmNvbnN0IFRSQU5TQ1JJUFRfU1RZTEUgPSB7XG4gIGZsZXg6IDFcbn07XG5cbmNvbnN0IEJhc2ljV2ViQ2hhdCA9ICh7IGNsYXNzTmFtZSB9KSA9PiB7XG4gIGNvbnN0IFt7IHJvb3Q6IHJvb3RTdHlsZVNldCB9XSA9IHVzZVN0eWxlU2V0KCk7XG4gIGNvbnN0IFtkaXNhYmxlZF0gPSB1c2VEaXNhYmxlZCgpO1xuICBjb25zdCBbb3B0aW9uc10gPSB1c2VTdHlsZU9wdGlvbnMoKTtcbiAgY29uc3QgW3NlbmRCb3hGb2N1c1JlZl0gPSB1c2VTZW5kQm94Rm9jdXNSZWYoKTtcbiAgY29uc3QgW3RyYW5zY3JpcHRGb2N1c1JlZl0gPSB1c2VUcmFuc2NyaXB0Rm9jdXNSZWYoKTtcbiAgY29uc3Qgc3R5bGVUb0Vtb3Rpb25PYmplY3QgPSB1c2VTdHlsZVRvRW1vdGlvbk9iamVjdCgpO1xuXG4gIGNvbnN0IGNvbm5lY3Rpdml0eVN0YXR1c0NsYXNzTmFtZSA9IHN0eWxlVG9FbW90aW9uT2JqZWN0KENPTk5FQ1RJVklUWV9TVEFUVVNfU1RZTEUpICsgJyc7XG4gIGNvbnN0IHJvb3RDbGFzc05hbWUgPSBzdHlsZVRvRW1vdGlvbk9iamVjdChST09UX1NUWUxFKSArICcnO1xuICBjb25zdCBzZW5kQm94Q2xhc3NOYW1lID0gc3R5bGVUb0Vtb3Rpb25PYmplY3QoU0VORF9CT1hfQ1NTKSArICcnO1xuICBjb25zdCBzaW5rQ2xhc3NOYW1lID0gc3R5bGVUb0Vtb3Rpb25PYmplY3QoU0lOS19TVFlMRSkgKyAnJztcbiAgY29uc3QgdG9hc3RlckNsYXNzTmFtZSA9IHN0eWxlVG9FbW90aW9uT2JqZWN0KFRPQVNURVJfU1RZTEUpICsgJyc7XG4gIGNvbnN0IHRyYW5zY3JpcHRDbGFzc05hbWUgPSBzdHlsZVRvRW1vdGlvbk9iamVjdChUUkFOU0NSSVBUX1NUWUxFKSArICcnO1xuXG4gIHJldHVybiAoXG4gICAgPEFjY2Vzc0tleVNpbmtTdXJmYWNlIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhyb290Q2xhc3NOYW1lLCByb290U3R5bGVTZXQgKyAnJywgKGNsYXNzTmFtZSB8fCAnJykgKyAnJyl9PlxuICAgICAgPFR5cGVGb2N1c1NpbmtCb3hcbiAgICAgICAgY2xhc3NOYW1lPXtzaW5rQ2xhc3NOYW1lfVxuICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XG4gICAgICAgIHJlZj17dHJhbnNjcmlwdEZvY3VzUmVmfVxuICAgICAgICByb2xlPVwiY29tcGxlbWVudGFyeVwiXG4gICAgICAgIHNlbmRGb2N1c1JlZj17c2VuZEJveEZvY3VzUmVmfVxuICAgICAgPlxuICAgICAgICB7IW9wdGlvbnMuaGlkZVRvYXN0ZXIgJiYgPEJhc2ljVG9hc3RlciBjbGFzc05hbWU9e3RvYXN0ZXJDbGFzc05hbWV9IC8+fVxuICAgICAgICA8QmFzaWNUcmFuc2NyaXB0IGNsYXNzTmFtZT17dHJhbnNjcmlwdENsYXNzTmFtZX0gLz5cbiAgICAgICAgPEJhc2ljQ29ubmVjdGl2aXR5U3RhdHVzIGNsYXNzTmFtZT17Y29ubmVjdGl2aXR5U3RhdHVzQ2xhc3NOYW1lfSAvPlxuICAgICAgICB7IW9wdGlvbnMuaGlkZVNlbmRCb3ggJiYgPEJhc2ljU2VuZEJveCBjbGFzc05hbWU9e3NlbmRCb3hDbGFzc05hbWV9IC8+fVxuICAgICAgPC9UeXBlRm9jdXNTaW5rQm94PlxuICAgIDwvQWNjZXNzS2V5U2lua1N1cmZhY2U+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBCYXNpY1dlYkNoYXQ7XG5cbkJhc2ljV2ViQ2hhdC5kZWZhdWx0UHJvcHMgPSB7XG4gIGNsYXNzTmFtZTogJydcbn07XG5cbkJhc2ljV2ViQ2hhdC5wcm9wVHlwZXMgPSB7XG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZ1xufTtcbiJdfQ==