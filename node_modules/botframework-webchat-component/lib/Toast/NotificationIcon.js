"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _CheckMarkIcon = _interopRequireDefault(require("./CheckMarkIcon"));

var _ExclamationMarkIcon = _interopRequireDefault(require("./ExclamationMarkIcon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer;

var NotificationIcon = function NotificationIcon(_ref) {
  var className = _ref.className,
      level = _ref.level;
  var localize = useLocalizer();
  var prefixes = {
    error: localize('TOAST_ALT_ERROR'),
    info: localize('TOAST_ALT_INFO'),
    success: localize('TOAST_ALT_SUCCESS'),
    warn: localize('TOAST_ALT_WARN')
  };
  var prefix = prefixes[level] || '';
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, level === 'success' ? /*#__PURE__*/_react.default.createElement(_CheckMarkIcon.default, {
    "aria-label": prefix,
    className: className
  }) : /*#__PURE__*/_react.default.createElement(_ExclamationMarkIcon.default, {
    "aria-label": prefix,
    className: className
  }));
};

NotificationIcon.defaultProps = {
  className: undefined
};
NotificationIcon.propTypes = {
  className: _propTypes.default.string,
  level: _propTypes.default.oneOf(['error', 'info', 'success', 'warn']).isRequired
};
var _default = NotificationIcon;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Ub2FzdC9Ob3RpZmljYXRpb25JY29uLmpzIl0sIm5hbWVzIjpbInVzZUxvY2FsaXplciIsImhvb2tzIiwiTm90aWZpY2F0aW9uSWNvbiIsImNsYXNzTmFtZSIsImxldmVsIiwibG9jYWxpemUiLCJwcmVmaXhlcyIsImVycm9yIiwiaW5mbyIsInN1Y2Nlc3MiLCJ3YXJuIiwicHJlZml4IiwiZGVmYXVsdFByb3BzIiwidW5kZWZpbmVkIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwib25lT2YiLCJpc1JlcXVpcmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7Ozs7SUFFUUEsWSxHQUFpQkMsNkIsQ0FBakJELFk7O0FBRVIsSUFBTUUsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFtQixPQUEwQjtBQUFBLE1BQXZCQyxTQUF1QixRQUF2QkEsU0FBdUI7QUFBQSxNQUFaQyxLQUFZLFFBQVpBLEtBQVk7QUFDakQsTUFBTUMsUUFBUSxHQUFHTCxZQUFZLEVBQTdCO0FBRUEsTUFBTU0sUUFBUSxHQUFHO0FBQ2ZDLElBQUFBLEtBQUssRUFBRUYsUUFBUSxDQUFDLGlCQUFELENBREE7QUFFZkcsSUFBQUEsSUFBSSxFQUFFSCxRQUFRLENBQUMsZ0JBQUQsQ0FGQztBQUdmSSxJQUFBQSxPQUFPLEVBQUVKLFFBQVEsQ0FBQyxtQkFBRCxDQUhGO0FBSWZLLElBQUFBLElBQUksRUFBRUwsUUFBUSxDQUFDLGdCQUFEO0FBSkMsR0FBakI7QUFPQSxNQUFNTSxNQUFNLEdBQUdMLFFBQVEsQ0FBQ0YsS0FBRCxDQUFSLElBQW1CLEVBQWxDO0FBRUEsc0JBQ0UsNkJBQUMsY0FBRCxDQUFPLFFBQVAsUUFDR0EsS0FBSyxLQUFLLFNBQVYsZ0JBQ0MsNkJBQUMsc0JBQUQ7QUFBZSxrQkFBWU8sTUFBM0I7QUFBbUMsSUFBQSxTQUFTLEVBQUVSO0FBQTlDLElBREQsZ0JBR0MsNkJBQUMsNEJBQUQ7QUFBcUIsa0JBQVlRLE1BQWpDO0FBQXlDLElBQUEsU0FBUyxFQUFFUjtBQUFwRCxJQUpKLENBREY7QUFTRCxDQXJCRDs7QUF1QkFELGdCQUFnQixDQUFDVSxZQUFqQixHQUFnQztBQUM5QlQsRUFBQUEsU0FBUyxFQUFFVTtBQURtQixDQUFoQztBQUlBWCxnQkFBZ0IsQ0FBQ1ksU0FBakIsR0FBNkI7QUFDM0JYLEVBQUFBLFNBQVMsRUFBRVksbUJBQVVDLE1BRE07QUFFM0JaLEVBQUFBLEtBQUssRUFBRVcsbUJBQVVFLEtBQVYsQ0FBZ0IsQ0FBQyxPQUFELEVBQVUsTUFBVixFQUFrQixTQUFsQixFQUE2QixNQUE3QixDQUFoQixFQUFzREM7QUFGbEMsQ0FBN0I7ZUFLZWhCLGdCIiwic291cmNlUm9vdCI6ImNvbXBvbmVudDovLy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBob29rcyB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWFwaSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IENoZWNrTWFya0ljb24gZnJvbSAnLi9DaGVja01hcmtJY29uJztcbmltcG9ydCBFeGNsYW1hdGlvbk1hcmtJY29uIGZyb20gJy4vRXhjbGFtYXRpb25NYXJrSWNvbic7XG5cbmNvbnN0IHsgdXNlTG9jYWxpemVyIH0gPSBob29rcztcblxuY29uc3QgTm90aWZpY2F0aW9uSWNvbiA9ICh7IGNsYXNzTmFtZSwgbGV2ZWwgfSkgPT4ge1xuICBjb25zdCBsb2NhbGl6ZSA9IHVzZUxvY2FsaXplcigpO1xuXG4gIGNvbnN0IHByZWZpeGVzID0ge1xuICAgIGVycm9yOiBsb2NhbGl6ZSgnVE9BU1RfQUxUX0VSUk9SJyksXG4gICAgaW5mbzogbG9jYWxpemUoJ1RPQVNUX0FMVF9JTkZPJyksXG4gICAgc3VjY2VzczogbG9jYWxpemUoJ1RPQVNUX0FMVF9TVUNDRVNTJyksXG4gICAgd2FybjogbG9jYWxpemUoJ1RPQVNUX0FMVF9XQVJOJylcbiAgfTtcblxuICBjb25zdCBwcmVmaXggPSBwcmVmaXhlc1tsZXZlbF0gfHwgJyc7XG5cbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICB7bGV2ZWwgPT09ICdzdWNjZXNzJyA/IChcbiAgICAgICAgPENoZWNrTWFya0ljb24gYXJpYS1sYWJlbD17cHJlZml4fSBjbGFzc05hbWU9e2NsYXNzTmFtZX0gLz5cbiAgICAgICkgOiAoXG4gICAgICAgIDxFeGNsYW1hdGlvbk1hcmtJY29uIGFyaWEtbGFiZWw9e3ByZWZpeH0gY2xhc3NOYW1lPXtjbGFzc05hbWV9IC8+XG4gICAgICApfVxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5Ob3RpZmljYXRpb25JY29uLmRlZmF1bHRQcm9wcyA9IHtcbiAgY2xhc3NOYW1lOiB1bmRlZmluZWRcbn07XG5cbk5vdGlmaWNhdGlvbkljb24ucHJvcFR5cGVzID0ge1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGxldmVsOiBQcm9wVHlwZXMub25lT2YoWydlcnJvcicsICdpbmZvJywgJ3N1Y2Nlc3MnLCAnd2FybiddKS5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgZGVmYXVsdCBOb3RpZmljYXRpb25JY29uO1xuIl19