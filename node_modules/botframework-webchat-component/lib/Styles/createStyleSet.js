"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createStyleSet;

var _Activities = _interopRequireDefault(require("./StyleSet/Activities"));

var _Activity = _interopRequireDefault(require("./StyleSet/Activity"));

var _AudioAttachment = _interopRequireDefault(require("./StyleSet/AudioAttachment"));

var _AudioContent = _interopRequireDefault(require("./StyleSet/AudioContent"));

var _Avatar = _interopRequireDefault(require("./StyleSet/Avatar"));

var _Bubble = _interopRequireDefault(require("./StyleSet/Bubble"));

var _CarouselFilmStrip = _interopRequireDefault(require("./StyleSet/CarouselFilmStrip"));

var _CarouselFlipper = _interopRequireDefault(require("./StyleSet/CarouselFlipper"));

var _ConnectivityNotification = _interopRequireDefault(require("./StyleSet/ConnectivityNotification"));

var _DictationInterims = _interopRequireDefault(require("./StyleSet/DictationInterims"));

var _ErrorBox = _interopRequireDefault(require("./StyleSet/ErrorBox"));

var _ErrorNotification = _interopRequireDefault(require("./StyleSet/ErrorNotification"));

var _FileContent = _interopRequireDefault(require("./StyleSet/FileContent"));

var _ImageAvatar = _interopRequireDefault(require("./StyleSet/ImageAvatar"));

var _InitialsAvatar = _interopRequireDefault(require("./StyleSet/InitialsAvatar"));

var _MicrophoneButton = _interopRequireDefault(require("./StyleSet/MicrophoneButton"));

var _Root = _interopRequireDefault(require("./StyleSet/Root"));

var _ScrollToEndButton = _interopRequireDefault(require("./StyleSet/ScrollToEndButton"));

var _SendBoxButton = _interopRequireDefault(require("./StyleSet/SendBoxButton"));

var _SendBox = _interopRequireDefault(require("./StyleSet/SendBox"));

var _SendBoxTextArea = _interopRequireDefault(require("./StyleSet/SendBoxTextArea"));

var _SendBoxTextBox = _interopRequireDefault(require("./StyleSet/SendBoxTextBox"));

var _SendStatus = _interopRequireDefault(require("./StyleSet/SendStatus"));

var _SingleAttachmentActivity = _interopRequireDefault(require("./StyleSet/SingleAttachmentActivity"));

var _SpinnerAnimation = _interopRequireDefault(require("./StyleSet/SpinnerAnimation"));

var _StackedLayout = _interopRequireDefault(require("./StyleSet/StackedLayout"));

var _SuggestedActions = _interopRequireDefault(require("./StyleSet/SuggestedActions"));

var _SuggestedAction = _interopRequireDefault(require("./StyleSet/SuggestedAction"));

var _TextContent = _interopRequireDefault(require("./StyleSet/TextContent"));

var _Toaster = _interopRequireDefault(require("./StyleSet/Toaster"));

var _Toast = _interopRequireDefault(require("./StyleSet/Toast"));

var _TypingAnimation = _interopRequireDefault(require("./StyleSet/TypingAnimation"));

var _TypingIndicator = _interopRequireDefault(require("./StyleSet/TypingIndicator"));

var _UploadButton = _interopRequireDefault(require("./StyleSet/UploadButton"));

var _VideoAttachment = _interopRequireDefault(require("./StyleSet/VideoAttachment"));

var _VideoContent = _interopRequireDefault(require("./StyleSet/VideoContent"));

var _VimeoContent = _interopRequireDefault(require("./StyleSet/VimeoContent"));

var _WarningNotification = _interopRequireDefault(require("./StyleSet/WarningNotification"));

var _YouTubeContent = _interopRequireDefault(require("./StyleSet/YouTubeContent"));

var _defaultStyleOptions = _interopRequireDefault(require("./defaultStyleOptions"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// TODO: [P4] We should add a notice for people who want to use "styleSet" instead of "styleOptions".
//       "styleSet" is actually CSS stylesheet and it is based on the DOM tree.
//       DOM tree may change from time to time, thus, maintaining "styleSet" becomes a constant effort.
function parseBorder(border) {
  var dummyElement = document.createElement('div');
  dummyElement.setAttribute('style', "border: ".concat(border));
  var _dummyElement$style = dummyElement.style,
      color = _dummyElement$style.borderColor,
      style = _dummyElement$style.borderStyle,
      width = _dummyElement$style.borderWidth;
  return {
    color: color,
    style: style,
    width: width
  };
}

var PIXEL_UNIT_PATTERN = /^[0-9]+px$/;

function createStyleSet(options) {
  options = _objectSpread(_objectSpread({}, _defaultStyleOptions.default), options); // Keep this list flat (no nested style) and serializable (no functions)
  // TODO: [P4] Deprecate this code after bump to v5

  var _options = options,
      bubbleBorder = _options.bubbleBorder,
      bubbleFromUserBorder = _options.bubbleFromUserBorder,
      bubbleFromUserNubOffset = _options.bubbleFromUserNubOffset,
      bubbleNubOffset = _options.bubbleNubOffset,
      suggestedActionBorder = _options.suggestedActionBorder,
      suggestedActionDisabledBorder = _options.suggestedActionDisabledBorder;

  if (bubbleBorder) {
    console.warn('botframework-webchat: "styleSet.bubbleBorder" is deprecated and will be removed on or after 2020-07-17. Please use "bubbleBorderColor", "bubbleBorderStyle", and, "bubbleBorderWidth.');

    var _parseBorder = parseBorder(bubbleBorder),
        color = _parseBorder.color,
        style = _parseBorder.style,
        width = _parseBorder.width;

    if (color && color !== 'initial') {
      options.bubbleBorderColor = color;
    }

    if (style && style !== 'initial') {
      options.bubbleBorderStyle = style;
    }

    if (PIXEL_UNIT_PATTERN.test(width)) {
      options.bubbleBorderWidth = parseInt(width, 10);
    }
  }

  if (bubbleFromUserBorder) {
    console.warn('botframework-webchat: "styleSet.bubbleFromUserBorder" is deprecated and will be removed on or after 2020-07-17. Please use "bubbleFromUserBorderColor", "bubbleFromUserBorderStyle", and, "bubbleFromUserBorderWidth".');

    var _parseBorder2 = parseBorder(bubbleFromUserBorder),
        _color = _parseBorder2.color,
        _style = _parseBorder2.style,
        _width = _parseBorder2.width;

    if (_color && _color !== 'initial') {
      options.bubbleFromUserBorderColor = _color;
    }

    if (_style && _style !== 'initial') {
      options.bubbleFromUserBorderStyle = _style;
    }

    if (PIXEL_UNIT_PATTERN.test(_width)) {
      options.bubbleFromUserBorderWidth = parseInt(_width, 10);
    }
  }

  if (suggestedActionBorder) {
    console.warn('botframework-webchat: "styleSet.suggestedActionBorder" is deprecated and will be removed on or after 2020-09-11. Please use "suggestedActionBorderColor", "suggestedActionBorderStyle", and, "suggestedActionBorderWidth".');

    var _parseBorder3 = parseBorder(suggestedActionBorder),
        _color2 = _parseBorder3.color,
        _style2 = _parseBorder3.style,
        _width2 = _parseBorder3.width;

    if (_color2 && _color2 !== 'initial') {
      options.suggestedActionBorderColor = _color2;
    }

    if (_style2 && _style2 !== 'initial') {
      options.suggestedActionBorderStyle = _style2;
    }

    if (PIXEL_UNIT_PATTERN.test(_width2)) {
      options.suggestedActionBorderWidth = parseInt(_width2, 10);
    }
  }

  if (suggestedActionDisabledBorder) {
    console.warn('botframework-webcaht: "styleSet.suggestedActionDisabledBorder" is deprecated and will be removed on or after 2020-09-11. Please use "suggestedActionDisabledBorderColor", "suggestedActionDisabledBorderStyle", and, "suggestedActionDisabledBorderWidth".');

    var _parseBorder4 = parseBorder(suggestedActionDisabledBorder),
        _color3 = _parseBorder4.color,
        _style3 = _parseBorder4.style,
        _width3 = _parseBorder4.width;

    if (_color3 && _color3 !== 'initial') {
      options.suggestedActionDisabledBorderColor = _color3;
    }

    if (_style3 && _style3 !== 'initial') {
      options.suggestedActionDisabledBorderStyle = _style3;
    }

    if (PIXEL_UNIT_PATTERN.test(_width3)) {
      options.suggestedActionDisabledBorderWidth = parseInt(_width3, 10);
    }
  }

  if (bubbleFromUserNubOffset === 'top') {
    options.bubbleFromUserNubOffset = 0;
  } else if (typeof bubbleFromUserNubOffset !== 'number') {
    options.bubbleFromUserNubOffset = -0;
  }

  if (bubbleNubOffset === 'top') {
    options.bubbleNubOffset = 0;
  } else if (typeof bubbleNubOffset !== 'number') {
    options.bubbleNubOffset = -0;
  }

  if (options.emojiSet === true) {
    options.emojiSet = {
      ':)': '😊',
      ':-)': '😊',
      '(:': '😊',
      '(-:': '😊',
      ':-|': '😐',
      ':|': '😐',
      ':-(': '☹️',
      ':(': '☹️',
      ':-D': '😀',
      ':D': '😀',
      ':-p': '😛',
      ':p': '😛',
      ':-P': '😛',
      ':P': '😛',
      ':-o': '😲',
      ':o': '😲',
      ':O': '😲',
      ':-O': '😲',
      ':-0': '😲',
      ':0': '😲',
      ';-)': '😉',
      ';)': '😉',
      '<3': '❤️',
      '</3': '💔',
      '<\\3': '💔'
    };
  } else if (Object.prototype.toString.call(options.emojiSet) !== '[object Object]') {
    console.warn('botframework-webchat: emojiSet must be a boolean or an object with emoticon: emojiValues');
    options.emojiSet = false;
  }

  return {
    activities: (0, _Activities.default)(options),
    activity: (0, _Activity.default)(options),
    audioAttachment: (0, _AudioAttachment.default)(options),
    audioContent: (0, _AudioContent.default)(options),
    avatar: (0, _Avatar.default)(options),
    bubble: (0, _Bubble.default)(options),
    carouselFilmStrip: (0, _CarouselFilmStrip.default)(options),
    carouselFlipper: (0, _CarouselFlipper.default)(options),
    connectivityNotification: (0, _ConnectivityNotification.default)(options),
    dictationInterims: (0, _DictationInterims.default)(options),
    errorBox: (0, _ErrorBox.default)(options),
    errorNotification: (0, _ErrorNotification.default)(options),
    fileContent: (0, _FileContent.default)(options),
    imageAvatar: (0, _ImageAvatar.default)(options),
    initialsAvatar: (0, _InitialsAvatar.default)(options),
    microphoneButton: (0, _MicrophoneButton.default)(options),
    options: _objectSpread({}, options),
    // Cloned to make sure no additional modifications will propagate up.
    root: (0, _Root.default)(options),
    scrollToEndButton: (0, _ScrollToEndButton.default)(options),
    sendBox: (0, _SendBox.default)(options),
    sendBoxButton: (0, _SendBoxButton.default)(options),
    sendBoxTextArea: (0, _SendBoxTextArea.default)(options),
    sendBoxTextBox: (0, _SendBoxTextBox.default)(options),
    sendStatus: (0, _SendStatus.default)(options),
    singleAttachmentActivity: (0, _SingleAttachmentActivity.default)(options),
    spinnerAnimation: (0, _SpinnerAnimation.default)(options),
    stackedLayout: (0, _StackedLayout.default)(options),
    suggestedAction: (0, _SuggestedAction.default)(options),
    suggestedActions: (0, _SuggestedActions.default)(options),
    textContent: (0, _TextContent.default)(options),
    toast: (0, _Toast.default)(options),
    toaster: (0, _Toaster.default)(options),
    typingAnimation: (0, _TypingAnimation.default)(options),
    typingIndicator: (0, _TypingIndicator.default)(options),
    uploadButton: (0, _UploadButton.default)(options),
    videoAttachment: (0, _VideoAttachment.default)(options),
    videoContent: (0, _VideoContent.default)(options),
    vimeoContent: (0, _VimeoContent.default)(options),
    warningNotification: (0, _WarningNotification.default)(options),
    youTubeContent: (0, _YouTubeContent.default)(options)
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,