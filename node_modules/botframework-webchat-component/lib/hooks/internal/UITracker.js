"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _react = require("react");

var _downscaleImageToDataURLUsingWorker = require("../../Utils/downscaleImageToDataURL/downscaleImageToDataURLUsingWorker");

var _BypassSpeechSynthesisPonyfill = require("./BypassSpeechSynthesisPonyfill");

var _useWebSpeechPonyfill3 = _interopRequireDefault(require("../useWebSpeechPonyfill"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useTrackDimension = _botframeworkWebchatApi.hooks.useTrackDimension;

var Tracker = function Tracker() {
  var _useWebSpeechPonyfill = (0, _useWebSpeechPonyfill3.default)(),
      _useWebSpeechPonyfill2 = _slicedToArray(_useWebSpeechPonyfill, 1),
      webSpeechPonyfill = _useWebSpeechPonyfill2[0];

  var trackDimension = useTrackDimension();
  var speechRecognitionCapability = !!webSpeechPonyfill.SpeechRecognition;
  var speechSynthesisCapability = webSpeechPonyfill.speechSynthesis && webSpeechPonyfill.speechSynthesis !== _BypassSpeechSynthesisPonyfill.speechSynthesis;
  (0, _react.useEffect)(function () {
    trackDimension('capability:downscaleImage:workerType', (0, _downscaleImageToDataURLUsingWorker.checkSupport)() ? 'web worker' : 'main');
    trackDimension('capability:renderer', 'html'); // TODO: [P2] #2937 Differentiate between Cognitive Services and browser speech

    trackDimension('prop:speechRecognition', !!speechRecognitionCapability + '');
    trackDimension('prop:speechSynthesis', !!speechSynthesisCapability + '');
  }, [trackDimension, speechRecognitionCapability, speechSynthesisCapability]);
  return false;
};

var _default = Tracker;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ob29rcy9pbnRlcm5hbC9VSVRyYWNrZXIuanMiXSwibmFtZXMiOlsidXNlVHJhY2tEaW1lbnNpb24iLCJob29rcyIsIlRyYWNrZXIiLCJ3ZWJTcGVlY2hQb255ZmlsbCIsInRyYWNrRGltZW5zaW9uIiwic3BlZWNoUmVjb2duaXRpb25DYXBhYmlsaXR5IiwiU3BlZWNoUmVjb2duaXRpb24iLCJzcGVlY2hTeW50aGVzaXNDYXBhYmlsaXR5Iiwic3BlZWNoU3ludGhlc2lzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFUUEsaUIsR0FBc0JDLDZCLENBQXRCRCxpQjs7QUFFUixJQUFNRSxPQUFPLEdBQUcsU0FBVkEsT0FBVSxHQUFNO0FBQUEsOEJBQ1EscUNBRFI7QUFBQTtBQUFBLE1BQ2JDLGlCQURhOztBQUVwQixNQUFNQyxjQUFjLEdBQUdKLGlCQUFpQixFQUF4QztBQUVBLE1BQU1LLDJCQUEyQixHQUFHLENBQUMsQ0FBQ0YsaUJBQWlCLENBQUNHLGlCQUF4RDtBQUNBLE1BQU1DLHlCQUF5QixHQUM3QkosaUJBQWlCLENBQUNLLGVBQWxCLElBQXFDTCxpQkFBaUIsQ0FBQ0ssZUFBbEIsS0FBc0NBLDhDQUQ3RTtBQUdBLHdCQUFVLFlBQU07QUFDZEosSUFBQUEsY0FBYyxDQUFDLHNDQUFELEVBQXlDLDBEQUFrQixZQUFsQixHQUFpQyxNQUExRSxDQUFkO0FBQ0FBLElBQUFBLGNBQWMsQ0FBQyxxQkFBRCxFQUF3QixNQUF4QixDQUFkLENBRmMsQ0FJZDs7QUFDQUEsSUFBQUEsY0FBYyxDQUFDLHdCQUFELEVBQTJCLENBQUMsQ0FBQ0MsMkJBQUYsR0FBZ0MsRUFBM0QsQ0FBZDtBQUNBRCxJQUFBQSxjQUFjLENBQUMsc0JBQUQsRUFBeUIsQ0FBQyxDQUFDRyx5QkFBRixHQUE4QixFQUF2RCxDQUFkO0FBQ0QsR0FQRCxFQU9HLENBQUNILGNBQUQsRUFBaUJDLDJCQUFqQixFQUE4Q0UseUJBQTlDLENBUEg7QUFTQSxTQUFPLEtBQVA7QUFDRCxDQWxCRDs7ZUFvQmVMLE8iLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhvb2tzIH0gZnJvbSAnYm90ZnJhbWV3b3JrLXdlYmNoYXQtYXBpJztcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgY2hlY2tTdXBwb3J0IGFzIHN1cHBvcnRXb3JrZXIgfSBmcm9tICcuLi8uLi9VdGlscy9kb3duc2NhbGVJbWFnZVRvRGF0YVVSTC9kb3duc2NhbGVJbWFnZVRvRGF0YVVSTFVzaW5nV29ya2VyJztcbmltcG9ydCB7IHNwZWVjaFN5bnRoZXNpcyB9IGZyb20gJy4vQnlwYXNzU3BlZWNoU3ludGhlc2lzUG9ueWZpbGwnO1xuaW1wb3J0IHVzZVdlYlNwZWVjaFBvbnlmaWxsIGZyb20gJy4uL3VzZVdlYlNwZWVjaFBvbnlmaWxsJztcblxuY29uc3QgeyB1c2VUcmFja0RpbWVuc2lvbiB9ID0gaG9va3M7XG5cbmNvbnN0IFRyYWNrZXIgPSAoKSA9PiB7XG4gIGNvbnN0IFt3ZWJTcGVlY2hQb255ZmlsbF0gPSB1c2VXZWJTcGVlY2hQb255ZmlsbCgpO1xuICBjb25zdCB0cmFja0RpbWVuc2lvbiA9IHVzZVRyYWNrRGltZW5zaW9uKCk7XG5cbiAgY29uc3Qgc3BlZWNoUmVjb2duaXRpb25DYXBhYmlsaXR5ID0gISF3ZWJTcGVlY2hQb255ZmlsbC5TcGVlY2hSZWNvZ25pdGlvbjtcbiAgY29uc3Qgc3BlZWNoU3ludGhlc2lzQ2FwYWJpbGl0eSA9XG4gICAgd2ViU3BlZWNoUG9ueWZpbGwuc3BlZWNoU3ludGhlc2lzICYmIHdlYlNwZWVjaFBvbnlmaWxsLnNwZWVjaFN5bnRoZXNpcyAhPT0gc3BlZWNoU3ludGhlc2lzO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgdHJhY2tEaW1lbnNpb24oJ2NhcGFiaWxpdHk6ZG93bnNjYWxlSW1hZ2U6d29ya2VyVHlwZScsIHN1cHBvcnRXb3JrZXIoKSA/ICd3ZWIgd29ya2VyJyA6ICdtYWluJyk7XG4gICAgdHJhY2tEaW1lbnNpb24oJ2NhcGFiaWxpdHk6cmVuZGVyZXInLCAnaHRtbCcpO1xuXG4gICAgLy8gVE9ETzogW1AyXSAjMjkzNyBEaWZmZXJlbnRpYXRlIGJldHdlZW4gQ29nbml0aXZlIFNlcnZpY2VzIGFuZCBicm93c2VyIHNwZWVjaFxuICAgIHRyYWNrRGltZW5zaW9uKCdwcm9wOnNwZWVjaFJlY29nbml0aW9uJywgISFzcGVlY2hSZWNvZ25pdGlvbkNhcGFiaWxpdHkgKyAnJyk7XG4gICAgdHJhY2tEaW1lbnNpb24oJ3Byb3A6c3BlZWNoU3ludGhlc2lzJywgISFzcGVlY2hTeW50aGVzaXNDYXBhYmlsaXR5ICsgJycpO1xuICB9LCBbdHJhY2tEaW1lbnNpb24sIHNwZWVjaFJlY29nbml0aW9uQ2FwYWJpbGl0eSwgc3BlZWNoU3ludGhlc2lzQ2FwYWJpbGl0eV0pO1xuXG4gIHJldHVybiBmYWxzZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFRyYWNrZXI7XG4iXX0=