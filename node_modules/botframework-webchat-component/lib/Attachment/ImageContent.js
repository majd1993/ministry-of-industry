"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _botframeworkWebchatApi = require("botframework-webchat-api");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _CroppedImage = _interopRequireDefault(require("../Utils/CroppedImage"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;

var ImageContent = function ImageContent(_ref) {
  var alt = _ref.alt,
      src = _ref.src;

  var _useStyleOptions = useStyleOptions(),
      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),
      bubbleImageHeight = _useStyleOptions2[0].bubbleImageHeight;

  return /*#__PURE__*/_react.default.createElement(_CroppedImage.default, {
    alt: alt,
    height: bubbleImageHeight,
    src: src,
    width: "100%"
  });
};

ImageContent.defaultProps = {
  alt: ''
};
ImageContent.propTypes = {
  alt: _propTypes.default.string,
  src: _propTypes.default.string.isRequired
};
var _default = ImageContent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BdHRhY2htZW50L0ltYWdlQ29udGVudC5qcyJdLCJuYW1lcyI6WyJ1c2VTdHlsZU9wdGlvbnMiLCJob29rcyIsIkltYWdlQ29udGVudCIsImFsdCIsInNyYyIsImJ1YmJsZUltYWdlSGVpZ2h0IiwiZGVmYXVsdFByb3BzIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7O0lBRVFBLGUsR0FBb0JDLDZCLENBQXBCRCxlOztBQUVSLElBQU1FLFlBQVksR0FBRyxTQUFmQSxZQUFlLE9BQWtCO0FBQUEsTUFBZkMsR0FBZSxRQUFmQSxHQUFlO0FBQUEsTUFBVkMsR0FBVSxRQUFWQSxHQUFVOztBQUFBLHlCQUNMSixlQUFlLEVBRFY7QUFBQTtBQUFBLE1BQzVCSyxpQkFENEIsd0JBQzVCQSxpQkFENEI7O0FBR3JDLHNCQUFPLDZCQUFDLHFCQUFEO0FBQWMsSUFBQSxHQUFHLEVBQUVGLEdBQW5CO0FBQXdCLElBQUEsTUFBTSxFQUFFRSxpQkFBaEM7QUFBbUQsSUFBQSxHQUFHLEVBQUVELEdBQXhEO0FBQTZELElBQUEsS0FBSyxFQUFDO0FBQW5FLElBQVA7QUFDRCxDQUpEOztBQU1BRixZQUFZLENBQUNJLFlBQWIsR0FBNEI7QUFDMUJILEVBQUFBLEdBQUcsRUFBRTtBQURxQixDQUE1QjtBQUlBRCxZQUFZLENBQUNLLFNBQWIsR0FBeUI7QUFDdkJKLEVBQUFBLEdBQUcsRUFBRUssbUJBQVVDLE1BRFE7QUFFdkJMLEVBQUFBLEdBQUcsRUFBRUksbUJBQVVDLE1BQVYsQ0FBaUJDO0FBRkMsQ0FBekI7ZUFLZVIsWSIsInNvdXJjZVJvb3QiOiJjb21wb25lbnQ6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaG9va3MgfSBmcm9tICdib3RmcmFtZXdvcmstd2ViY2hhdC1hcGknO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBDcm9wcGVkSW1hZ2UgZnJvbSAnLi4vVXRpbHMvQ3JvcHBlZEltYWdlJztcblxuY29uc3QgeyB1c2VTdHlsZU9wdGlvbnMgfSA9IGhvb2tzO1xuXG5jb25zdCBJbWFnZUNvbnRlbnQgPSAoeyBhbHQsIHNyYyB9KSA9PiB7XG4gIGNvbnN0IFt7IGJ1YmJsZUltYWdlSGVpZ2h0IH1dID0gdXNlU3R5bGVPcHRpb25zKCk7XG5cbiAgcmV0dXJuIDxDcm9wcGVkSW1hZ2UgYWx0PXthbHR9IGhlaWdodD17YnViYmxlSW1hZ2VIZWlnaHR9IHNyYz17c3JjfSB3aWR0aD1cIjEwMCVcIiAvPjtcbn07XG5cbkltYWdlQ29udGVudC5kZWZhdWx0UHJvcHMgPSB7XG4gIGFsdDogJydcbn07XG5cbkltYWdlQ29udGVudC5wcm9wVHlwZXMgPSB7XG4gIGFsdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgc3JjOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWRcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEltYWdlQ29udGVudDtcbiJdfQ==