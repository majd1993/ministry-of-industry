"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createAdaptiveCardsAttachmentMiddleware;

var _react = _interopRequireDefault(require("react"));

var _AdaptiveCardAttachment = _interopRequireDefault(require("./AttachmentForScreenReader/AdaptiveCardAttachment"));

var _RichCardAttachment = _interopRequireDefault(require("./AttachmentForScreenReader/RichCardAttachment"));

var RICH_CARD_CONTENT_TYPES = ['application/vnd.microsoft.card.animation', 'application/vnd.microsoft.card.audio', 'application/vnd.microsoft.card.hero', 'application/vnd.microsoft.card.oauth', 'application/vnd.microsoft.card.receipt', 'application/vnd.microsoft.card.signin', 'application/vnd.microsoft.card.thumbnail', 'application/vnd.microsoft.card.video'];

function createAdaptiveCardsAttachmentMiddleware() {
  return function () {
    return function (next) {
      return function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        var _args$ = args[0],
            activity = _args$.activity,
            attachment = _args$.attachment,
            _args$$attachment = _args$.attachment,
            content = _args$$attachment.content,
            contentType = _args$$attachment.contentType;
        return content && RICH_CARD_CONTENT_TYPES.includes(contentType) ? function () {
          return /*#__PURE__*/_react.default.createElement(_RichCardAttachment.default, {
            content: content
          });
        } : content && contentType === 'application/vnd.microsoft.card.adaptive' ? function () {
          return /*#__PURE__*/_react.default.createElement(_AdaptiveCardAttachment.default, {
            content: content
          });
        } : next({
          activity: activity,
          attachment: attachment
        });
      };
    };
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hZGFwdGl2ZUNhcmRzL2NyZWF0ZUFkYXB0aXZlQ2FyZHNBdHRhY2htZW50Rm9yU2NyZWVuUmVhZGVyTWlkZGxld2FyZS5qcyJdLCJuYW1lcyI6WyJSSUNIX0NBUkRfQ09OVEVOVF9UWVBFUyIsImNyZWF0ZUFkYXB0aXZlQ2FyZHNBdHRhY2htZW50TWlkZGxld2FyZSIsIm5leHQiLCJhcmdzIiwiYWN0aXZpdHkiLCJhdHRhY2htZW50IiwiY29udGVudCIsImNvbnRlbnRUeXBlIiwiaW5jbHVkZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUVBOztBQUNBOztBQUVBLElBQU1BLHVCQUF1QixHQUFHLENBQzlCLDBDQUQ4QixFQUU5QixzQ0FGOEIsRUFHOUIscUNBSDhCLEVBSTlCLHNDQUo4QixFQUs5Qix3Q0FMOEIsRUFNOUIsdUNBTjhCLEVBTzlCLDBDQVA4QixFQVE5QixzQ0FSOEIsQ0FBaEM7O0FBV2UsU0FBU0MsdUNBQVQsR0FBbUQ7QUFDaEUsU0FBTztBQUFBLFdBQU0sVUFBQUMsSUFBSTtBQUFBLGFBQUksWUFBYTtBQUFBLDBDQUFUQyxJQUFTO0FBQVRBLFVBQUFBLElBQVM7QUFBQTs7QUFBQSxxQkFPNUJBLElBUDRCO0FBQUEsWUFHNUJDLFFBSDRCLFVBRzVCQSxRQUg0QjtBQUFBLFlBSTVCQyxVQUo0QixVQUk1QkEsVUFKNEI7QUFBQSx1Q0FLNUJBLFVBTDRCO0FBQUEsWUFLZEMsT0FMYyxxQkFLZEEsT0FMYztBQUFBLFlBS0xDLFdBTEsscUJBS0xBLFdBTEs7QUFTaEMsZUFBT0QsT0FBTyxJQUFJTix1QkFBdUIsQ0FBQ1EsUUFBeEIsQ0FBaUNELFdBQWpDLENBQVgsR0FDSDtBQUFBLDhCQUFNLDZCQUFDLDJCQUFEO0FBQW9CLFlBQUEsT0FBTyxFQUFFRDtBQUE3QixZQUFOO0FBQUEsU0FERyxHQUVIQSxPQUFPLElBQUlDLFdBQVcsS0FBSyx5Q0FBM0IsR0FDQTtBQUFBLDhCQUFNLDZCQUFDLCtCQUFEO0FBQXdCLFlBQUEsT0FBTyxFQUFFRDtBQUFqQyxZQUFOO0FBQUEsU0FEQSxHQUVBSixJQUFJLENBQUM7QUFBRUUsVUFBQUEsUUFBUSxFQUFSQSxRQUFGO0FBQVlDLFVBQUFBLFVBQVUsRUFBVkE7QUFBWixTQUFELENBSlI7QUFLRCxPQWRnQjtBQUFBLEtBQVY7QUFBQSxHQUFQO0FBZUQiLCJzb3VyY2VSb290IjoiYnVuZGxlOi8vLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBBZGFwdGl2ZUNhcmRBdHRhY2htZW50IGZyb20gJy4vQXR0YWNobWVudEZvclNjcmVlblJlYWRlci9BZGFwdGl2ZUNhcmRBdHRhY2htZW50JztcbmltcG9ydCBSaWNoQ2FyZEF0dGFjaG1lbnQgZnJvbSAnLi9BdHRhY2htZW50Rm9yU2NyZWVuUmVhZGVyL1JpY2hDYXJkQXR0YWNobWVudCc7XG5cbmNvbnN0IFJJQ0hfQ0FSRF9DT05URU5UX1RZUEVTID0gW1xuICAnYXBwbGljYXRpb24vdm5kLm1pY3Jvc29mdC5jYXJkLmFuaW1hdGlvbicsXG4gICdhcHBsaWNhdGlvbi92bmQubWljcm9zb2Z0LmNhcmQuYXVkaW8nLFxuICAnYXBwbGljYXRpb24vdm5kLm1pY3Jvc29mdC5jYXJkLmhlcm8nLFxuICAnYXBwbGljYXRpb24vdm5kLm1pY3Jvc29mdC5jYXJkLm9hdXRoJyxcbiAgJ2FwcGxpY2F0aW9uL3ZuZC5taWNyb3NvZnQuY2FyZC5yZWNlaXB0JyxcbiAgJ2FwcGxpY2F0aW9uL3ZuZC5taWNyb3NvZnQuY2FyZC5zaWduaW4nLFxuICAnYXBwbGljYXRpb24vdm5kLm1pY3Jvc29mdC5jYXJkLnRodW1ibmFpbCcsXG4gICdhcHBsaWNhdGlvbi92bmQubWljcm9zb2Z0LmNhcmQudmlkZW8nXG5dO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVBZGFwdGl2ZUNhcmRzQXR0YWNobWVudE1pZGRsZXdhcmUoKSB7XG4gIHJldHVybiAoKSA9PiBuZXh0ID0+ICguLi5hcmdzKSA9PiB7XG4gICAgY29uc3QgW1xuICAgICAge1xuICAgICAgICBhY3Rpdml0eSxcbiAgICAgICAgYXR0YWNobWVudCxcbiAgICAgICAgYXR0YWNobWVudDogeyBjb250ZW50LCBjb250ZW50VHlwZSB9XG4gICAgICB9XG4gICAgXSA9IGFyZ3M7XG5cbiAgICByZXR1cm4gY29udGVudCAmJiBSSUNIX0NBUkRfQ09OVEVOVF9UWVBFUy5pbmNsdWRlcyhjb250ZW50VHlwZSlcbiAgICAgID8gKCkgPT4gPFJpY2hDYXJkQXR0YWNobWVudCBjb250ZW50PXtjb250ZW50fSAvPlxuICAgICAgOiBjb250ZW50ICYmIGNvbnRlbnRUeXBlID09PSAnYXBwbGljYXRpb24vdm5kLm1pY3Jvc29mdC5jYXJkLmFkYXB0aXZlJ1xuICAgICAgPyAoKSA9PiA8QWRhcHRpdmVDYXJkQXR0YWNobWVudCBjb250ZW50PXtjb250ZW50fSAvPlxuICAgICAgOiBuZXh0KHsgYWN0aXZpdHksIGF0dGFjaG1lbnQgfSk7XG4gIH07XG59XG4iXX0=