"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _botframeworkWebchatComponent = require("botframework-webchat-component");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _useAdaptiveCardsPackage = _interopRequireDefault(require("../hooks/useAdaptiveCardsPackage"));

var _useParseAdaptiveCardJSON = _interopRequireDefault(require("../hooks/internal/useParseAdaptiveCardJSON"));

var _useUniqueId = _interopRequireDefault(require("../hooks/internal/useUniqueId"));

var useLocalizer = _botframeworkWebchatComponent.hooks.useLocalizer; // Perform a depth-first search of the Adaptive Card tree.

function walkAllItems(node, fn) {
  fn(node);

  if (node.getItemAt && node.getItemCount) {
    for (var count = node.getItemCount(), index = 0; index < count; index++) {
      walkAllItems(node.getItemAt(index), fn);
    }
  }

  if (node.getActionAt && node.getActionCount) {
    for (var _count = node.getActionCount(), _index = 0; _index < _count; _index++) {
      fn(node.getActionAt(_index));
    }
  }
}

var AdaptiveCardChoiceSetInput = function AdaptiveCardChoiceSetInput(_ref) {
  var _ref$input = _ref.input,
      choices = _ref$input.choices,
      defaultValue = _ref$input.defaultValue;
  var labelId = (0, _useUniqueId.default)('webchat__id');
  var defaultChoice = choices.find(function (_ref2) {
    var value = _ref2.value;
    return defaultValue === value || !defaultValue && !value;
  });
  return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("select", {
    "aria-labelledby": defaultChoice ? labelId : undefined,
    defaultValue: defaultValue,
    tabIndex: -1
  }, choices.map(function (choice) {
    return /*#__PURE__*/_react.default.createElement("option", {
      id: choice === defaultChoice ? labelId : undefined,
      key: choice.value,
      value: choice.value
    }, choice.title);
  })));
};

AdaptiveCardChoiceSetInput.propTypes = {
  input: _propTypes.default.shape({
    choices: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      value: _propTypes.default.any
    })),
    value: _propTypes.default.any
  })
};

var AdaptiveCardAttachment = function AdaptiveCardAttachment(_ref3) {
  var content = _ref3.content;
  var labelId = (0, _useUniqueId.default)('webchat__id');
  var localize = useLocalizer();
  var parseAdaptiveCardJSON = (0, _useParseAdaptiveCardJSON.default)();

  var _useAdaptiveCardsPack = (0, _useAdaptiveCardsPackage.default)(),
      _useAdaptiveCardsPack2 = (0, _slicedToArray2.default)(_useAdaptiveCardsPack, 1),
      _useAdaptiveCardsPack3 = _useAdaptiveCardsPack2[0],
      ChoiceSetInput = _useAdaptiveCardsPack3.ChoiceSetInput,
      DateInput = _useAdaptiveCardsPack3.DateInput,
      NumberInput = _useAdaptiveCardsPack3.NumberInput,
      OpenUrlAction = _useAdaptiveCardsPack3.OpenUrlAction,
      ShowCardAction = _useAdaptiveCardsPack3.ShowCardAction,
      SubmitAction = _useAdaptiveCardsPack3.SubmitAction,
      TextInput = _useAdaptiveCardsPack3.TextInput,
      TimeInput = _useAdaptiveCardsPack3.TimeInput,
      ToggleInput = _useAdaptiveCardsPack3.ToggleInput;

  var card = (0, _react.useMemo)(function () {
    return parseAdaptiveCardJSON(content, {
      ignoreErrors: true
    });
  }, [content, parseAdaptiveCardJSON]);
  var inputs = (0, _react.useMemo)(function () {
    var inputs = [];
    walkAllItems(card, function (node) {
      if (node instanceof ChoiceSetInput || node instanceof DateInput || node instanceof NumberInput || node instanceof OpenUrlAction || node instanceof ShowCardAction || node instanceof SubmitAction || node instanceof TextInput || node instanceof TimeInput || node instanceof ToggleInput) {
        inputs.push(node);
      }
    });
    return inputs;
  }, [card]);
  var cardLabel = localize('ATTACHMENT_CARD', card.speak || '', '', '');
  return /*#__PURE__*/_react.default.createElement("article", {
    "aria-labelledby": labelId
  }, /*#__PURE__*/_react.default.createElement("div", {
    id: labelId
  }, cardLabel), inputs.map(function (input, index) {
    return input instanceof ChoiceSetInput ? /*#__PURE__*/_react.default.createElement(AdaptiveCardChoiceSetInput, {
      input: input,
      key: index
    }) : input instanceof DateInput ? /*#__PURE__*/_react.default.createElement("div", {
      key: index
    }, /*#__PURE__*/_react.default.createElement("input", {
      placeholder: input.placeholder,
      tabIndex: -1,
      type: "date"
    })) : input instanceof NumberInput ? /*#__PURE__*/_react.default.createElement("div", {
      key: index
    }, /*#__PURE__*/_react.default.createElement("input", {
      placeholder: input.placeholder,
      tabIndex: -1,
      type: "number"
    })) : input instanceof OpenUrlAction || input instanceof ShowCardAction || input instanceof SubmitAction ? /*#__PURE__*/_react.default.createElement("div", {
      key: index
    }, /*#__PURE__*/_react.default.createElement("button", {
      tabIndex: -1,
      type: "button"
    }, input.title)) : input instanceof TextInput ? /*#__PURE__*/_react.default.createElement("div", {
      key: index
    }, /*#__PURE__*/_react.default.createElement("input", {
      placeholder: input.placeholder,
      tabIndex: -1,
      type: "text"
    })) : input instanceof TimeInput ? /*#__PURE__*/_react.default.createElement("div", {
      key: index
    }, /*#__PURE__*/_react.default.createElement("input", {
      placeholder: input.placeholder,
      tabIndex: -1,
      type: "time"
    })) : input instanceof ToggleInput ? /*#__PURE__*/_react.default.createElement("div", {
      key: index
    }, input.title, /*#__PURE__*/_react.default.createElement("input", {
      defaultChecked: input.value === input.valueOn,
      tabIndex: -1,
      type: "checkbox"
    })) : false;
  }));
};

AdaptiveCardAttachment.propTypes = {
  content: _propTypes.default.any.isRequired
};
var _default = AdaptiveCardAttachment;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hZGFwdGl2ZUNhcmRzL0F0dGFjaG1lbnRGb3JTY3JlZW5SZWFkZXIvQWRhcHRpdmVDYXJkQXR0YWNobWVudC5qcyJdLCJuYW1lcyI6WyJ1c2VMb2NhbGl6ZXIiLCJob29rcyIsIndhbGtBbGxJdGVtcyIsIm5vZGUiLCJmbiIsImdldEl0ZW1BdCIsImdldEl0ZW1Db3VudCIsImNvdW50IiwiaW5kZXgiLCJnZXRBY3Rpb25BdCIsImdldEFjdGlvbkNvdW50IiwiQWRhcHRpdmVDYXJkQ2hvaWNlU2V0SW5wdXQiLCJpbnB1dCIsImNob2ljZXMiLCJkZWZhdWx0VmFsdWUiLCJsYWJlbElkIiwiZGVmYXVsdENob2ljZSIsImZpbmQiLCJ2YWx1ZSIsInVuZGVmaW5lZCIsIm1hcCIsImNob2ljZSIsInRpdGxlIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic2hhcGUiLCJhcnJheU9mIiwic3RyaW5nIiwiYW55IiwiQWRhcHRpdmVDYXJkQXR0YWNobWVudCIsImNvbnRlbnQiLCJsb2NhbGl6ZSIsInBhcnNlQWRhcHRpdmVDYXJkSlNPTiIsIkNob2ljZVNldElucHV0IiwiRGF0ZUlucHV0IiwiTnVtYmVySW5wdXQiLCJPcGVuVXJsQWN0aW9uIiwiU2hvd0NhcmRBY3Rpb24iLCJTdWJtaXRBY3Rpb24iLCJUZXh0SW5wdXQiLCJUaW1lSW5wdXQiLCJUb2dnbGVJbnB1dCIsImNhcmQiLCJpZ25vcmVFcnJvcnMiLCJpbnB1dHMiLCJwdXNoIiwiY2FyZExhYmVsIiwic3BlYWsiLCJwbGFjZWhvbGRlciIsInZhbHVlT24iLCJpc1JlcXVpcmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0lBRVFBLFksR0FBaUJDLG1DLENBQWpCRCxZLEVBRVI7O0FBQ0EsU0FBU0UsWUFBVCxDQUFzQkMsSUFBdEIsRUFBNEJDLEVBQTVCLEVBQWdDO0FBQzlCQSxFQUFBQSxFQUFFLENBQUNELElBQUQsQ0FBRjs7QUFFQSxNQUFJQSxJQUFJLENBQUNFLFNBQUwsSUFBa0JGLElBQUksQ0FBQ0csWUFBM0IsRUFBeUM7QUFDdkMsU0FBSyxJQUFJQyxLQUFLLEdBQUdKLElBQUksQ0FBQ0csWUFBTCxFQUFaLEVBQWlDRSxLQUFLLEdBQUcsQ0FBOUMsRUFBaURBLEtBQUssR0FBR0QsS0FBekQsRUFBZ0VDLEtBQUssRUFBckUsRUFBeUU7QUFDdkVOLE1BQUFBLFlBQVksQ0FBQ0MsSUFBSSxDQUFDRSxTQUFMLENBQWVHLEtBQWYsQ0FBRCxFQUF3QkosRUFBeEIsQ0FBWjtBQUNEO0FBQ0Y7O0FBRUQsTUFBSUQsSUFBSSxDQUFDTSxXQUFMLElBQW9CTixJQUFJLENBQUNPLGNBQTdCLEVBQTZDO0FBQzNDLFNBQUssSUFBSUgsTUFBSyxHQUFHSixJQUFJLENBQUNPLGNBQUwsRUFBWixFQUFtQ0YsTUFBSyxHQUFHLENBQWhELEVBQW1EQSxNQUFLLEdBQUdELE1BQTNELEVBQWtFQyxNQUFLLEVBQXZFLEVBQTJFO0FBQ3pFSixNQUFBQSxFQUFFLENBQUNELElBQUksQ0FBQ00sV0FBTCxDQUFpQkQsTUFBakIsQ0FBRCxDQUFGO0FBQ0Q7QUFDRjtBQUNGOztBQUVELElBQU1HLDBCQUEwQixHQUFHLFNBQTdCQSwwQkFBNkIsT0FBMEM7QUFBQSx3QkFBdkNDLEtBQXVDO0FBQUEsTUFBOUJDLE9BQThCLGNBQTlCQSxPQUE4QjtBQUFBLE1BQXJCQyxZQUFxQixjQUFyQkEsWUFBcUI7QUFDM0UsTUFBTUMsT0FBTyxHQUFHLDBCQUFZLGFBQVosQ0FBaEI7QUFDQSxNQUFNQyxhQUFhLEdBQUdILE9BQU8sQ0FBQ0ksSUFBUixDQUFhO0FBQUEsUUFBR0MsS0FBSCxTQUFHQSxLQUFIO0FBQUEsV0FBZUosWUFBWSxLQUFLSSxLQUFqQixJQUEyQixDQUFDSixZQUFELElBQWlCLENBQUNJLEtBQTVEO0FBQUEsR0FBYixDQUF0QjtBQUVBLHNCQUNFLHVEQUNFO0FBQVEsdUJBQWlCRixhQUFhLEdBQUdELE9BQUgsR0FBYUksU0FBbkQ7QUFBOEQsSUFBQSxZQUFZLEVBQUVMLFlBQTVFO0FBQTBGLElBQUEsUUFBUSxFQUFFLENBQUM7QUFBckcsS0FDR0QsT0FBTyxDQUFDTyxHQUFSLENBQVksVUFBQUMsTUFBTTtBQUFBLHdCQUNqQjtBQUFRLE1BQUEsRUFBRSxFQUFFQSxNQUFNLEtBQUtMLGFBQVgsR0FBMkJELE9BQTNCLEdBQXFDSSxTQUFqRDtBQUE0RCxNQUFBLEdBQUcsRUFBRUUsTUFBTSxDQUFDSCxLQUF4RTtBQUErRSxNQUFBLEtBQUssRUFBRUcsTUFBTSxDQUFDSDtBQUE3RixPQUNHRyxNQUFNLENBQUNDLEtBRFYsQ0FEaUI7QUFBQSxHQUFsQixDQURILENBREYsQ0FERjtBQVdELENBZkQ7O0FBaUJBWCwwQkFBMEIsQ0FBQ1ksU0FBM0IsR0FBdUM7QUFDckNYLEVBQUFBLEtBQUssRUFBRVksbUJBQVVDLEtBQVYsQ0FBZ0I7QUFDckJaLElBQUFBLE9BQU8sRUFBRVcsbUJBQVVFLE9BQVYsQ0FDUEYsbUJBQVVDLEtBQVYsQ0FBZ0I7QUFDZEgsTUFBQUEsS0FBSyxFQUFFRSxtQkFBVUcsTUFESDtBQUVkVCxNQUFBQSxLQUFLLEVBQUVNLG1CQUFVSTtBQUZILEtBQWhCLENBRE8sQ0FEWTtBQU9yQlYsSUFBQUEsS0FBSyxFQUFFTSxtQkFBVUk7QUFQSSxHQUFoQjtBQUQ4QixDQUF2Qzs7QUFZQSxJQUFNQyxzQkFBc0IsR0FBRyxTQUF6QkEsc0JBQXlCLFFBQWlCO0FBQUEsTUFBZEMsT0FBYyxTQUFkQSxPQUFjO0FBQzlDLE1BQU1mLE9BQU8sR0FBRywwQkFBWSxhQUFaLENBQWhCO0FBQ0EsTUFBTWdCLFFBQVEsR0FBRy9CLFlBQVksRUFBN0I7QUFDQSxNQUFNZ0MscUJBQXFCLEdBQUcsd0NBQTlCOztBQUg4Qyw4QkFnQjFDLHVDQWhCMEM7QUFBQTtBQUFBO0FBQUEsTUFNMUNDLGNBTjBDLDBCQU0xQ0EsY0FOMEM7QUFBQSxNQU8xQ0MsU0FQMEMsMEJBTzFDQSxTQVAwQztBQUFBLE1BUTFDQyxXQVIwQywwQkFRMUNBLFdBUjBDO0FBQUEsTUFTMUNDLGFBVDBDLDBCQVMxQ0EsYUFUMEM7QUFBQSxNQVUxQ0MsY0FWMEMsMEJBVTFDQSxjQVYwQztBQUFBLE1BVzFDQyxZQVgwQywwQkFXMUNBLFlBWDBDO0FBQUEsTUFZMUNDLFNBWjBDLDBCQVkxQ0EsU0FaMEM7QUFBQSxNQWExQ0MsU0FiMEMsMEJBYTFDQSxTQWIwQztBQUFBLE1BYzFDQyxXQWQwQywwQkFjMUNBLFdBZDBDOztBQWtCOUMsTUFBTUMsSUFBSSxHQUFHLG9CQUFRO0FBQUEsV0FBTVYscUJBQXFCLENBQUNGLE9BQUQsRUFBVTtBQUFFYSxNQUFBQSxZQUFZLEVBQUU7QUFBaEIsS0FBVixDQUEzQjtBQUFBLEdBQVIsRUFBc0UsQ0FBQ2IsT0FBRCxFQUFVRSxxQkFBVixDQUF0RSxDQUFiO0FBQ0EsTUFBTVksTUFBTSxHQUFHLG9CQUFRLFlBQU07QUFDM0IsUUFBTUEsTUFBTSxHQUFHLEVBQWY7QUFFQTFDLElBQUFBLFlBQVksQ0FBQ3dDLElBQUQsRUFBTyxVQUFBdkMsSUFBSSxFQUFJO0FBQ3pCLFVBQ0VBLElBQUksWUFBWThCLGNBQWhCLElBQ0E5QixJQUFJLFlBQVkrQixTQURoQixJQUVBL0IsSUFBSSxZQUFZZ0MsV0FGaEIsSUFHQWhDLElBQUksWUFBWWlDLGFBSGhCLElBSUFqQyxJQUFJLFlBQVlrQyxjQUpoQixJQUtBbEMsSUFBSSxZQUFZbUMsWUFMaEIsSUFNQW5DLElBQUksWUFBWW9DLFNBTmhCLElBT0FwQyxJQUFJLFlBQVlxQyxTQVBoQixJQVFBckMsSUFBSSxZQUFZc0MsV0FUbEIsRUFVRTtBQUNBRyxRQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWTFDLElBQVo7QUFDRDtBQUNGLEtBZFcsQ0FBWjtBQWdCQSxXQUFPeUMsTUFBUDtBQUNELEdBcEJjLEVBb0JaLENBQUNGLElBQUQsQ0FwQlksQ0FBZjtBQXNCQSxNQUFNSSxTQUFTLEdBQUdmLFFBQVEsQ0FBQyxpQkFBRCxFQUFvQlcsSUFBSSxDQUFDSyxLQUFMLElBQWMsRUFBbEMsRUFBc0MsRUFBdEMsRUFBMEMsRUFBMUMsQ0FBMUI7QUFFQSxzQkFDRTtBQUFTLHVCQUFpQmhDO0FBQTFCLGtCQUNFO0FBQUssSUFBQSxFQUFFLEVBQUVBO0FBQVQsS0FBbUIrQixTQUFuQixDQURGLEVBRUdGLE1BQU0sQ0FBQ3hCLEdBQVAsQ0FBVyxVQUFDUixLQUFELEVBQVFKLEtBQVI7QUFBQSxXQUNWSSxLQUFLLFlBQVlxQixjQUFqQixnQkFDRSw2QkFBQywwQkFBRDtBQUE0QixNQUFBLEtBQUssRUFBRXJCLEtBQW5DO0FBQTBDLE1BQUEsR0FBRyxFQUFFSjtBQUEvQyxNQURGLEdBRUlJLEtBQUssWUFBWXNCLFNBQWpCLGdCQUNGO0FBQUssTUFBQSxHQUFHLEVBQUUxQjtBQUFWLG9CQUNFO0FBQU8sTUFBQSxXQUFXLEVBQUVJLEtBQUssQ0FBQ29DLFdBQTFCO0FBQXVDLE1BQUEsUUFBUSxFQUFFLENBQUMsQ0FBbEQ7QUFBcUQsTUFBQSxJQUFJLEVBQUM7QUFBMUQsTUFERixDQURFLEdBSUFwQyxLQUFLLFlBQVl1QixXQUFqQixnQkFDRjtBQUFLLE1BQUEsR0FBRyxFQUFFM0I7QUFBVixvQkFDRTtBQUFPLE1BQUEsV0FBVyxFQUFFSSxLQUFLLENBQUNvQyxXQUExQjtBQUF1QyxNQUFBLFFBQVEsRUFBRSxDQUFDLENBQWxEO0FBQXFELE1BQUEsSUFBSSxFQUFDO0FBQTFELE1BREYsQ0FERSxHQUlBcEMsS0FBSyxZQUFZd0IsYUFBakIsSUFBa0N4QixLQUFLLFlBQVl5QixjQUFuRCxJQUFxRXpCLEtBQUssWUFBWTBCLFlBQXRGLGdCQUNGO0FBQUssTUFBQSxHQUFHLEVBQUU5QjtBQUFWLG9CQUNFO0FBQVEsTUFBQSxRQUFRLEVBQUUsQ0FBQyxDQUFuQjtBQUFzQixNQUFBLElBQUksRUFBQztBQUEzQixPQUNHSSxLQUFLLENBQUNVLEtBRFQsQ0FERixDQURFLEdBTUFWLEtBQUssWUFBWTJCLFNBQWpCLGdCQUNGO0FBQUssTUFBQSxHQUFHLEVBQUUvQjtBQUFWLG9CQUNFO0FBQU8sTUFBQSxXQUFXLEVBQUVJLEtBQUssQ0FBQ29DLFdBQTFCO0FBQXVDLE1BQUEsUUFBUSxFQUFFLENBQUMsQ0FBbEQ7QUFBcUQsTUFBQSxJQUFJLEVBQUM7QUFBMUQsTUFERixDQURFLEdBSUFwQyxLQUFLLFlBQVk0QixTQUFqQixnQkFDRjtBQUFLLE1BQUEsR0FBRyxFQUFFaEM7QUFBVixvQkFDRTtBQUFPLE1BQUEsV0FBVyxFQUFFSSxLQUFLLENBQUNvQyxXQUExQjtBQUF1QyxNQUFBLFFBQVEsRUFBRSxDQUFDLENBQWxEO0FBQXFELE1BQUEsSUFBSSxFQUFDO0FBQTFELE1BREYsQ0FERSxHQUlBcEMsS0FBSyxZQUFZNkIsV0FBakIsZ0JBQ0Y7QUFBSyxNQUFBLEdBQUcsRUFBRWpDO0FBQVYsT0FDR0ksS0FBSyxDQUFDVSxLQURULGVBRUU7QUFBTyxNQUFBLGNBQWMsRUFBRVYsS0FBSyxDQUFDTSxLQUFOLEtBQWdCTixLQUFLLENBQUNxQyxPQUE3QztBQUFzRCxNQUFBLFFBQVEsRUFBRSxDQUFDLENBQWpFO0FBQW9FLE1BQUEsSUFBSSxFQUFDO0FBQXpFLE1BRkYsQ0FERSxHQU1GLEtBL0JRO0FBQUEsR0FBWCxDQUZILENBREY7QUF1Q0QsQ0FsRkQ7O0FBb0ZBcEIsc0JBQXNCLENBQUNOLFNBQXZCLEdBQW1DO0FBQ2pDTyxFQUFBQSxPQUFPLEVBQUVOLG1CQUFVSSxHQUFWLENBQWNzQjtBQURVLENBQW5DO2VBSWVyQixzQiIsInNvdXJjZVJvb3QiOiJidW5kbGU6Ly8vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaG9va3MgfSBmcm9tICdib3RmcmFtZXdvcmstd2ViY2hhdC1jb21wb25lbnQnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCwgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgdXNlQWRhcHRpdmVDYXJkc1BhY2thZ2UgZnJvbSAnLi4vaG9va3MvdXNlQWRhcHRpdmVDYXJkc1BhY2thZ2UnO1xuaW1wb3J0IHVzZVBhcnNlQWRhcHRpdmVDYXJkSlNPTiBmcm9tICcuLi9ob29rcy9pbnRlcm5hbC91c2VQYXJzZUFkYXB0aXZlQ2FyZEpTT04nO1xuaW1wb3J0IHVzZVVuaXF1ZUlkIGZyb20gJy4uL2hvb2tzL2ludGVybmFsL3VzZVVuaXF1ZUlkJztcblxuY29uc3QgeyB1c2VMb2NhbGl6ZXIgfSA9IGhvb2tzO1xuXG4vLyBQZXJmb3JtIGEgZGVwdGgtZmlyc3Qgc2VhcmNoIG9mIHRoZSBBZGFwdGl2ZSBDYXJkIHRyZWUuXG5mdW5jdGlvbiB3YWxrQWxsSXRlbXMobm9kZSwgZm4pIHtcbiAgZm4obm9kZSk7XG5cbiAgaWYgKG5vZGUuZ2V0SXRlbUF0ICYmIG5vZGUuZ2V0SXRlbUNvdW50KSB7XG4gICAgZm9yIChsZXQgY291bnQgPSBub2RlLmdldEl0ZW1Db3VudCgpLCBpbmRleCA9IDA7IGluZGV4IDwgY291bnQ7IGluZGV4KyspIHtcbiAgICAgIHdhbGtBbGxJdGVtcyhub2RlLmdldEl0ZW1BdChpbmRleCksIGZuKTtcbiAgICB9XG4gIH1cblxuICBpZiAobm9kZS5nZXRBY3Rpb25BdCAmJiBub2RlLmdldEFjdGlvbkNvdW50KSB7XG4gICAgZm9yIChsZXQgY291bnQgPSBub2RlLmdldEFjdGlvbkNvdW50KCksIGluZGV4ID0gMDsgaW5kZXggPCBjb3VudDsgaW5kZXgrKykge1xuICAgICAgZm4obm9kZS5nZXRBY3Rpb25BdChpbmRleCkpO1xuICAgIH1cbiAgfVxufVxuXG5jb25zdCBBZGFwdGl2ZUNhcmRDaG9pY2VTZXRJbnB1dCA9ICh7IGlucHV0OiB7IGNob2ljZXMsIGRlZmF1bHRWYWx1ZSB9IH0pID0+IHtcbiAgY29uc3QgbGFiZWxJZCA9IHVzZVVuaXF1ZUlkKCd3ZWJjaGF0X19pZCcpO1xuICBjb25zdCBkZWZhdWx0Q2hvaWNlID0gY2hvaWNlcy5maW5kKCh7IHZhbHVlIH0pID0+IGRlZmF1bHRWYWx1ZSA9PT0gdmFsdWUgfHwgKCFkZWZhdWx0VmFsdWUgJiYgIXZhbHVlKSk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPHNlbGVjdCBhcmlhLWxhYmVsbGVkYnk9e2RlZmF1bHRDaG9pY2UgPyBsYWJlbElkIDogdW5kZWZpbmVkfSBkZWZhdWx0VmFsdWU9e2RlZmF1bHRWYWx1ZX0gdGFiSW5kZXg9ey0xfT5cbiAgICAgICAge2Nob2ljZXMubWFwKGNob2ljZSA9PiAoXG4gICAgICAgICAgPG9wdGlvbiBpZD17Y2hvaWNlID09PSBkZWZhdWx0Q2hvaWNlID8gbGFiZWxJZCA6IHVuZGVmaW5lZH0ga2V5PXtjaG9pY2UudmFsdWV9IHZhbHVlPXtjaG9pY2UudmFsdWV9PlxuICAgICAgICAgICAge2Nob2ljZS50aXRsZX1cbiAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgKSl9XG4gICAgICA8L3NlbGVjdD5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbkFkYXB0aXZlQ2FyZENob2ljZVNldElucHV0LnByb3BUeXBlcyA9IHtcbiAgaW5wdXQ6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgY2hvaWNlczogUHJvcFR5cGVzLmFycmF5T2YoXG4gICAgICBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICAgICAgdmFsdWU6IFByb3BUeXBlcy5hbnlcbiAgICAgIH0pXG4gICAgKSxcbiAgICB2YWx1ZTogUHJvcFR5cGVzLmFueVxuICB9KVxufTtcblxuY29uc3QgQWRhcHRpdmVDYXJkQXR0YWNobWVudCA9ICh7IGNvbnRlbnQgfSkgPT4ge1xuICBjb25zdCBsYWJlbElkID0gdXNlVW5pcXVlSWQoJ3dlYmNoYXRfX2lkJyk7XG4gIGNvbnN0IGxvY2FsaXplID0gdXNlTG9jYWxpemVyKCk7XG4gIGNvbnN0IHBhcnNlQWRhcHRpdmVDYXJkSlNPTiA9IHVzZVBhcnNlQWRhcHRpdmVDYXJkSlNPTigpO1xuICBjb25zdCBbXG4gICAge1xuICAgICAgQ2hvaWNlU2V0SW5wdXQsXG4gICAgICBEYXRlSW5wdXQsXG4gICAgICBOdW1iZXJJbnB1dCxcbiAgICAgIE9wZW5VcmxBY3Rpb24sXG4gICAgICBTaG93Q2FyZEFjdGlvbixcbiAgICAgIFN1Ym1pdEFjdGlvbixcbiAgICAgIFRleHRJbnB1dCxcbiAgICAgIFRpbWVJbnB1dCxcbiAgICAgIFRvZ2dsZUlucHV0XG4gICAgfVxuICBdID0gdXNlQWRhcHRpdmVDYXJkc1BhY2thZ2UoKTtcblxuICBjb25zdCBjYXJkID0gdXNlTWVtbygoKSA9PiBwYXJzZUFkYXB0aXZlQ2FyZEpTT04oY29udGVudCwgeyBpZ25vcmVFcnJvcnM6IHRydWUgfSksIFtjb250ZW50LCBwYXJzZUFkYXB0aXZlQ2FyZEpTT05dKTtcbiAgY29uc3QgaW5wdXRzID0gdXNlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgaW5wdXRzID0gW107XG5cbiAgICB3YWxrQWxsSXRlbXMoY2FyZCwgbm9kZSA9PiB7XG4gICAgICBpZiAoXG4gICAgICAgIG5vZGUgaW5zdGFuY2VvZiBDaG9pY2VTZXRJbnB1dCB8fFxuICAgICAgICBub2RlIGluc3RhbmNlb2YgRGF0ZUlucHV0IHx8XG4gICAgICAgIG5vZGUgaW5zdGFuY2VvZiBOdW1iZXJJbnB1dCB8fFxuICAgICAgICBub2RlIGluc3RhbmNlb2YgT3BlblVybEFjdGlvbiB8fFxuICAgICAgICBub2RlIGluc3RhbmNlb2YgU2hvd0NhcmRBY3Rpb24gfHxcbiAgICAgICAgbm9kZSBpbnN0YW5jZW9mIFN1Ym1pdEFjdGlvbiB8fFxuICAgICAgICBub2RlIGluc3RhbmNlb2YgVGV4dElucHV0IHx8XG4gICAgICAgIG5vZGUgaW5zdGFuY2VvZiBUaW1lSW5wdXQgfHxcbiAgICAgICAgbm9kZSBpbnN0YW5jZW9mIFRvZ2dsZUlucHV0XG4gICAgICApIHtcbiAgICAgICAgaW5wdXRzLnB1c2gobm9kZSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gaW5wdXRzO1xuICB9LCBbY2FyZF0pO1xuXG4gIGNvbnN0IGNhcmRMYWJlbCA9IGxvY2FsaXplKCdBVFRBQ0hNRU5UX0NBUkQnLCBjYXJkLnNwZWFrIHx8ICcnLCAnJywgJycpO1xuXG4gIHJldHVybiAoXG4gICAgPGFydGljbGUgYXJpYS1sYWJlbGxlZGJ5PXtsYWJlbElkfT5cbiAgICAgIDxkaXYgaWQ9e2xhYmVsSWR9PntjYXJkTGFiZWx9PC9kaXY+XG4gICAgICB7aW5wdXRzLm1hcCgoaW5wdXQsIGluZGV4KSA9PlxuICAgICAgICBpbnB1dCBpbnN0YW5jZW9mIENob2ljZVNldElucHV0ID8gKFxuICAgICAgICAgIDxBZGFwdGl2ZUNhcmRDaG9pY2VTZXRJbnB1dCBpbnB1dD17aW5wdXR9IGtleT17aW5kZXh9IC8+XG4gICAgICAgICkgOiBpbnB1dCBpbnN0YW5jZW9mIERhdGVJbnB1dCA/IChcbiAgICAgICAgICA8ZGl2IGtleT17aW5kZXh9PlxuICAgICAgICAgICAgPGlucHV0IHBsYWNlaG9sZGVyPXtpbnB1dC5wbGFjZWhvbGRlcn0gdGFiSW5kZXg9ey0xfSB0eXBlPVwiZGF0ZVwiIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICkgOiBpbnB1dCBpbnN0YW5jZW9mIE51bWJlcklucHV0ID8gKFxuICAgICAgICAgIDxkaXYga2V5PXtpbmRleH0+XG4gICAgICAgICAgICA8aW5wdXQgcGxhY2Vob2xkZXI9e2lucHV0LnBsYWNlaG9sZGVyfSB0YWJJbmRleD17LTF9IHR5cGU9XCJudW1iZXJcIiAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApIDogaW5wdXQgaW5zdGFuY2VvZiBPcGVuVXJsQWN0aW9uIHx8IGlucHV0IGluc3RhbmNlb2YgU2hvd0NhcmRBY3Rpb24gfHwgaW5wdXQgaW5zdGFuY2VvZiBTdWJtaXRBY3Rpb24gPyAoXG4gICAgICAgICAgPGRpdiBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgIDxidXR0b24gdGFiSW5kZXg9ey0xfSB0eXBlPVwiYnV0dG9uXCI+XG4gICAgICAgICAgICAgIHtpbnB1dC50aXRsZX1cbiAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApIDogaW5wdXQgaW5zdGFuY2VvZiBUZXh0SW5wdXQgPyAoXG4gICAgICAgICAgPGRpdiBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgIDxpbnB1dCBwbGFjZWhvbGRlcj17aW5wdXQucGxhY2Vob2xkZXJ9IHRhYkluZGV4PXstMX0gdHlwZT1cInRleHRcIiAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApIDogaW5wdXQgaW5zdGFuY2VvZiBUaW1lSW5wdXQgPyAoXG4gICAgICAgICAgPGRpdiBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgIDxpbnB1dCBwbGFjZWhvbGRlcj17aW5wdXQucGxhY2Vob2xkZXJ9IHRhYkluZGV4PXstMX0gdHlwZT1cInRpbWVcIiAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApIDogaW5wdXQgaW5zdGFuY2VvZiBUb2dnbGVJbnB1dCA/IChcbiAgICAgICAgICA8ZGl2IGtleT17aW5kZXh9PlxuICAgICAgICAgICAge2lucHV0LnRpdGxlfVxuICAgICAgICAgICAgPGlucHV0IGRlZmF1bHRDaGVja2VkPXtpbnB1dC52YWx1ZSA9PT0gaW5wdXQudmFsdWVPbn0gdGFiSW5kZXg9ey0xfSB0eXBlPVwiY2hlY2tib3hcIiAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApIDogKFxuICAgICAgICAgIGZhbHNlXG4gICAgICAgIClcbiAgICAgICl9XG4gICAgPC9hcnRpY2xlPlxuICApO1xufTtcblxuQWRhcHRpdmVDYXJkQXR0YWNobWVudC5wcm9wVHlwZXMgPSB7XG4gIGNvbnRlbnQ6IFByb3BUeXBlcy5hbnkuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQWRhcHRpdmVDYXJkQXR0YWNobWVudDtcbiJdfQ==