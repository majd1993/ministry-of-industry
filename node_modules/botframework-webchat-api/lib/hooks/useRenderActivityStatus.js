"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useRenderActivityStatus;

var _react = require("react");

var _useCreateActivityStatusRenderer = _interopRequireDefault(require("./useCreateActivityStatusRenderer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Previously, useRenderActivity() was called like this:
//
// const element = useRenderActivityStatus({ activity, nextVisibleActivity });
// Now, the useCreateActivityRenderer() is a 3-pass function:
//
// const createActivityStatusRenderer = useCreateActivityStatusRenderer();
// const renderActivityStatus = createActivityStatusRenderer({ activity, hideTimestamp });
// const element = renderActivityStatus && renderActivityStatus(undefined);
// Despite deprecation, useRenderActivityStatus() can be retrofitted using useCreateActivityStatusRenderer().
var showDeprecationNotes = true;

function useRenderActivityStatus(_ref) {
  var activity = _ref.activity,
      nextVisibleActivity = _ref.nextVisibleActivity;

  if (showDeprecationNotes) {
    console.warn('botframework-webchat: "useRenderActivityStatus" is deprecated and will be removed on or after 2022-07-22. Please use "useCreateActivityStatusRenderer()" instead.');
    showDeprecationNotes = false;
  }

  var createActivityStatusRenderer = (0, _useCreateActivityStatusRenderer.default)();
  return (0, _react.useMemo)(function () {
    var renderActivityStatus = createActivityStatusRenderer({
      activity: activity,
      nextVisibleActivity: nextVisibleActivity
    });
    return !!renderActivityStatus && renderActivityStatus;
  }, [activity, createActivityStatusRenderer, nextVisibleActivity]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ob29rcy91c2VSZW5kZXJBY3Rpdml0eVN0YXR1cy5qcyJdLCJuYW1lcyI6WyJzaG93RGVwcmVjYXRpb25Ob3RlcyIsInVzZVJlbmRlckFjdGl2aXR5U3RhdHVzIiwiYWN0aXZpdHkiLCJuZXh0VmlzaWJsZUFjdGl2aXR5IiwiY29uc29sZSIsIndhcm4iLCJjcmVhdGVBY3Rpdml0eVN0YXR1c1JlbmRlcmVyIiwicmVuZGVyQWN0aXZpdHlTdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7OztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBLElBQUlBLG9CQUFvQixHQUFHLElBQTNCOztBQUVlLFNBQVNDLHVCQUFULE9BQW9FO0FBQUEsTUFBakNDLFFBQWlDLFFBQWpDQSxRQUFpQztBQUFBLE1BQXZCQyxtQkFBdUIsUUFBdkJBLG1CQUF1Qjs7QUFDakYsTUFBSUgsb0JBQUosRUFBMEI7QUFDeEJJLElBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUNFLG1LQURGO0FBSUFMLElBQUFBLG9CQUFvQixHQUFHLEtBQXZCO0FBQ0Q7O0FBRUQsTUFBTU0sNEJBQTRCLEdBQUcsK0NBQXJDO0FBRUEsU0FBTyxvQkFBUSxZQUFNO0FBQ25CLFFBQU1DLG9CQUFvQixHQUFHRCw0QkFBNEIsQ0FBQztBQUFFSixNQUFBQSxRQUFRLEVBQVJBLFFBQUY7QUFBWUMsTUFBQUEsbUJBQW1CLEVBQW5CQTtBQUFaLEtBQUQsQ0FBekQ7QUFFQSxXQUFPLENBQUMsQ0FBQ0ksb0JBQUYsSUFBMEJBLG9CQUFqQztBQUNELEdBSk0sRUFJSixDQUFDTCxRQUFELEVBQVdJLDRCQUFYLEVBQXlDSCxtQkFBekMsQ0FKSSxDQUFQO0FBS0QiLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB1c2VDcmVhdGVBY3Rpdml0eVN0YXR1c1JlbmRlcmVyIGZyb20gJy4vdXNlQ3JlYXRlQWN0aXZpdHlTdGF0dXNSZW5kZXJlcic7XG5cbi8vIFByZXZpb3VzbHksIHVzZVJlbmRlckFjdGl2aXR5KCkgd2FzIGNhbGxlZCBsaWtlIHRoaXM6XG4vL1xuLy8gY29uc3QgZWxlbWVudCA9IHVzZVJlbmRlckFjdGl2aXR5U3RhdHVzKHsgYWN0aXZpdHksIG5leHRWaXNpYmxlQWN0aXZpdHkgfSk7XG5cbi8vIE5vdywgdGhlIHVzZUNyZWF0ZUFjdGl2aXR5UmVuZGVyZXIoKSBpcyBhIDMtcGFzcyBmdW5jdGlvbjpcbi8vXG4vLyBjb25zdCBjcmVhdGVBY3Rpdml0eVN0YXR1c1JlbmRlcmVyID0gdXNlQ3JlYXRlQWN0aXZpdHlTdGF0dXNSZW5kZXJlcigpO1xuLy8gY29uc3QgcmVuZGVyQWN0aXZpdHlTdGF0dXMgPSBjcmVhdGVBY3Rpdml0eVN0YXR1c1JlbmRlcmVyKHsgYWN0aXZpdHksIGhpZGVUaW1lc3RhbXAgfSk7XG4vLyBjb25zdCBlbGVtZW50ID0gcmVuZGVyQWN0aXZpdHlTdGF0dXMgJiYgcmVuZGVyQWN0aXZpdHlTdGF0dXModW5kZWZpbmVkKTtcblxuLy8gRGVzcGl0ZSBkZXByZWNhdGlvbiwgdXNlUmVuZGVyQWN0aXZpdHlTdGF0dXMoKSBjYW4gYmUgcmV0cm9maXR0ZWQgdXNpbmcgdXNlQ3JlYXRlQWN0aXZpdHlTdGF0dXNSZW5kZXJlcigpLlxuXG5sZXQgc2hvd0RlcHJlY2F0aW9uTm90ZXMgPSB0cnVlO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VSZW5kZXJBY3Rpdml0eVN0YXR1cyh7IGFjdGl2aXR5LCBuZXh0VmlzaWJsZUFjdGl2aXR5IH0pIHtcbiAgaWYgKHNob3dEZXByZWNhdGlvbk5vdGVzKSB7XG4gICAgY29uc29sZS53YXJuKFxuICAgICAgJ2JvdGZyYW1ld29yay13ZWJjaGF0OiBcInVzZVJlbmRlckFjdGl2aXR5U3RhdHVzXCIgaXMgZGVwcmVjYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkIG9uIG9yIGFmdGVyIDIwMjItMDctMjIuIFBsZWFzZSB1c2UgXCJ1c2VDcmVhdGVBY3Rpdml0eVN0YXR1c1JlbmRlcmVyKClcIiBpbnN0ZWFkLidcbiAgICApO1xuXG4gICAgc2hvd0RlcHJlY2F0aW9uTm90ZXMgPSBmYWxzZTtcbiAgfVxuXG4gIGNvbnN0IGNyZWF0ZUFjdGl2aXR5U3RhdHVzUmVuZGVyZXIgPSB1c2VDcmVhdGVBY3Rpdml0eVN0YXR1c1JlbmRlcmVyKCk7XG5cbiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4ge1xuICAgIGNvbnN0IHJlbmRlckFjdGl2aXR5U3RhdHVzID0gY3JlYXRlQWN0aXZpdHlTdGF0dXNSZW5kZXJlcih7IGFjdGl2aXR5LCBuZXh0VmlzaWJsZUFjdGl2aXR5IH0pO1xuXG4gICAgcmV0dXJuICEhcmVuZGVyQWN0aXZpdHlTdGF0dXMgJiYgcmVuZGVyQWN0aXZpdHlTdGF0dXM7XG4gIH0sIFthY3Rpdml0eSwgY3JlYXRlQWN0aXZpdHlTdGF0dXNSZW5kZXJlciwgbmV4dFZpc2libGVBY3Rpdml0eV0pO1xufVxuIl19