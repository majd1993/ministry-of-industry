"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createDefaultCardActionMiddleware;

var _botframeworkWebchatCore = require("botframework-webchat-core");

function createDefaultCardActionMiddleware() {
  return function (_ref) {
    var dispatch = _ref.dispatch;
    return function (next) {
      return function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        var _args$0$cardAction = args[0].cardAction,
            displayText = _args$0$cardAction.displayText,
            text = _args$0$cardAction.text,
            type = _args$0$cardAction.type,
            value = _args$0$cardAction.value;

        switch (type) {
          case 'imBack':
            if (typeof value === 'string') {
              // TODO: [P4] Instead of calling dispatch, we should move to dispatchers instead for completeness
              dispatch((0, _botframeworkWebchatCore.sendMessage)(value, 'imBack'));
            } else {
              throw new Error('cannot send "imBack" with a non-string value');
            }

            break;

          case 'messageBack':
            dispatch((0, _botframeworkWebchatCore.sendMessageBack)(value, text, displayText));
            break;

          case 'postBack':
            dispatch((0, _botframeworkWebchatCore.sendPostBack)(value));
            break;

          default:
            return next.apply(void 0, args);
        }
      };
    };
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ob29rcy9taWRkbGV3YXJlL2NyZWF0ZURlZmF1bHRDYXJkQWN0aW9uTWlkZGxld2FyZS5qcyJdLCJuYW1lcyI6WyJjcmVhdGVEZWZhdWx0Q2FyZEFjdGlvbk1pZGRsZXdhcmUiLCJkaXNwYXRjaCIsIm5leHQiLCJhcmdzIiwiY2FyZEFjdGlvbiIsImRpc3BsYXlUZXh0IiwidGV4dCIsInR5cGUiLCJ2YWx1ZSIsIkVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRWUsU0FBU0EsaUNBQVQsR0FBNkM7QUFDMUQsU0FBTztBQUFBLFFBQUdDLFFBQUgsUUFBR0EsUUFBSDtBQUFBLFdBQWtCLFVBQUFDLElBQUk7QUFBQSxhQUFJLFlBQWE7QUFBQSwwQ0FBVEMsSUFBUztBQUFUQSxVQUFBQSxJQUFTO0FBQUE7O0FBQUEsaUNBS3hDQSxJQUx3QyxJQUd4Q0MsVUFId0M7QUFBQSxZQUcxQkMsV0FIMEIsc0JBRzFCQSxXQUgwQjtBQUFBLFlBR2JDLElBSGEsc0JBR2JBLElBSGE7QUFBQSxZQUdQQyxJQUhPLHNCQUdQQSxJQUhPO0FBQUEsWUFHREMsS0FIQyxzQkFHREEsS0FIQzs7QUFPNUMsZ0JBQVFELElBQVI7QUFDRSxlQUFLLFFBQUw7QUFDRSxnQkFBSSxPQUFPQyxLQUFQLEtBQWlCLFFBQXJCLEVBQStCO0FBQzdCO0FBQ0FQLGNBQUFBLFFBQVEsQ0FBQywwQ0FBWU8sS0FBWixFQUFtQixRQUFuQixDQUFELENBQVI7QUFDRCxhQUhELE1BR087QUFDTCxvQkFBTSxJQUFJQyxLQUFKLENBQVUsOENBQVYsQ0FBTjtBQUNEOztBQUVEOztBQUVGLGVBQUssYUFBTDtBQUNFUixZQUFBQSxRQUFRLENBQUMsOENBQWdCTyxLQUFoQixFQUF1QkYsSUFBdkIsRUFBNkJELFdBQTdCLENBQUQsQ0FBUjtBQUVBOztBQUVGLGVBQUssVUFBTDtBQUNFSixZQUFBQSxRQUFRLENBQUMsMkNBQWFPLEtBQWIsQ0FBRCxDQUFSO0FBRUE7O0FBRUY7QUFDRSxtQkFBT04sSUFBSSxNQUFKLFNBQVFDLElBQVIsQ0FBUDtBQXRCSjtBQXdCRCxPQS9CNEI7QUFBQSxLQUF0QjtBQUFBLEdBQVA7QUFnQ0QiLCJzb3VyY2VSb290IjoiY29tcG9uZW50Oi8vLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlbmRNZXNzYWdlLCBzZW5kTWVzc2FnZUJhY2ssIHNlbmRQb3N0QmFjayB9IGZyb20gJ2JvdGZyYW1ld29yay13ZWJjaGF0LWNvcmUnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVEZWZhdWx0Q2FyZEFjdGlvbk1pZGRsZXdhcmUoKSB7XG4gIHJldHVybiAoeyBkaXNwYXRjaCB9KSA9PiBuZXh0ID0+ICguLi5hcmdzKSA9PiB7XG4gICAgY29uc3QgW1xuICAgICAge1xuICAgICAgICBjYXJkQWN0aW9uOiB7IGRpc3BsYXlUZXh0LCB0ZXh0LCB0eXBlLCB2YWx1ZSB9XG4gICAgICB9XG4gICAgXSA9IGFyZ3M7XG5cbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgJ2ltQmFjayc6XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgLy8gVE9ETzogW1A0XSBJbnN0ZWFkIG9mIGNhbGxpbmcgZGlzcGF0Y2gsIHdlIHNob3VsZCBtb3ZlIHRvIGRpc3BhdGNoZXJzIGluc3RlYWQgZm9yIGNvbXBsZXRlbmVzc1xuICAgICAgICAgIGRpc3BhdGNoKHNlbmRNZXNzYWdlKHZhbHVlLCAnaW1CYWNrJykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignY2Fubm90IHNlbmQgXCJpbUJhY2tcIiB3aXRoIGEgbm9uLXN0cmluZyB2YWx1ZScpO1xuICAgICAgICB9XG5cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ21lc3NhZ2VCYWNrJzpcbiAgICAgICAgZGlzcGF0Y2goc2VuZE1lc3NhZ2VCYWNrKHZhbHVlLCB0ZXh0LCBkaXNwbGF5VGV4dCkpO1xuXG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdwb3N0QmFjayc6XG4gICAgICAgIGRpc3BhdGNoKHNlbmRQb3N0QmFjayh2YWx1ZSkpO1xuXG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gbmV4dCguLi5hcmdzKTtcbiAgICB9XG4gIH07XG59XG4iXX0=