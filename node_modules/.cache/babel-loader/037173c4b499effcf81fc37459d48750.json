{"ast":null,"code":"import _classCallCheck from \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/**\n * Responsible for building the object to be sent to the speech service to support dynamic grammars.\n * @class DynamicGrammarBuilder\n */\nexport var DynamicGrammarBuilder = /*#__PURE__*/function () {\n  function DynamicGrammarBuilder() {\n    _classCallCheck(this, DynamicGrammarBuilder);\n  }\n\n  _createClass(DynamicGrammarBuilder, [{\n    key: \"addPhrase\",\n    value: // Adds one more reference phrases to the dynamic grammar to send.\n    // All added phrases are generic phrases.\n    function addPhrase(phrase) {\n      if (!this.privPhrases) {\n        this.privPhrases = [];\n      }\n\n      if (phrase instanceof Array) {\n        this.privPhrases = this.privPhrases.concat(phrase);\n      } else {\n        this.privPhrases.push(phrase);\n      }\n    } // Clears all phrases stored in the current object.\n\n  }, {\n    key: \"clearPhrases\",\n    value: function clearPhrases() {\n      this.privPhrases = undefined;\n    } // Adds one or more reference grammars to the current grammar.\n\n  }, {\n    key: \"addReferenceGrammar\",\n    value: function addReferenceGrammar(grammar) {\n      if (!this.privGrammars) {\n        this.privGrammars = [];\n      }\n\n      if (grammar instanceof Array) {\n        this.privGrammars = this.privGrammars.concat(grammar);\n      } else {\n        this.privGrammars.push(grammar);\n      }\n    } // clears all grammars stored on the recognizer.\n\n  }, {\n    key: \"clearGrammars\",\n    value: function clearGrammars() {\n      this.privGrammars = undefined;\n    } // Generates an object that represents the dynamic grammar used by the Speech Service.\n    // This is done by building an object with the correct layout based on the phrases and reference grammars added to this instance\n    // of a DynamicGrammarBuilder\n\n  }, {\n    key: \"generateGrammarObject\",\n    value: function generateGrammarObject() {\n      if (this.privGrammars === undefined && this.privPhrases === undefined) {\n        return undefined;\n      }\n\n      var retObj = {};\n      retObj.ReferenceGrammars = this.privGrammars;\n\n      if (undefined !== this.privPhrases && 0 !== this.privPhrases.length) {\n        var retPhrases = [];\n        this.privPhrases.forEach(function (value, index, array) {\n          retPhrases.push({\n            Text: value\n          });\n        });\n        retObj.Groups = [{\n          Type: \"Generic\",\n          Items: retPhrases\n        }];\n      }\n\n      return retObj;\n    }\n  }]);\n\n  return DynamicGrammarBuilder;\n}();","map":{"version":3,"sources":["src/common.speech/DynamicGrammarBuilder.ts"],"names":[],"mappings":";;AAAA;AACA;;AAOA;;;AAGG;AACH,WAAa,qBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WAKI;AACA;AACO,uBAAU,MAAV,EAAmC;AACtC,UAAI,CAAC,KAAK,WAAV,EAAuB;AACnB,aAAK,WAAL,GAAmB,EAAnB;AACH;;AAED,UAAI,MAAM,YAAY,KAAtB,EAA6B;AACzB,aAAK,WAAL,GAAmB,KAAK,WAAL,CAAiB,MAAjB,CAAwB,MAAxB,CAAnB;AACH,OAFD,MAEO;AACH,aAAK,WAAL,CAAiB,IAAjB,CAAsB,MAAtB;AACH;AACJ,KAjBL,CAmBI;;AAnBJ;AAAA;AAAA,WAoBW,wBAAY;AACf,WAAK,WAAL,GAAmB,SAAnB;AACH,KAtBL,CAwBI;;AAxBJ;AAAA;AAAA,WAyBW,6BAAoB,OAApB,EAA8C;AACjD,UAAI,CAAC,KAAK,YAAV,EAAwB;AACpB,aAAK,YAAL,GAAoB,EAApB;AACH;;AAED,UAAI,OAAO,YAAY,KAAvB,EAA8B;AAC1B,aAAK,YAAL,GAAoB,KAAK,YAAL,CAAkB,MAAlB,CAAyB,OAAzB,CAApB;AACH,OAFD,MAEO;AACH,aAAK,YAAL,CAAkB,IAAlB,CAAuB,OAAvB;AACH;AACJ,KAnCL,CAqCI;;AArCJ;AAAA;AAAA,WAsCW,yBAAa;AAChB,WAAK,YAAL,GAAoB,SAApB;AACH,KAxCL,CA0CI;AACA;AACA;;AA5CJ;AAAA;AAAA,WA6CW,iCAAqB;AACxB,UAAI,KAAK,YAAL,KAAsB,SAAtB,IAAmC,KAAK,WAAL,KAAqB,SAA5D,EAAuE;AACnE,eAAO,SAAP;AACH;;AAED,UAAM,MAAM,GAAoB,EAAhC;AACA,MAAA,MAAM,CAAC,iBAAP,GAA2B,KAAK,YAAhC;;AAEA,UAAI,SAAS,KAAK,KAAK,WAAnB,IAAkC,MAAM,KAAK,WAAL,CAAiB,MAA7D,EAAqE;AACjE,YAAM,UAAU,GAA6B,EAA7C;AAEA,aAAK,WAAL,CAAiB,OAAjB,CAAyB,UAAC,KAAD,EAAgB,KAAhB,EAA+B,KAA/B,EAAwD;AAC7E,UAAA,UAAU,CAAC,IAAX,CAAgB;AACZ,YAAA,IAAI,EAAE;AADM,WAAhB;AAGH,SAJD;AAMA,QAAA,MAAM,CAAC,MAAP,GAAgB,CAAC;AAAE,UAAA,IAAI,EAAE,SAAR;AAAmB,UAAA,KAAK,EAAE;AAA1B,SAAD,CAAhB;AACH;;AAED,aAAO,MAAP;AACH;AAlEL;;AAAA;AAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    IDynamicGrammar,\r\n    IDynamicGrammarGeneric,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Responsible for building the object to be sent to the speech service to support dynamic grammars.\r\n * @class DynamicGrammarBuilder\r\n */\r\nexport class DynamicGrammarBuilder {\r\n\r\n    private privPhrases: string[];\r\n    private privGrammars: string[];\r\n\r\n    // Adds one more reference phrases to the dynamic grammar to send.\r\n    // All added phrases are generic phrases.\r\n    public addPhrase(phrase: string | string[]): void {\r\n        if (!this.privPhrases) {\r\n            this.privPhrases = [];\r\n        }\r\n\r\n        if (phrase instanceof Array) {\r\n            this.privPhrases = this.privPhrases.concat(phrase as string[]);\r\n        } else {\r\n            this.privPhrases.push(phrase as string);\r\n        }\r\n    }\r\n\r\n    // Clears all phrases stored in the current object.\r\n    public clearPhrases(): void {\r\n        this.privPhrases = undefined;\r\n    }\r\n\r\n    // Adds one or more reference grammars to the current grammar.\r\n    public addReferenceGrammar(grammar: string | string[]): void {\r\n        if (!this.privGrammars) {\r\n            this.privGrammars = [];\r\n        }\r\n\r\n        if (grammar instanceof Array) {\r\n            this.privGrammars = this.privGrammars.concat(grammar as string[]);\r\n        } else {\r\n            this.privGrammars.push(grammar as string);\r\n        }\r\n    }\r\n\r\n    // clears all grammars stored on the recognizer.\r\n    public clearGrammars(): void {\r\n        this.privGrammars = undefined;\r\n    }\r\n\r\n    // Generates an object that represents the dynamic grammar used by the Speech Service.\r\n    // This is done by building an object with the correct layout based on the phrases and reference grammars added to this instance\r\n    // of a DynamicGrammarBuilder\r\n    public generateGrammarObject(): IDynamicGrammar {\r\n        if (this.privGrammars === undefined && this.privPhrases === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        const retObj: IDynamicGrammar = {};\r\n        retObj.ReferenceGrammars = this.privGrammars;\r\n\r\n        if (undefined !== this.privPhrases && 0 !== this.privPhrases.length) {\r\n            const retPhrases: IDynamicGrammarGeneric[] = [];\r\n\r\n            this.privPhrases.forEach((value: string, index: number, array: string[]): void => {\r\n                retPhrases.push({\r\n                    Text: value,\r\n                });\r\n            });\r\n\r\n            retObj.Groups = [{ Type: \"Generic\", Items: retPhrases }];\r\n        }\r\n\r\n        return retObj;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}