{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = connectivityStatus;\n\nvar _connect = require(\"../actions/connect\");\n\nvar _reconnect = require(\"../actions/reconnect\");\n\nvar _disconnect = require(\"../actions/disconnect\");\n\nvar _sagaError = require(\"../actions/sagaError\");\n\nvar DEFAULT_STATE = 'uninitialized';\n\nfunction connectivityStatus() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_STATE;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      meta = _ref.meta;\n\n  if (state !== 'sagaerror') {\n    switch (type) {\n      case _connect.CONNECT_PENDING:\n      case _reconnect.RECONNECT_PENDING:\n        if (state !== 'uninitialized') {\n          state = 'reconnecting';\n        }\n\n        break;\n\n      case _connect.CONNECT_FULFILLED:\n        state = 'connected';\n        break;\n\n      case _reconnect.RECONNECT_FULFILLED:\n        state = 'reconnected';\n        break;\n\n      case _connect.CONNECT_REJECTED:\n        state = 'error';\n        break;\n\n      case _connect.CONNECT_STILL_PENDING:\n        state = 'connectingslow';\n        break;\n\n      case _disconnect.DISCONNECT_FULFILLED:\n        state = meta && meta.error ? 'error' : 'notconnected';\n        break;\n\n      case _sagaError.SAGA_ERROR:\n        state = 'sagaerror';\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return state;\n}","map":{"version":3,"sources":["../../src/reducers/connectivityStatus.js"],"names":["DEFAULT_STATE","state","type","meta","CONNECT_PENDING","RECONNECT_PENDING","CONNECT_FULFILLED","RECONNECT_FULFILLED","CONNECT_REJECTED","CONNECT_STILL_PENDING","DISCONNECT_FULFILLED","SAGA_ERROR"],"mappings":";;;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,IAAA,UAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAEA,IAAMA,aAAa,GAAnB,eAAA;;AAEe,SAAA,kBAAA,GAAmE;AAAA,MAAvCC,KAAuC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAA/BD,aAA+B;;AAAA,MAAA,IAAA,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA;AAAA,MAAdE,IAAc,GAAA,IAAA,CAAdA,IAAc;AAAA,MAARC,IAAQ,GAAA,IAAA,CAARA,IAAQ;;AAChF,MAAIF,KAAK,KAAT,WAAA,EAA2B;AACzB,YAAA,IAAA;AACE,WAAKG,QAAAA,CAAL,eAAA;AACA,WAAKC,UAAAA,CAAL,iBAAA;AACE,YAAIJ,KAAK,KAAT,eAAA,EAA+B;AAC7BA,UAAAA,KAAK,GAALA,cAAAA;AACD;;AAED;;AAEF,WAAKK,QAAAA,CAAL,iBAAA;AACEL,QAAAA,KAAK,GAALA,WAAAA;AACA;;AAEF,WAAKM,UAAAA,CAAL,mBAAA;AACEN,QAAAA,KAAK,GAALA,aAAAA;AACA;;AAEF,WAAKO,QAAAA,CAAL,gBAAA;AACEP,QAAAA,KAAK,GAALA,OAAAA;AACA;;AAEF,WAAKQ,QAAAA,CAAL,qBAAA;AACER,QAAAA,KAAK,GAALA,gBAAAA;AACA;;AAEF,WAAKS,WAAAA,CAAL,oBAAA;AACET,QAAAA,KAAK,GAAGE,IAAI,IAAIA,IAAI,CAAZA,KAAAA,GAAAA,OAAAA,GAARF,cAAAA;AACA;;AAEF,WAAKU,UAAAA,CAAL,UAAA;AACEV,QAAAA,KAAK,GAALA,WAAAA;AACA;;AAEF;AACE;AAlCJ;AAoCD;;AAED,SAAA,KAAA;AACD","sourcesContent":["import { CONNECT_FULFILLED, CONNECT_PENDING, CONNECT_REJECTED, CONNECT_STILL_PENDING } from '../actions/connect';\n\nimport { RECONNECT_PENDING, RECONNECT_FULFILLED } from '../actions/reconnect';\n\nimport { DISCONNECT_FULFILLED } from '../actions/disconnect';\nimport { SAGA_ERROR } from '../actions/sagaError';\n\nconst DEFAULT_STATE = 'uninitialized';\n\nexport default function connectivityStatus(state = DEFAULT_STATE, { type, meta }) {\n  if (state !== 'sagaerror') {\n    switch (type) {\n      case CONNECT_PENDING:\n      case RECONNECT_PENDING:\n        if (state !== 'uninitialized') {\n          state = 'reconnecting';\n        }\n\n        break;\n\n      case CONNECT_FULFILLED:\n        state = 'connected';\n        break;\n\n      case RECONNECT_FULFILLED:\n        state = 'reconnected';\n        break;\n\n      case CONNECT_REJECTED:\n        state = 'error';\n        break;\n\n      case CONNECT_STILL_PENDING:\n        state = 'connectingslow';\n        break;\n\n      case DISCONNECT_FULFILLED:\n        state = meta && meta.error ? 'error' : 'notconnected';\n        break;\n\n      case SAGA_ERROR:\n        state = 'sagaerror';\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return state;\n}\n"],"sourceRoot":"core:///"},"metadata":{},"sourceType":"script"}