{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createDefaultCardActionMiddleware;\n\nvar _botframeworkWebchatCore = require(\"botframework-webchat-core\");\n\nfunction createDefaultCardActionMiddleware() {\n  return function (_ref) {\n    var dispatch = _ref.dispatch;\n    return function (next) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var _args$0$cardAction = args[0].cardAction,\n            displayText = _args$0$cardAction.displayText,\n            text = _args$0$cardAction.text,\n            type = _args$0$cardAction.type,\n            value = _args$0$cardAction.value;\n\n        switch (type) {\n          case 'imBack':\n            if (typeof value === 'string') {\n              // TODO: [P4] Instead of calling dispatch, we should move to dispatchers instead for completeness\n              dispatch((0, _botframeworkWebchatCore.sendMessage)(value, 'imBack'));\n            } else {\n              throw new Error('cannot send \"imBack\" with a non-string value');\n            }\n\n            break;\n\n          case 'messageBack':\n            dispatch((0, _botframeworkWebchatCore.sendMessageBack)(value, text, displayText));\n            break;\n\n          case 'postBack':\n            dispatch((0, _botframeworkWebchatCore.sendPostBack)(value));\n            break;\n\n          default:\n            return next.apply(void 0, args);\n        }\n      };\n    };\n  };\n}","map":{"version":3,"sources":["../../../src/hooks/middleware/createDefaultCardActionMiddleware.js"],"names":["dispatch","args","displayText","text","type","value","next"],"mappings":";;;;;;;AAAA,IAAA,wBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AAEe,SAAA,iCAAA,GAA6C;AAC1D,SAAO,UAAA,IAAA,EAAA;AAAA,QAAGA,QAAH,GAAA,IAAA,CAAA,QAAA;AAAA,WAAkB,UAAA,IAAA,EAAI;AAAA,aAAI,YAAa;AAAA,aAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAATC,IAAS,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAATA,UAAAA,IAAS,CAAA,IAAA,CAATA,GAAS,SAAA,CAAA,IAAA,CAATA;AAAS;;AAAA,YAAA,kBAAA,GAKxCA,IALwC,CAAA,CAAA,CAKxCA,CALwC,UAAA;AAAA,YAG1BC,WAH0B,GAAA,kBAAA,CAAA,WAAA;AAAA,YAGbC,IAHa,GAAA,kBAAA,CAAA,IAAA;AAAA,YAGPC,IAHO,GAAA,kBAAA,CAAA,IAAA;AAAA,YAGDC,KAHC,GAAA,kBAAA,CAAA,KAAA;;AAO5C,gBAAA,IAAA;AACE,eAAA,QAAA;AACE,gBAAI,OAAA,KAAA,KAAJ,QAAA,EAA+B;AAC7B;AACAL,cAAAA,QAAQ,CAAC,CAAA,GAAA,wBAAA,CAAA,WAAA,EAAA,KAAA,EAATA,QAAS,CAAD,CAARA;AAFF,aAAA,MAGO;AACL,oBAAM,IAAA,KAAA,CAAN,8CAAM,CAAN;AACD;;AAED;;AAEF,eAAA,aAAA;AACEA,YAAAA,QAAQ,CAAC,CAAA,GAAA,wBAAA,CAAA,eAAA,EAAA,KAAA,EAAA,IAAA,EAATA,WAAS,CAAD,CAARA;AAEA;;AAEF,eAAA,UAAA;AACEA,YAAAA,QAAQ,CAAC,CAAA,GAAA,wBAAA,CAAA,YAAA,EAATA,KAAS,CAAD,CAARA;AAEA;;AAEF;AACE,mBAAOM,IAAI,CAAJA,KAAAA,CAAAA,KAAAA,CAAAA,EAAP,IAAOA,CAAP;AAtBJ;AAP2B,OAAA;AAAtB,KAAA;AAAP,GAAA;AAgCD","sourcesContent":["import { sendMessage, sendMessageBack, sendPostBack } from 'botframework-webchat-core';\n\nexport default function createDefaultCardActionMiddleware() {\n  return ({ dispatch }) => next => (...args) => {\n    const [\n      {\n        cardAction: { displayText, text, type, value }\n      }\n    ] = args;\n\n    switch (type) {\n      case 'imBack':\n        if (typeof value === 'string') {\n          // TODO: [P4] Instead of calling dispatch, we should move to dispatchers instead for completeness\n          dispatch(sendMessage(value, 'imBack'));\n        } else {\n          throw new Error('cannot send \"imBack\" with a non-string value');\n        }\n\n        break;\n\n      case 'messageBack':\n        dispatch(sendMessageBack(value, text, displayText));\n\n        break;\n\n      case 'postBack':\n        dispatch(sendPostBack(value));\n\n        break;\n\n      default:\n        return next(...args);\n    }\n  };\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}