{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar TranslationStatus_1 = require(\"../TranslationStatus\");\n\nvar TranslationHypothesis =\n/** @class */\nfunction () {\n  function TranslationHypothesis(json) {\n    this.privTranslationHypothesis = JSON.parse(json);\n    this.privTranslationHypothesis.Translation.TranslationStatus = TranslationStatus_1.TranslationStatus[this.privTranslationHypothesis.Translation.TranslationStatus];\n  }\n\n  TranslationHypothesis.fromJSON = function (json) {\n    return new TranslationHypothesis(json);\n  };\n\n  Object.defineProperty(TranslationHypothesis.prototype, \"Duration\", {\n    get: function get() {\n      return this.privTranslationHypothesis.Duration;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TranslationHypothesis.prototype, \"Offset\", {\n    get: function get() {\n      return this.privTranslationHypothesis.Offset;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TranslationHypothesis.prototype, \"Text\", {\n    get: function get() {\n      return this.privTranslationHypothesis.Text;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TranslationHypothesis.prototype, \"Translation\", {\n    get: function get() {\n      return this.privTranslationHypothesis.Translation;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return TranslationHypothesis;\n}();\n\nexports.TranslationHypothesis = TranslationHypothesis;","map":{"version":3,"sources":["src/common.speech/ServiceMessages/TranslationHypothesis.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAGA,IAAA,mBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAUA,IAAA,qBAAA;AAAA;AAAA,YAAA;AAGI,WAAA,qBAAA,CAAoB,IAApB,EAAgC;AAC5B,SAAK,yBAAL,GAAiC,IAAI,CAAC,KAAL,CAAW,IAAX,CAAjC;AACA,SAAK,yBAAL,CAA+B,WAA/B,CAA2C,iBAA3C,GAAgE,mBAAA,CAAA,iBAAA,CAA0B,KAAK,yBAAL,CAA+B,WAA/B,CAA2C,iBAArE,CAAhE;AACH;;AAEa,EAAA,qBAAA,CAAA,QAAA,GAAd,UAAuB,IAAvB,EAAmC;AAC/B,WAAO,IAAI,qBAAJ,CAA0B,IAA1B,CAAP;AACH,GAFa;;AAId,EAAA,MAAA,CAAA,cAAA,CAAW,qBAAA,CAAA,SAAX,EAAW,UAAX,EAAmB;SAAnB,eAAA;AACI,aAAO,KAAK,yBAAL,CAA+B,QAAtC;AACH,KAFkB;oBAAA;;AAAA,GAAnB;AAIA,EAAA,MAAA,CAAA,cAAA,CAAW,qBAAA,CAAA,SAAX,EAAW,QAAX,EAAiB;SAAjB,eAAA;AACI,aAAO,KAAK,yBAAL,CAA+B,MAAtC;AACH,KAFgB;oBAAA;;AAAA,GAAjB;AAIA,EAAA,MAAA,CAAA,cAAA,CAAW,qBAAA,CAAA,SAAX,EAAW,MAAX,EAAe;SAAf,eAAA;AACI,aAAO,KAAK,yBAAL,CAA+B,IAAtC;AACH,KAFc;oBAAA;;AAAA,GAAf;AAIA,EAAA,MAAA,CAAA,cAAA,CAAW,qBAAA,CAAA,SAAX,EAAW,aAAX,EAAsB;SAAtB,eAAA;AACI,aAAO,KAAK,yBAAL,CAA+B,WAAtC;AACH,KAFqB;oBAAA;;AAAA,GAAtB;AAGJ,SAAA,qBAAA;AAAC,CA3BD,EAAA;;AAAa,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { ITranslations } from \"../Exports\";\r\nimport { TranslationStatus } from \"../TranslationStatus\";\r\n\r\n// translation.hypothesis\r\nexport interface ITranslationHypothesis {\r\n    Duration: number;\r\n    Offset: number;\r\n    Text: string;\r\n    Translation: ITranslations;\r\n}\r\n\r\nexport class TranslationHypothesis implements ITranslationHypothesis {\r\n    private privTranslationHypothesis: ITranslationHypothesis;\r\n\r\n    private constructor(json: string) {\r\n        this.privTranslationHypothesis = JSON.parse(json);\r\n        this.privTranslationHypothesis.Translation.TranslationStatus = (TranslationStatus as any)[this.privTranslationHypothesis.Translation.TranslationStatus];\r\n    }\r\n\r\n    public static fromJSON(json: string): TranslationHypothesis {\r\n        return new TranslationHypothesis(json);\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privTranslationHypothesis.Duration;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privTranslationHypothesis.Offset;\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privTranslationHypothesis.Text;\r\n    }\r\n\r\n    public get Translation(): ITranslations {\r\n        return this.privTranslationHypothesis.Translation;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}