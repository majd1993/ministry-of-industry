{"ast":null,"code":"import _classCallCheck from \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/**\n * Allows additions of new phrases to improve speech recognition.\n *\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\n * to the speech service.\n */\nexport var PhraseListGrammar = /*#__PURE__*/function () {\n  function PhraseListGrammar(recogBase) {\n    _classCallCheck(this, PhraseListGrammar);\n\n    this.privGrammerBuilder = recogBase.dynamicGrammar;\n  }\n  /**\n   * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\n   * @param recognizer The recognizer to add phrase lists to.\n   */\n\n\n  _createClass(PhraseListGrammar, [{\n    key: \"addPhrase\",\n    value:\n    /**\n     * Adds a single phrase to the current recognizer.\n     * @param phrase Phrase to add.\n     */\n    function addPhrase(phrase) {\n      this.privGrammerBuilder.addPhrase(phrase);\n    }\n    /**\n     * Adds multiple phrases to the current recognizer.\n     * @param phrases Array of phrases to add.\n     */\n\n  }, {\n    key: \"addPhrases\",\n    value: function addPhrases(phrases) {\n      this.privGrammerBuilder.addPhrase(phrases);\n    }\n    /**\n     * Clears all phrases added to the current recognizer.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.privGrammerBuilder.clearPhrases();\n    }\n  }], [{\n    key: \"fromRecognizer\",\n    value: function fromRecognizer(recognizer) {\n      var recoBase = recognizer.internalData;\n      return new PhraseListGrammar(recoBase);\n    }\n  }]);\n\n  return PhraseListGrammar;\n}();","map":{"version":3,"sources":["src/sdk/PhraseListGrammar.ts"],"names":[],"mappings":";;AAAA;AACA;;AAQA;;;;;AAKG;AACH,WAAa,iBAAb;AAGI,6BAAoB,SAApB,EAAoD;AAAA;;AAChD,SAAK,kBAAL,GAA0B,SAAS,CAAC,cAApC;AACH;AAED;;;AAGG;;;AAVP;AAAA;AAAA;AAiBI;;;AAGG;AACI,uBAAU,MAAV,EAAwB;AAC3B,WAAK,kBAAL,CAAwB,SAAxB,CAAkC,MAAlC;AACH;AAED;;;AAGG;;AA5BP;AAAA;AAAA,WA6BW,oBAAW,OAAX,EAA4B;AAC/B,WAAK,kBAAL,CAAwB,SAAxB,CAAkC,OAAlC;AACH;AAED;;AAEG;;AAnCP;AAAA;AAAA,WAoCW,iBAAK;AACR,WAAK,kBAAL,CAAwB,YAAxB;AACH;AAtCL;AAAA;AAAA,WAWW,wBAAsB,UAAtB,EAA4C;AAC/C,UAAM,QAAQ,GAA0B,UAAU,CAAC,YAAnD;AAEA,aAAO,IAAI,iBAAJ,CAAsB,QAAtB,CAAP;AACH;AAfL;;AAAA;AAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n    ServiceRecognizerBase,\r\n} from \"../common.speech/Exports\";\r\nimport { Recognizer } from \"./Exports\";\r\n\r\n/**\r\n * Allows additions of new phrases to improve speech recognition.\r\n *\r\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\r\n * to the speech service.\r\n */\r\nexport class PhraseListGrammar {\r\n    private privGrammerBuilder: DynamicGrammarBuilder;\r\n\r\n    private constructor(recogBase: ServiceRecognizerBase) {\r\n        this.privGrammerBuilder = recogBase.dynamicGrammar;\r\n    }\r\n\r\n    /**\r\n     * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\r\n     * @param recognizer The recognizer to add phrase lists to.\r\n     */\r\n    public static fromRecognizer(recognizer: Recognizer): PhraseListGrammar {\r\n        const recoBase: ServiceRecognizerBase = recognizer.internalData as ServiceRecognizerBase;\r\n\r\n        return new PhraseListGrammar(recoBase);\r\n    }\r\n\r\n    /**\r\n     * Adds a single phrase to the current recognizer.\r\n     * @param phrase Phrase to add.\r\n     */\r\n    public addPhrase(phrase: string): void {\r\n        this.privGrammerBuilder.addPhrase(phrase);\r\n    }\r\n\r\n    /**\r\n     * Adds multiple phrases to the current recognizer.\r\n     * @param phrases Array of phrases to add.\r\n     */\r\n    public addPhrases(phrases: string[]): void {\r\n        this.privGrammerBuilder.addPhrase(phrases);\r\n    }\r\n\r\n    /**\r\n     * Clears all phrases added to the current recognizer.\r\n     */\r\n    public clear(): void {\r\n        this.privGrammerBuilder.clearPhrases();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}