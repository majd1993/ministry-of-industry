{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createCoreMiddleware;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _CarouselLayout = _interopRequireDefault(require(\"../../Activity/CarouselLayout\"));\n\nvar _StackedLayout = _interopRequireDefault(require(\"../../Activity/StackedLayout\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction createCoreMiddleware() {\n  return [function () {\n    return function (next) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var activity = args[0].activity; // TODO: [P4] Can we simplify these if-statement to something more readable?\n\n        var type = activity.type; // Filter out activities that should not be visible\n\n        if (type === 'conversationUpdate' || type === 'event' || type === 'invoke' || type === 'typing') {\n          return false;\n        } else if (type === 'message') {\n          var _activity$attachments = activity.attachments,\n              attachments = _activity$attachments === void 0 ? [] : _activity$attachments,\n              channelData = activity.channelData,\n              text = activity.text;\n\n          if ( // Do not show postback\n          channelData && channelData.postBack || // Do not show messageBack if displayText is undefined\n          channelData && channelData.messageBack && !channelData.messageBack.displayText || // Do not show empty bubbles (no text and attachments, and not \"typing\")\n          !(text || attachments.length)) {\n            return false;\n          } // eslint-disable-next-line no-dupe-else-if\n\n        } else if (type === 'typing' && activity.from.role === 'user') {\n          // Do not show typing by oneself\n          return false;\n        }\n\n        if (type === 'message' || type === 'typing') {\n          if (type === 'message' && (activity.attachments || []).length > 1 && activity.attachmentLayout === 'carousel') {\n            // The following line is not a React functional component, it's a render function called by useCreateActivityRenderer() hook.\n            // The function signature need to be compatible with older version of activity middleware, which was:\n            //\n            // renderActivity(\n            //   renderAttachment: ({ activity, attachment }) => React.Element\n            // ) => React.Element\n            return function renderCarouselLayout(renderAttachment, props) {\n              typeof props === 'undefined' && console.warn('botframework-webchat: One or more arguments were missing after passing through the activity middleware. Please check your custom activity middleware to make sure it passes all arguments.');\n              return /*#__PURE__*/_react.default.createElement(_CarouselLayout.default, _extends({\n                activity: activity,\n                renderAttachment: renderAttachment\n              }, props));\n            };\n          } // The following line is not a React functional component, it's a render function called by useCreateActivityRenderer() hook.\n\n\n          return function renderStackedLayout(renderAttachment, props) {\n            typeof props === 'undefined' && console.warn('botframework-webchat: One or more arguments were missing after passing through the activity middleware. Please check your custom activity middleware to make sure it passes all arguments.');\n            return /*#__PURE__*/_react.default.createElement(_StackedLayout.default, _extends({\n              activity: activity,\n              renderAttachment: renderAttachment\n            }, props));\n          };\n        }\n\n        return next.apply(void 0, args);\n      };\n    };\n  }];\n}","map":{"version":3,"sources":["../../../src/Middleware/Activity/createCoreMiddleware.js"],"names":["args","activity","type","attachments","channelData","text","console","renderAttachment","next"],"mappings":";;;;;;;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,+BAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,8BAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAAA,oBAAA,GAAgC;AAC7C,SAAO,CACL,YAAA;AAAA,WAAM,UAAA,IAAA,EAAI;AAAA,aAAI,YAAa;AAAA,aAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAATA,IAAS,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAATA,UAAAA,IAAS,CAAA,IAAA,CAATA,GAAS,SAAA,CAAA,IAAA,CAATA;AAAS;;AAAA,YAChBC,QADgB,GACFD,IADE,CAAA,CAAA,CACFA,CADE,QAAA,CAAA,CAGzB;;AAHyB,YAKjBE,IALiB,GAKRD,QALQ,CAAA,IAAA,CAAA,CAOzB;;AACA,YAAIC,IAAI,KAAJA,oBAAAA,IAAiCA,IAAI,KAArCA,OAAAA,IAAqDA,IAAI,KAAzDA,QAAAA,IAA0EA,IAAI,KAAlF,QAAA,EAAiG;AAC/F,iBAAA,KAAA;AADF,SAAA,MAEO,IAAIA,IAAI,KAAR,SAAA,EAAwB;AAAA,cAAA,qBAAA,GACmBD,QADnB,CAAA,WAAA;AAAA,cACrBE,WADqB,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,qBAAA;AAAA,cACHC,WADG,GACmBH,QADnB,CAAA,WAAA;AAAA,cACUI,IADV,GACmBJ,QADnB,CAAA,IAAA;;AAG7B,eACE;AACCG,UAAAA,WAAW,IAAIA,WAAW,CAA3B,QAACA,IACD;AACCA,UAAAA,WAAW,IAAIA,WAAW,CAA1BA,WAAAA,IAA0C,CAACA,WAAW,CAAXA,WAAAA,CAF5C,WAACA,IAGD;AACA,YAAEC,IAAI,IAAIF,WAAW,CANvB,MAME,CANF,EAOE;AACA,mBAAA,KAAA;AAX2B,WAAA,CAa7B;;AAbK,SAAA,MAcA,IAAID,IAAI,KAAJA,QAAAA,IAAqBD,QAAQ,CAARA,IAAAA,CAAAA,IAAAA,KAAzB,MAAA,EAAwD;AAC7D;AACA,iBAAA,KAAA;AACD;;AAED,YAAIC,IAAI,KAAJA,SAAAA,IAAsBA,IAAI,KAA9B,QAAA,EAA6C;AAC3C,cAAIA,IAAI,KAAJA,SAAAA,IAAsB,CAACD,QAAQ,CAARA,WAAAA,IAAD,EAAA,EAAA,MAAA,GAAtBC,CAAAA,IAAiED,QAAQ,CAARA,gBAAAA,KAArE,UAAA,EAA+G;AAC7G;AACA;AACA;AACA;AACA;AACA;AAEA,mBAAO,SAAA,oBAAA,CAAA,gBAAA,EAAA,KAAA,EAAuD;AAC5D,qBAAA,KAAA,KAAA,WAAA,IACEK,OAAO,CAAPA,IAAAA,CADF,4LACEA,CADF;AAKA,qBAAA,aAAO,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,eAAA,CAAD,OAAA,EAAA,QAAA,CAAA;AAAgB,gBAAA,QAAQ,EAAxB,QAAA;AAAoC,gBAAA,gBAAgB,EAAEC;AAAtD,eAAA,EAAP,KAAO,CAAA,CAAP;AANF,aAAA;AATyC,WAAA,CAmB3C;;;AACA,iBAAO,SAAA,mBAAA,CAAA,gBAAA,EAAA,KAAA,EAAsD;AAC3D,mBAAA,KAAA,KAAA,WAAA,IACED,OAAO,CAAPA,IAAAA,CADF,4LACEA,CADF;AAKA,mBAAA,aAAO,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,cAAA,CAAD,OAAA,EAAA,QAAA,CAAA;AAAe,cAAA,QAAQ,EAAvB,QAAA;AAAmC,cAAA,gBAAgB,EAAEC;AAArD,aAAA,EAAP,KAAO,CAAA,CAAP;AANF,WAAA;AAQD;;AAED,eAAOC,IAAI,CAAJA,KAAAA,CAAAA,KAAAA,CAAAA,EAAP,IAAOA,CAAP;AA3DQ,OAAA;AAAV,KAAA;AADF,GAAO,CAAP;AA+DD","sourcesContent":["/* eslint-disable complexity */\nimport React from 'react';\n\nimport CarouselLayout from '../../Activity/CarouselLayout';\nimport StackedLayout from '../../Activity/StackedLayout';\n\nexport default function createCoreMiddleware() {\n  return [\n    () => next => (...args) => {\n      const [{ activity }] = args;\n\n      // TODO: [P4] Can we simplify these if-statement to something more readable?\n\n      const { type } = activity;\n\n      // Filter out activities that should not be visible\n      if (type === 'conversationUpdate' || type === 'event' || type === 'invoke' || type === 'typing') {\n        return false;\n      } else if (type === 'message') {\n        const { attachments = [], channelData, text } = activity;\n\n        if (\n          // Do not show postback\n          (channelData && channelData.postBack) ||\n          // Do not show messageBack if displayText is undefined\n          (channelData && channelData.messageBack && !channelData.messageBack.displayText) ||\n          // Do not show empty bubbles (no text and attachments, and not \"typing\")\n          !(text || attachments.length)\n        ) {\n          return false;\n        }\n        // eslint-disable-next-line no-dupe-else-if\n      } else if (type === 'typing' && activity.from.role === 'user') {\n        // Do not show typing by oneself\n        return false;\n      }\n\n      if (type === 'message' || type === 'typing') {\n        if (type === 'message' && (activity.attachments || []).length > 1 && activity.attachmentLayout === 'carousel') {\n          // The following line is not a React functional component, it's a render function called by useCreateActivityRenderer() hook.\n          // The function signature need to be compatible with older version of activity middleware, which was:\n          //\n          // renderActivity(\n          //   renderAttachment: ({ activity, attachment }) => React.Element\n          // ) => React.Element\n\n          return function renderCarouselLayout(renderAttachment, props) {\n            typeof props === 'undefined' &&\n              console.warn(\n                'botframework-webchat: One or more arguments were missing after passing through the activity middleware. Please check your custom activity middleware to make sure it passes all arguments.'\n              );\n\n            return <CarouselLayout activity={activity} renderAttachment={renderAttachment} {...props} />;\n          };\n        }\n\n        // The following line is not a React functional component, it's a render function called by useCreateActivityRenderer() hook.\n        return function renderStackedLayout(renderAttachment, props) {\n          typeof props === 'undefined' &&\n            console.warn(\n              'botframework-webchat: One or more arguments were missing after passing through the activity middleware. Please check your custom activity middleware to make sure it passes all arguments.'\n            );\n\n          return <StackedLayout activity={activity} renderAttachment={renderAttachment} {...props} />;\n        };\n      }\n\n      return next(...args);\n    }\n  ];\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}