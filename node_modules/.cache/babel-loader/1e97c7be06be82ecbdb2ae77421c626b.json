{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = patchStyleOptions;\n\nvar _defaultStyleOptions = _interopRequireDefault(require(\"./defaultStyleOptions\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // TODO: [P4] We should add a notice for people who want to use \"styleSet\" instead of \"styleOptions\".\n//       \"styleSet\" is actually CSS stylesheet and it is based on the DOM tree.\n//       DOM tree may change from time to time, thus, maintaining \"styleSet\" becomes a constant effort.\n\n\nfunction parseBorder(border) {\n  var dummyElement = document.createElement('div');\n  dummyElement.setAttribute('style', \"border: \".concat(border));\n  var _dummyElement$style = dummyElement.style,\n      color = _dummyElement$style.borderColor,\n      style = _dummyElement$style.borderStyle,\n      width = _dummyElement$style.borderWidth;\n  return {\n    color: color,\n    style: style,\n    width: width\n  };\n}\n\nvar PIXEL_UNIT_PATTERN = /^[0-9]+px$/;\n\nfunction patchStyleOptions(options, _ref) {\n  var groupTimestampFromProps = _ref.groupTimestamp,\n      sendTimeoutFromProps = _ref.sendTimeout;\n\n  var patchedOptions = _objectSpread(_objectSpread({}, _defaultStyleOptions.default), options); // Keep this list flat (no nested style) and serializable (no functions)\n  // TODO: [P4] Deprecate this code after bump to v5\n\n\n  var bubbleBorder = patchedOptions.bubbleBorder,\n      bubbleFromUserBorder = patchedOptions.bubbleFromUserBorder,\n      bubbleFromUserNubOffset = patchedOptions.bubbleFromUserNubOffset,\n      bubbleNubOffset = patchedOptions.bubbleNubOffset,\n      emojiSet = patchedOptions.emojiSet,\n      suggestedActionBorder = patchedOptions.suggestedActionBorder,\n      suggestedActionDisabledBorder = patchedOptions.suggestedActionDisabledBorder;\n\n  if (bubbleBorder) {\n    console.warn('botframework-webchat: \"styleSet.bubbleBorder\" is deprecated and will be removed on or after 2020-07-17. Please use \"bubbleBorderColor\", \"bubbleBorderStyle\", and, \"bubbleBorderWidth.');\n\n    var _parseBorder = parseBorder(bubbleBorder),\n        color = _parseBorder.color,\n        style = _parseBorder.style,\n        width = _parseBorder.width;\n\n    if (color && color !== 'initial') {\n      patchedOptions.bubbleBorderColor = color;\n    }\n\n    if (style && style !== 'initial') {\n      patchedOptions.bubbleBorderStyle = style;\n    }\n\n    if (PIXEL_UNIT_PATTERN.test(width)) {\n      patchedOptions.bubbleBorderWidth = parseInt(width, 10);\n    }\n  }\n\n  if (bubbleFromUserBorder) {\n    console.warn('botframework-webchat: \"styleSet.bubbleFromUserBorder\" is deprecated and will be removed on or after 2020-07-17. Please use \"bubbleFromUserBorderColor\", \"bubbleFromUserBorderStyle\", and, \"bubbleFromUserBorderWidth\".');\n\n    var _parseBorder2 = parseBorder(bubbleFromUserBorder),\n        _color = _parseBorder2.color,\n        _style = _parseBorder2.style,\n        _width = _parseBorder2.width;\n\n    if (_color && _color !== 'initial') {\n      patchedOptions.bubbleFromUserBorderColor = _color;\n    }\n\n    if (_style && _style !== 'initial') {\n      patchedOptions.bubbleFromUserBorderStyle = _style;\n    }\n\n    if (PIXEL_UNIT_PATTERN.test(_width)) {\n      patchedOptions.bubbleFromUserBorderWidth = parseInt(_width, 10);\n    }\n  }\n\n  if (suggestedActionBorder) {\n    console.warn('botframework-webchat: \"styleSet.suggestedActionBorder\" is deprecated and will be removed on or after 2020-09-11. Please use \"suggestedActionBorderColor\", \"suggestedActionBorderStyle\", and, \"suggestedActionBorderWidth\".');\n\n    var _parseBorder3 = parseBorder(suggestedActionBorder),\n        _color2 = _parseBorder3.color,\n        _style2 = _parseBorder3.style,\n        _width2 = _parseBorder3.width;\n\n    if (_color2 && _color2 !== 'initial') {\n      patchedOptions.suggestedActionBorderColor = _color2;\n    }\n\n    if (_style2 && _style2 !== 'initial') {\n      patchedOptions.suggestedActionBorderStyle = _style2;\n    }\n\n    if (PIXEL_UNIT_PATTERN.test(_width2)) {\n      patchedOptions.suggestedActionBorderWidth = parseInt(_width2, 10);\n    }\n  }\n\n  if (suggestedActionDisabledBorder) {\n    console.warn('botframework-webcaht: \"styleSet.suggestedActionDisabledBorder\" is deprecated and will be removed on or after 2020-09-11. Please use \"suggestedActionDisabledBorderColor\", \"suggestedActionDisabledBorderStyle\", and, \"suggestedActionDisabledBorderWidth\".');\n\n    var _parseBorder4 = parseBorder(suggestedActionDisabledBorder),\n        _color3 = _parseBorder4.color,\n        _style3 = _parseBorder4.style,\n        _width3 = _parseBorder4.width;\n\n    if (_color3 && _color3 !== 'initial') {\n      patchedOptions.suggestedActionDisabledBorderColor = _color3;\n    }\n\n    if (_style3 && _style3 !== 'initial') {\n      patchedOptions.suggestedActionDisabledBorderStyle = _style3;\n    }\n\n    if (PIXEL_UNIT_PATTERN.test(_width3)) {\n      patchedOptions.suggestedActionDisabledBorderWidth = parseInt(_width3, 10);\n    }\n  }\n\n  if (bubbleFromUserNubOffset === 'top') {\n    patchedOptions.bubbleFromUserNubOffset = 0;\n  } else if (typeof bubbleFromUserNubOffset !== 'number') {\n    patchedOptions.bubbleFromUserNubOffset = -0;\n  }\n\n  if (bubbleNubOffset === 'top') {\n    patchedOptions.bubbleNubOffset = 0;\n  } else if (typeof bubbleNubOffset !== 'number') {\n    patchedOptions.bubbleNubOffset = -0;\n  }\n\n  if (emojiSet === true) {\n    patchedOptions.emojiSet = {\n      ':)': '😊',\n      ':-)': '😊',\n      '(:': '😊',\n      '(-:': '😊',\n      ':-|': '😐',\n      ':|': '😐',\n      ':-(': '☹️',\n      ':(': '☹️',\n      ':-D': '😀',\n      ':D': '😀',\n      ':-p': '😛',\n      ':p': '😛',\n      ':-P': '😛',\n      ':P': '😛',\n      ':-o': '😲',\n      ':o': '😲',\n      ':O': '😲',\n      ':-O': '😲',\n      ':-0': '😲',\n      ':0': '😲',\n      ';-)': '😉',\n      ';)': '😉',\n      '<3': '❤️',\n      '</3': '💔',\n      '<\\\\3': '💔'\n    };\n  } else if (Object.prototype.toString.call(patchedOptions.emojiSet) !== '[object Object]') {\n    console.warn('botframework-webchat: emojiSet must be a boolean or an object with emoticon: emojiValues');\n    patchedOptions.emojiSet = false;\n  }\n\n  if (typeof groupTimestampFromProps !== 'undefined' && typeof options.groupTimestamp === 'undefined') {\n    console.warn('Web Chat: \"groupTimestamp\" has been moved to \"styleOptions\". This deprecation migration will be removed on or after January 1 2022.');\n    patchedOptions.groupTimestamp = groupTimestampFromProps;\n  }\n\n  if (typeof sendTimeoutFromProps !== 'undefined' && typeof options.sendTimeout === 'undefined') {\n    console.warn('Web Chat: \"sendTimeout\" has been moved to \"styleOptions\". This deprecation migration will be removed on or after January 1 2022.');\n    patchedOptions.sendTimeout = sendTimeoutFromProps;\n  }\n\n  if (patchedOptions.slowConnectionAfter < 0) {\n    console.warn('Web Chat: \"slowConnectionAfter\" cannot be negative, will set to 0.');\n    patchedOptions.slowConnectionAfter = 0;\n  }\n\n  return patchedOptions;\n}","map":{"version":3,"sources":["../src/patchStyleOptions.js"],"names":["dummyElement","document","color","style","width","PIXEL_UNIT_PATTERN","groupTimestamp","groupTimestampFromProps","sendTimeout","sendTimeoutFromProps","patchedOptions","defaultStyleOptions","bubbleBorder","bubbleFromUserBorder","bubbleFromUserNubOffset","bubbleNubOffset","emojiSet","suggestedActionBorder","suggestedActionDisabledBorder","console","parseBorder","parseInt","Object","options"],"mappings":"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","sourcesContent":["import defaultStyleOptions from './defaultStyleOptions';\n\n// TODO: [P4] We should add a notice for people who want to use \"styleSet\" instead of \"styleOptions\".\n//       \"styleSet\" is actually CSS stylesheet and it is based on the DOM tree.\n//       DOM tree may change from time to time, thus, maintaining \"styleSet\" becomes a constant effort.\n\nfunction parseBorder(border) {\n  const dummyElement = document.createElement('div');\n\n  dummyElement.setAttribute('style', `border: ${border}`);\n\n  const {\n    style: { borderColor: color, borderStyle: style, borderWidth: width }\n  } = dummyElement;\n\n  return {\n    color,\n    style,\n    width\n  };\n}\n\nconst PIXEL_UNIT_PATTERN = /^\\d+px$/u;\n\nexport default function patchStyleOptions(\n  options,\n  { groupTimestamp: groupTimestampFromProps, sendTimeout: sendTimeoutFromProps }\n) {\n  const patchedOptions = { ...defaultStyleOptions, ...options };\n\n  // Keep this list flat (no nested style) and serializable (no functions)\n\n  // TODO: [P4] Deprecate this code after bump to v5\n  const {\n    bubbleBorder,\n    bubbleFromUserBorder,\n    bubbleFromUserNubOffset,\n    bubbleNubOffset,\n    emojiSet,\n    suggestedActionBorder,\n    suggestedActionDisabledBorder\n  } = patchedOptions;\n\n  if (bubbleBorder) {\n    console.warn(\n      'botframework-webchat: \"styleSet.bubbleBorder\" is deprecated and will be removed on or after 2020-07-17. Please use \"bubbleBorderColor\", \"bubbleBorderStyle\", and, \"bubbleBorderWidth.'\n    );\n\n    const { color, style, width } = parseBorder(bubbleBorder);\n\n    if (color && color !== 'initial') {\n      patchedOptions.bubbleBorderColor = color;\n    }\n\n    if (style && style !== 'initial') {\n      patchedOptions.bubbleBorderStyle = style;\n    }\n\n    if (PIXEL_UNIT_PATTERN.test(width)) {\n      patchedOptions.bubbleBorderWidth = parseInt(width, 10);\n    }\n  }\n\n  if (bubbleFromUserBorder) {\n    console.warn(\n      'botframework-webchat: \"styleSet.bubbleFromUserBorder\" is deprecated and will be removed on or after 2020-07-17. Please use \"bubbleFromUserBorderColor\", \"bubbleFromUserBorderStyle\", and, \"bubbleFromUserBorderWidth\".'\n    );\n\n    const { color, style, width } = parseBorder(bubbleFromUserBorder);\n\n    if (color && color !== 'initial') {\n      patchedOptions.bubbleFromUserBorderColor = color;\n    }\n\n    if (style && style !== 'initial') {\n      patchedOptions.bubbleFromUserBorderStyle = style;\n    }\n\n    if (PIXEL_UNIT_PATTERN.test(width)) {\n      patchedOptions.bubbleFromUserBorderWidth = parseInt(width, 10);\n    }\n  }\n\n  if (suggestedActionBorder) {\n    console.warn(\n      'botframework-webchat: \"styleSet.suggestedActionBorder\" is deprecated and will be removed on or after 2020-09-11. Please use \"suggestedActionBorderColor\", \"suggestedActionBorderStyle\", and, \"suggestedActionBorderWidth\".'\n    );\n\n    const { color, style, width } = parseBorder(suggestedActionBorder);\n\n    if (color && color !== 'initial') {\n      patchedOptions.suggestedActionBorderColor = color;\n    }\n\n    if (style && style !== 'initial') {\n      patchedOptions.suggestedActionBorderStyle = style;\n    }\n\n    if (PIXEL_UNIT_PATTERN.test(width)) {\n      patchedOptions.suggestedActionBorderWidth = parseInt(width, 10);\n    }\n  }\n\n  if (suggestedActionDisabledBorder) {\n    console.warn(\n      'botframework-webcaht: \"styleSet.suggestedActionDisabledBorder\" is deprecated and will be removed on or after 2020-09-11. Please use \"suggestedActionDisabledBorderColor\", \"suggestedActionDisabledBorderStyle\", and, \"suggestedActionDisabledBorderWidth\".'\n    );\n\n    const { color, style, width } = parseBorder(suggestedActionDisabledBorder);\n\n    if (color && color !== 'initial') {\n      patchedOptions.suggestedActionDisabledBorderColor = color;\n    }\n\n    if (style && style !== 'initial') {\n      patchedOptions.suggestedActionDisabledBorderStyle = style;\n    }\n\n    if (PIXEL_UNIT_PATTERN.test(width)) {\n      patchedOptions.suggestedActionDisabledBorderWidth = parseInt(width, 10);\n    }\n  }\n\n  if (bubbleFromUserNubOffset === 'top') {\n    patchedOptions.bubbleFromUserNubOffset = 0;\n  } else if (typeof bubbleFromUserNubOffset !== 'number') {\n    patchedOptions.bubbleFromUserNubOffset = -0;\n  }\n\n  if (bubbleNubOffset === 'top') {\n    patchedOptions.bubbleNubOffset = 0;\n  } else if (typeof bubbleNubOffset !== 'number') {\n    patchedOptions.bubbleNubOffset = -0;\n  }\n\n  if (emojiSet === true) {\n    patchedOptions.emojiSet = {\n      ':)': '😊',\n      ':-)': '😊',\n      '(:': '😊',\n      '(-:': '😊',\n      ':-|': '😐',\n      ':|': '😐',\n      ':-(': '☹️',\n      ':(': '☹️',\n      ':-D': '😀',\n      ':D': '😀',\n      ':-p': '😛',\n      ':p': '😛',\n      ':-P': '😛',\n      ':P': '😛',\n      ':-o': '😲',\n      ':o': '😲',\n      ':O': '😲',\n      ':-O': '😲',\n      ':-0': '😲',\n      ':0': '😲',\n      ';-)': '😉',\n      ';)': '😉',\n      '<3': '❤️',\n      '</3': '💔',\n      '<\\\\3': '💔'\n    };\n  } else if (Object.prototype.toString.call(patchedOptions.emojiSet) !== '[object Object]') {\n    console.warn('botframework-webchat: emojiSet must be a boolean or an object with emoticon: emojiValues');\n    patchedOptions.emojiSet = false;\n  }\n\n  if (typeof groupTimestampFromProps !== 'undefined' && typeof options.groupTimestamp === 'undefined') {\n    console.warn(\n      'Web Chat: \"groupTimestamp\" has been moved to \"styleOptions\". This deprecation migration will be removed on or after January 1 2022.'\n    );\n\n    patchedOptions.groupTimestamp = groupTimestampFromProps;\n  }\n\n  if (typeof sendTimeoutFromProps !== 'undefined' && typeof options.sendTimeout === 'undefined') {\n    console.warn(\n      'Web Chat: \"sendTimeout\" has been moved to \"styleOptions\". This deprecation migration will be removed on or after January 1 2022.'\n    );\n\n    patchedOptions.sendTimeout = sendTimeoutFromProps;\n  }\n\n  if (patchedOptions.slowConnectionAfter < 0) {\n    console.warn('Web Chat: \"slowConnectionAfter\" cannot be negative, will set to 0.');\n\n    patchedOptions.slowConnectionAfter = 0;\n  }\n\n  return patchedOptions;\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}