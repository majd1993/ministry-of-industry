{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventTargetShimEs = require(\"event-target-shim-es5\");\n\nvar _pDeferEs = _interopRequireDefault(require(\"p-defer-es5\"));\n\nvar _onErrorResumeNext = _interopRequireDefault(require(\"on-error-resume-next\"));\n\nvar _AudioContextQueue = _interopRequireDefault(require(\"./AudioContextQueue\"));\n\nvar _fetchCustomVoices = _interopRequireDefault(require(\"./fetchCustomVoices\"));\n\nvar _fetchVoices = _interopRequireDefault(require(\"./fetchVoices\"));\n\nvar _patchOptions2 = _interopRequireDefault(require(\"../patchOptions\"));\n\nvar _SpeechSynthesisEvent = _interopRequireDefault(require(\"./SpeechSynthesisEvent\"));\n\nvar _SpeechSynthesisUtterance = _interopRequireDefault(require(\"./SpeechSynthesisUtterance\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n} // Supported output format can be found at https://docs.microsoft.com/en-us/azure/cognitive-services/speech-service/rest-text-to-speech#audio-outputs\n\n\nvar DEFAULT_OUTPUT_FORMAT = 'audio-24khz-160kbitrate-mono-mp3';\nvar EMPTY_ARRAY = [];\n\nvar _default = function _default(options) {\n  var _patchOptions = (0, _patchOptions2.default)(options),\n      audioContext = _patchOptions.audioContext,\n      fetchCredentials = _patchOptions.fetchCredentials,\n      _patchOptions$ponyfil = _patchOptions.ponyfill,\n      ponyfill = _patchOptions$ponyfil === void 0 ? {\n    AudioContext: window.AudioContext || window.webkitAudioContext\n  } : _patchOptions$ponyfil,\n      speechSynthesisDeploymentId = _patchOptions.speechSynthesisDeploymentId,\n      _patchOptions$speechS = _patchOptions.speechSynthesisOutputFormat,\n      speechSynthesisOutputFormat = _patchOptions$speechS === void 0 ? DEFAULT_OUTPUT_FORMAT : _patchOptions$speechS;\n\n  if (!audioContext && !ponyfill.AudioContext) {\n    console.warn('web-speech-cognitive-services: This browser does not support Web Audio and it will not work with Cognitive Services Speech Services.');\n    return {};\n  }\n\n  var SpeechSynthesis = /*#__PURE__*/function (_EventTarget) {\n    (0, _inherits2.default)(SpeechSynthesis, _EventTarget);\n\n    var _super = _createSuper(SpeechSynthesis);\n\n    function SpeechSynthesis() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, SpeechSynthesis);\n      _this = _super.call(this);\n      _this.queue = new _AudioContextQueue.default({\n        audioContext: audioContext,\n        ponyfill: ponyfill\n      });\n\n      _this.updateVoices();\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(SpeechSynthesis, [{\n      key: \"cancel\",\n      value: function cancel() {\n        this.queue.stop();\n      }\n    }, {\n      key: \"getVoices\",\n      value: function getVoices() {\n        return EMPTY_ARRAY;\n      }\n    }, {\n      key: \"pause\",\n      value: function pause() {\n        this.queue.pause();\n      }\n    }, {\n      key: \"resume\",\n      value: function resume() {\n        this.queue.resume();\n      }\n    }, {\n      key: \"speak\",\n      value: function speak(utterance) {\n        if (!(utterance instanceof _SpeechSynthesisUtterance.default)) {\n          throw new Error('invalid utterance');\n        }\n\n        var _createDeferred = (0, _pDeferEs.default)(),\n            reject = _createDeferred.reject,\n            resolve = _createDeferred.resolve,\n            promise = _createDeferred.promise;\n\n        var handleError = function handleError(_ref) {\n          var errorCode = _ref.error,\n              message = _ref.message;\n          var error = new Error(errorCode);\n          error.stack = message;\n          reject(error);\n        };\n\n        utterance.addEventListener('end', resolve);\n        utterance.addEventListener('error', handleError);\n        utterance.preload({\n          deploymentId: speechSynthesisDeploymentId,\n          fetchCredentials: fetchCredentials,\n          outputFormat: speechSynthesisOutputFormat\n        });\n        this.queue.push(utterance);\n        return promise.finally(function () {\n          utterance.removeEventListener('end', resolve);\n          utterance.removeEventListener('error', handleError);\n        });\n      }\n    }, {\n      key: \"updateVoices\",\n      value: function () {\n        var _updateVoices = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3() {\n          var _this2 = this;\n\n          var _yield$fetchCredentia, customVoiceHostname, region, speechSynthesisHostname, subscriptionKey;\n\n          return _regenerator.default.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return fetchCredentials();\n\n                case 2:\n                  _yield$fetchCredentia = _context3.sent;\n                  customVoiceHostname = _yield$fetchCredentia.customVoiceHostname;\n                  region = _yield$fetchCredentia.region;\n                  speechSynthesisHostname = _yield$fetchCredentia.speechSynthesisHostname;\n                  subscriptionKey = _yield$fetchCredentia.subscriptionKey;\n\n                  if (!speechSynthesisDeploymentId) {\n                    _context3.next = 14;\n                    break;\n                  }\n\n                  if (!subscriptionKey) {\n                    _context3.next = 12;\n                    break;\n                  }\n\n                  console.warn('web-speech-cognitive-services: Listing of custom voice models are only available when using subscription key.');\n                  _context3.next = 12;\n                  return (0, _onErrorResumeNext.default)( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n                    var voices;\n                    return _regenerator.default.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return (0, _fetchCustomVoices.default)({\n                              customVoiceHostname: customVoiceHostname,\n                              deploymentId: speechSynthesisDeploymentId,\n                              region: region,\n                              speechSynthesisHostname: speechSynthesisHostname,\n                              subscriptionKey: subscriptionKey\n                            });\n\n                          case 2:\n                            voices = _context.sent;\n\n                            _this2.getVoices = function () {\n                              return voices;\n                            };\n\n                          case 4:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  })));\n\n                case 12:\n                  _context3.next = 16;\n                  break;\n\n                case 14:\n                  _context3.next = 16;\n                  return (0, _onErrorResumeNext.default)( /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {\n                    var voices;\n                    return _regenerator.default.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.t0 = _fetchVoices.default;\n                            _context2.next = 3;\n                            return fetchCredentials();\n\n                          case 3:\n                            _context2.t1 = _context2.sent;\n                            _context2.next = 6;\n                            return (0, _context2.t0)(_context2.t1);\n\n                          case 6:\n                            voices = _context2.sent;\n\n                            _this2.getVoices = function () {\n                              return voices;\n                            };\n\n                          case 8:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  })));\n\n                case 16:\n                  this.dispatchEvent(new _SpeechSynthesisEvent.default('voiceschanged'));\n\n                case 17:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        function updateVoices() {\n          return _updateVoices.apply(this, arguments);\n        }\n\n        return updateVoices;\n      }()\n    }, {\n      key: \"speaking\",\n      get: function get() {\n        return this.queue.speaking;\n      }\n    }]);\n    return SpeechSynthesis;\n  }(_eventTargetShimEs.EventTarget);\n\n  (0, _eventTargetShimEs.defineEventAttribute)(SpeechSynthesis.prototype, 'voiceschanged');\n  return {\n    speechSynthesis: new SpeechSynthesis(),\n    SpeechSynthesisEvent: _SpeechSynthesisEvent.default,\n    SpeechSynthesisUtterance: _SpeechSynthesisUtterance.default\n  };\n};\n\nexports.default = _default;","map":{"version":3,"sources":["../../../src/SpeechServices/TextToSpeech/createSpeechSynthesisPonyfill.js"],"names":["DEFAULT_OUTPUT_FORMAT","EMPTY_ARRAY","audioContext","fetchCredentials","ponyfill","AudioContext","window","webkitAudioContext","speechSynthesisDeploymentId","speechSynthesisOutputFormat","console","SpeechSynthesis","EventTarget","AudioContextQueue","utterance","SpeechSynthesisUtterance","reject","resolve","promise","handleError","error","errorCode","message","deploymentId","outputFormat","customVoiceHostname","region","speechSynthesisHostname","subscriptionKey","voices","fetchVoices","SpeechSynthesisEvent","speechSynthesis"],"mappings":"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","sourcesContent":["/* eslint class-methods-use-this: 0 */\n\nimport { defineEventAttribute, EventTarget } from 'event-target-shim-es5';\nimport createDeferred from 'p-defer-es5';\nimport onErrorResumeNext from 'on-error-resume-next';\n\nimport AudioContextQueue from './AudioContextQueue';\nimport fetchCustomVoices from './fetchCustomVoices';\nimport fetchVoices from './fetchVoices';\nimport patchOptions from '../patchOptions';\nimport SpeechSynthesisEvent from './SpeechSynthesisEvent';\nimport SpeechSynthesisUtterance from './SpeechSynthesisUtterance';\n\n// Supported output format can be found at https://docs.microsoft.com/en-us/azure/cognitive-services/speech-service/rest-text-to-speech#audio-outputs\nconst DEFAULT_OUTPUT_FORMAT = 'audio-24khz-160kbitrate-mono-mp3';\nconst EMPTY_ARRAY = [];\n\nexport default options => {\n  const {\n    audioContext,\n    fetchCredentials,\n    ponyfill = {\n      AudioContext: window.AudioContext || window.webkitAudioContext\n    },\n    speechSynthesisDeploymentId,\n    speechSynthesisOutputFormat = DEFAULT_OUTPUT_FORMAT\n  } = patchOptions(options);\n\n  if (!audioContext && !ponyfill.AudioContext) {\n    console.warn(\n      'web-speech-cognitive-services: This browser does not support Web Audio and it will not work with Cognitive Services Speech Services.'\n    );\n\n    return {};\n  }\n\n  class SpeechSynthesis extends EventTarget {\n    constructor() {\n      super();\n\n      this.queue = new AudioContextQueue({ audioContext, ponyfill });\n\n      this.updateVoices();\n    }\n\n    cancel() {\n      this.queue.stop();\n    }\n\n    getVoices() {\n      return EMPTY_ARRAY;\n    }\n\n    pause() {\n      this.queue.pause();\n    }\n\n    resume() {\n      this.queue.resume();\n    }\n\n    speak(utterance) {\n      if (!(utterance instanceof SpeechSynthesisUtterance)) {\n        throw new Error('invalid utterance');\n      }\n\n      const { reject, resolve, promise } = createDeferred();\n      const handleError = ({ error: errorCode, message }) => {\n        const error = new Error(errorCode);\n\n        error.stack = message;\n\n        reject(error);\n      };\n\n      utterance.addEventListener('end', resolve);\n      utterance.addEventListener('error', handleError);\n\n      utterance.preload({\n        deploymentId: speechSynthesisDeploymentId,\n        fetchCredentials,\n        outputFormat: speechSynthesisOutputFormat\n      });\n\n      this.queue.push(utterance);\n\n      return promise.finally(() => {\n        utterance.removeEventListener('end', resolve);\n        utterance.removeEventListener('error', handleError);\n      });\n    }\n\n    get speaking() {\n      return this.queue.speaking;\n    }\n\n    async updateVoices() {\n      const { customVoiceHostname, region, speechSynthesisHostname, subscriptionKey } = await fetchCredentials();\n\n      if (speechSynthesisDeploymentId) {\n        if (subscriptionKey) {\n          console.warn(\n            'web-speech-cognitive-services: Listing of custom voice models are only available when using subscription key.'\n          );\n\n          await onErrorResumeNext(async () => {\n            const voices = await fetchCustomVoices({\n              customVoiceHostname,\n              deploymentId: speechSynthesisDeploymentId,\n              region,\n              speechSynthesisHostname,\n              subscriptionKey\n            });\n\n            this.getVoices = () => voices;\n          });\n        }\n      } else {\n        // If fetch voice list failed, we will not emit \"voiceschanged\" event.\n        // In the spec, there is no \"error\" event.\n\n        await onErrorResumeNext(async () => {\n          const voices = await fetchVoices(await fetchCredentials());\n\n          this.getVoices = () => voices;\n        });\n      }\n\n      this.dispatchEvent(new SpeechSynthesisEvent('voiceschanged'));\n    }\n  }\n\n  defineEventAttribute(SpeechSynthesis.prototype, 'voiceschanged');\n\n  return {\n    speechSynthesis: new SpeechSynthesis(),\n    SpeechSynthesisEvent,\n    SpeechSynthesisUtterance\n  };\n};\n"]},"metadata":{},"sourceType":"script"}