{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = emitTypingActivityToPostActivitySaga;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _emitTypingIndicator = require(\"../actions/emitTypingIndicator\");\n\nvar _postActivity = _interopRequireDefault(require(\"../actions/postActivity\"));\n\nvar _whileConnected = _interopRequireDefault(require(\"./effects/whileConnected\"));\n\nvar _marked = /*#__PURE__*/_regenerator[\"default\"].mark(postTypingActivity),\n    _marked2 = /*#__PURE__*/_regenerator[\"default\"].mark(emitTypingActivityToPostActivity),\n    _marked3 = /*#__PURE__*/_regenerator[\"default\"].mark(emitTypingActivityToPostActivitySaga);\n\nfunction postTypingActivity() {\n  return _regenerator[\"default\"].wrap(function postTypingActivity$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _effects.put)((0, _postActivity[\"default\"])({\n            type: 'typing'\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction emitTypingActivityToPostActivity() {\n  return _regenerator[\"default\"].wrap(function emitTypingActivityToPostActivity$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return (0, _effects.takeEvery)(function (_ref) {\n            var type = _ref.type;\n            return type === _emitTypingIndicator.EMIT_TYPING_INDICATOR;\n          }, postTypingActivity);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction emitTypingActivityToPostActivitySaga() {\n  return _regenerator[\"default\"].wrap(function emitTypingActivityToPostActivitySaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return (0, _whileConnected[\"default\"])(emitTypingActivityToPostActivity);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["../../src/sagas/emitTypingIndicatorToPostActivitySaga.js"],"names":["postTypingActivity","type","emitTypingActivityToPostActivity","EMIT_TYPING_INDICATOR","emitTypingActivityToPostActivitySaga"],"mappings":";;;;;;;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,IAAA,oBAAA,GAAA,OAAA,CAAA,gCAAA,CAAA;;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;wDAEUA,kB;yDAQAE,gC;yDAIeE,oC;;AAZzB,SAAA,kBAAA,GAAA;AAAA,SAAA,YAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,mBAAA,CAAA,QAAA,EAAA;AAAA,WAAA,CAAA,EAAA;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,aAAA,CAAA;AAAA,UAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AACE,iBAAM,CAAA,GAAA,QAAA,CAAA,GAAA,EACJ,CAAA,GAAA,aAAA,CAAA,SAAA,CAAA,EAAa;AACXH,YAAAA,IAAI,EAAE;AADK,WAAb,CADI,CAAN;;AADF,aAAA,CAAA;AAAA,aAAA,KAAA;AAAA,iBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,GAAA,EAAA,OAAA,CAAA;AAAA;;AAQA,SAAA,gCAAA,GAAA;AAAA,SAAA,YAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,iCAAA,CAAA,SAAA,EAAA;AAAA,WAAA,CAAA,EAAA;AAAA,cAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,aAAA,CAAA;AAAA,UAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AACE,iBAAM,CAAA,GAAA,QAAA,CAAA,SAAA,EAAU,UAAA,IAAA,EAAA;AAAA,gBAAGA,IAAH,GAAA,IAAA,CAAA,IAAA;AAAA,mBAAcA,IAAI,KAAKE,oBAAAA,CAAvB,qBAAA;AAAV,WAAA,EAAN,kBAAM,CAAN;;AADF,aAAA,CAAA;AAAA,aAAA,KAAA;AAAA,iBAAA,SAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,GAAA,EAAA,QAAA,CAAA;AAAA;;AAIe,SAAA,oCAAA,GAAA;AAAA,SAAA,YAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,qCAAA,CAAA,SAAA,EAAA;AAAA,WAAA,CAAA,EAAA;AAAA,cAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,aAAA,CAAA;AAAA,UAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AACb,iBAAM,CAAA,GAAA,eAAA,CAAA,SAAA,CAAA,EAAN,gCAAM,CAAN;;AADa,aAAA,CAAA;AAAA,aAAA,KAAA;AAAA,iBAAA,SAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,GAAA,EAAA,QAAA,CAAA;AAAA","sourcesContent":["import { put, takeEvery } from 'redux-saga/effects';\n\nimport { EMIT_TYPING_INDICATOR } from '../actions/emitTypingIndicator';\nimport postActivity from '../actions/postActivity';\nimport whileConnected from './effects/whileConnected';\n\nfunction* postTypingActivity() {\n  yield put(\n    postActivity({\n      type: 'typing'\n    })\n  );\n}\n\nfunction* emitTypingActivityToPostActivity() {\n  yield takeEvery(({ type }) => type === EMIT_TYPING_INDICATOR, postTypingActivity);\n}\n\nexport default function* emitTypingActivityToPostActivitySaga() {\n  yield whileConnected(emitTypingActivityToPostActivity);\n}\n"],"sourceRoot":"core:///"},"metadata":{},"sourceType":"script"}