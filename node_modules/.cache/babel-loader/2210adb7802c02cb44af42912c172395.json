{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar root_1 = require('../../util/root');\n\nvar tryCatch_1 = require('../../util/tryCatch');\n\nvar errorObject_1 = require('../../util/errorObject');\n\nvar Observable_1 = require('../../Observable');\n\nvar Subscriber_1 = require('../../Subscriber');\n\nvar map_1 = require('../../operators/map');\n\nfunction getCORSRequest() {\n  if (root_1.root.XMLHttpRequest) {\n    return new root_1.root.XMLHttpRequest();\n  } else if (!!root_1.root.XDomainRequest) {\n    return new root_1.root.XDomainRequest();\n  } else {\n    throw new Error('CORS is not supported by your browser');\n  }\n}\n\nfunction getXMLHttpRequest() {\n  if (root_1.root.XMLHttpRequest) {\n    return new root_1.root.XMLHttpRequest();\n  } else {\n    var progId = void 0;\n\n    try {\n      var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n\n      for (var i = 0; i < 3; i++) {\n        try {\n          progId = progIds[i];\n\n          if (new root_1.root.ActiveXObject(progId)) {\n            break;\n          }\n        } catch (e) {}\n      }\n\n      return new root_1.root.ActiveXObject(progId);\n    } catch (e) {\n      throw new Error('XMLHttpRequest is not supported by your browser');\n    }\n  }\n}\n\nfunction ajaxGet(url, headers) {\n  if (headers === void 0) {\n    headers = null;\n  }\n\n  return new AjaxObservable({\n    method: 'GET',\n    url: url,\n    headers: headers\n  });\n}\n\nexports.ajaxGet = ajaxGet;\n;\n\nfunction ajaxPost(url, body, headers) {\n  return new AjaxObservable({\n    method: 'POST',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\n\nexports.ajaxPost = ajaxPost;\n;\n\nfunction ajaxDelete(url, headers) {\n  return new AjaxObservable({\n    method: 'DELETE',\n    url: url,\n    headers: headers\n  });\n}\n\nexports.ajaxDelete = ajaxDelete;\n;\n\nfunction ajaxPut(url, body, headers) {\n  return new AjaxObservable({\n    method: 'PUT',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\n\nexports.ajaxPut = ajaxPut;\n;\n\nfunction ajaxPatch(url, body, headers) {\n  return new AjaxObservable({\n    method: 'PATCH',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\n\nexports.ajaxPatch = ajaxPatch;\n;\nvar mapResponse = map_1.map(function (x, index) {\n  return x.response;\n});\n\nfunction ajaxGetJSON(url, headers) {\n  return mapResponse(new AjaxObservable({\n    method: 'GET',\n    url: url,\n    responseType: 'json',\n    headers: headers\n  }));\n}\n\nexports.ajaxGetJSON = ajaxGetJSON;\n;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\n\nvar AjaxObservable = function (_super) {\n  __extends(AjaxObservable, _super);\n\n  function AjaxObservable(urlOrRequest) {\n    _super.call(this);\n\n    var request = {\n      async: true,\n      createXHR: function createXHR() {\n        return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n      },\n      crossDomain: false,\n      withCredentials: false,\n      headers: {},\n      method: 'GET',\n      responseType: 'json',\n      timeout: 0\n    };\n\n    if (typeof urlOrRequest === 'string') {\n      request.url = urlOrRequest;\n    } else {\n      for (var prop in urlOrRequest) {\n        if (urlOrRequest.hasOwnProperty(prop)) {\n          request[prop] = urlOrRequest[prop];\n        }\n      }\n    }\n\n    this.request = request;\n  }\n  /** @deprecated internal use only */\n\n\n  AjaxObservable.prototype._subscribe = function (subscriber) {\n    return new AjaxSubscriber(subscriber, this.request);\n  };\n  /**\n   * Creates an observable for an Ajax request with either a request object with\n   * url, headers, etc or a string for a URL.\n   *\n   * @example\n   * source = Rx.Observable.ajax('/products');\n   * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n   *\n   * @param {string|Object} request Can be one of the following:\n   *   A string of the URL to make the Ajax call.\n   *   An object with the following properties\n   *   - url: URL of the request\n   *   - body: The body of the request\n   *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n   *   - async: Whether the request is async\n   *   - headers: Optional headers\n   *   - crossDomain: true if a cross domain request, else false\n   *   - createXHR: a function to override if you need to use an alternate\n   *   XMLHttpRequest implementation.\n   *   - resultSelector: a function to use to alter the output value type of\n   *   the Observable. Gets {@link AjaxResponse} as an argument.\n   * @return {Observable} An observable sequence containing the XMLHttpRequest.\n   * @static true\n   * @name ajax\n   * @owner Observable\n  */\n\n\n  AjaxObservable.create = function () {\n    var create = function create(urlOrRequest) {\n      return new AjaxObservable(urlOrRequest);\n    };\n\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n    return create;\n  }();\n\n  return AjaxObservable;\n}(Observable_1.Observable);\n\nexports.AjaxObservable = AjaxObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nvar AjaxSubscriber = function (_super) {\n  __extends(AjaxSubscriber, _super);\n\n  function AjaxSubscriber(destination, request) {\n    _super.call(this, destination);\n\n    this.request = request;\n    this.done = false;\n    var headers = request.headers = request.headers || {}; // force CORS if requested\n\n    if (!request.crossDomain && !headers['X-Requested-With']) {\n      headers['X-Requested-With'] = 'XMLHttpRequest';\n    } // ensure content type is set\n\n\n    if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    } // properly serialize body\n\n\n    request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n    this.send();\n  }\n\n  AjaxSubscriber.prototype.next = function (e) {\n    this.done = true;\n\n    var _a = this,\n        xhr = _a.xhr,\n        request = _a.request,\n        destination = _a.destination;\n\n    var response = new AjaxResponse(e, xhr, request);\n    destination.next(response);\n  };\n\n  AjaxSubscriber.prototype.send = function () {\n    var _a = this,\n        request = _a.request,\n        _b = _a.request,\n        user = _b.user,\n        method = _b.method,\n        url = _b.url,\n        async = _b.async,\n        password = _b.password,\n        headers = _b.headers,\n        body = _b.body;\n\n    var createXHR = request.createXHR;\n    var xhr = tryCatch_1.tryCatch(createXHR).call(request);\n\n    if (xhr === errorObject_1.errorObject) {\n      this.error(errorObject_1.errorObject.e);\n    } else {\n      this.xhr = xhr; // set up the events before open XHR\n      // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n      // You need to add the event listeners before calling open() on the request.\n      // Otherwise the progress events will not fire.\n\n      this.setupEvents(xhr, request); // open XHR\n\n      var result = void 0;\n\n      if (user) {\n        result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n      } else {\n        result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);\n      }\n\n      if (result === errorObject_1.errorObject) {\n        this.error(errorObject_1.errorObject.e);\n        return null;\n      } // timeout, responseType and withCredentials can be set once the XHR is open\n\n\n      if (async) {\n        xhr.timeout = request.timeout;\n        xhr.responseType = request.responseType;\n      }\n\n      if ('withCredentials' in xhr) {\n        xhr.withCredentials = !!request.withCredentials;\n      } // set headers\n\n\n      this.setHeaders(xhr, headers); // finally send the request\n\n      result = body ? tryCatch_1.tryCatch(xhr.send).call(xhr, body) : tryCatch_1.tryCatch(xhr.send).call(xhr);\n\n      if (result === errorObject_1.errorObject) {\n        this.error(errorObject_1.errorObject.e);\n        return null;\n      }\n    }\n\n    return xhr;\n  };\n\n  AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n    if (!body || typeof body === 'string') {\n      return body;\n    } else if (root_1.root.FormData && body instanceof root_1.root.FormData) {\n      return body;\n    }\n\n    if (contentType) {\n      var splitIndex = contentType.indexOf(';');\n\n      if (splitIndex !== -1) {\n        contentType = contentType.substring(0, splitIndex);\n      }\n    }\n\n    switch (contentType) {\n      case 'application/x-www-form-urlencoded':\n        return Object.keys(body).map(function (key) {\n          return encodeURI(key) + \"=\" + encodeURI(body[key]);\n        }).join('&');\n\n      case 'application/json':\n        return JSON.stringify(body);\n\n      default:\n        return body;\n    }\n  };\n\n  AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n    for (var key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  };\n\n  AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n    var progressSubscriber = request.progressSubscriber;\n\n    function xhrTimeout(e) {\n      var _a = xhrTimeout,\n          subscriber = _a.subscriber,\n          progressSubscriber = _a.progressSubscriber,\n          request = _a.request;\n\n      if (progressSubscriber) {\n        progressSubscriber.error(e);\n      }\n\n      subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n    }\n\n    ;\n    xhr.ontimeout = xhrTimeout;\n    xhrTimeout.request = request;\n    xhrTimeout.subscriber = this;\n    xhrTimeout.progressSubscriber = progressSubscriber;\n\n    if (xhr.upload && 'withCredentials' in xhr) {\n      if (progressSubscriber) {\n        var _xhrProgress_;\n\n        _xhrProgress_ = function xhrProgress_1(e) {\n          var progressSubscriber = _xhrProgress_.progressSubscriber;\n          progressSubscriber.next(e);\n        };\n\n        if (root_1.root.XDomainRequest) {\n          xhr.onprogress = _xhrProgress_;\n        } else {\n          xhr.upload.onprogress = _xhrProgress_;\n        }\n\n        _xhrProgress_.progressSubscriber = progressSubscriber;\n      }\n\n      var _xhrError_;\n\n      _xhrError_ = function xhrError_1(e) {\n        var _a = _xhrError_,\n            progressSubscriber = _a.progressSubscriber,\n            subscriber = _a.subscriber,\n            request = _a.request;\n\n        if (progressSubscriber) {\n          progressSubscriber.error(e);\n        }\n\n        subscriber.error(new AjaxError('ajax error', this, request));\n      };\n\n      xhr.onerror = _xhrError_;\n      _xhrError_.request = request;\n      _xhrError_.subscriber = this;\n      _xhrError_.progressSubscriber = progressSubscriber;\n    }\n\n    function xhrReadyStateChange(e) {\n      var _a = xhrReadyStateChange,\n          subscriber = _a.subscriber,\n          progressSubscriber = _a.progressSubscriber,\n          request = _a.request;\n\n      if (this.readyState === 4) {\n        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n        var status_1 = this.status === 1223 ? 204 : this.status;\n        var response = this.responseType === 'text' ? this.response || this.responseText : this.response; // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n\n        if (status_1 === 0) {\n          status_1 = response ? 200 : 0;\n        }\n\n        if (200 <= status_1 && status_1 < 300) {\n          if (progressSubscriber) {\n            progressSubscriber.complete();\n          }\n\n          subscriber.next(e);\n          subscriber.complete();\n        } else {\n          if (progressSubscriber) {\n            progressSubscriber.error(e);\n          }\n\n          subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\n        }\n      }\n    }\n\n    ;\n    xhr.onreadystatechange = xhrReadyStateChange;\n    xhrReadyStateChange.subscriber = this;\n    xhrReadyStateChange.progressSubscriber = progressSubscriber;\n    xhrReadyStateChange.request = request;\n  };\n\n  AjaxSubscriber.prototype.unsubscribe = function () {\n    var _a = this,\n        done = _a.done,\n        xhr = _a.xhr;\n\n    if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n      xhr.abort();\n    }\n\n    _super.prototype.unsubscribe.call(this);\n  };\n\n  return AjaxSubscriber;\n}(Subscriber_1.Subscriber);\n\nexports.AjaxSubscriber = AjaxSubscriber;\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\n\nvar AjaxResponse = function () {\n  function AjaxResponse(originalEvent, xhr, request) {\n    this.originalEvent = originalEvent;\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n\n  return AjaxResponse;\n}();\n\nexports.AjaxResponse = AjaxResponse;\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\n\nvar AjaxError = function (_super) {\n  __extends(AjaxError, _super);\n\n  function AjaxError(message, xhr, request) {\n    _super.call(this, message);\n\n    this.message = message;\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n\n  return AjaxError;\n}(Error);\n\nexports.AjaxError = AjaxError;\n\nfunction parseXhrResponse(responseType, xhr) {\n  switch (responseType) {\n    case 'json':\n      if ('response' in xhr) {\n        //IE does not support json as responseType, parse it internally\n        return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n      } else {\n        // HACK(benlesh): TypeScript shennanigans\n        // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n        return JSON.parse(xhr.responseText || 'null');\n      }\n\n    case 'xml':\n      return xhr.responseXML;\n\n    case 'text':\n    default:\n      // HACK(benlesh): TypeScript shennanigans\n      // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n      return 'response' in xhr ? xhr.response : xhr.responseText;\n  }\n}\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\n\n\nvar AjaxTimeoutError = function (_super) {\n  __extends(AjaxTimeoutError, _super);\n\n  function AjaxTimeoutError(xhr, request) {\n    _super.call(this, 'ajax timeout', xhr, request);\n  }\n\n  return AjaxTimeoutError;\n}(AjaxError);\n\nexports.AjaxTimeoutError = AjaxTimeoutError;","map":{"version":3,"sources":["../../../src/observable/dom/AjaxObservable.ts"],"names":[],"mappings":"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","sourcesContent":["import { root } from '../../util/root';\nimport { tryCatch } from '../../util/tryCatch';\nimport { errorObject } from '../../util/errorObject';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { TeardownLogic } from '../../Subscription';\nimport { map } from '../../operators/map';\n\nexport interface AjaxRequest {\n  url?: string;\n  body?: any;\n  user?: string;\n  async?: boolean;\n  method?: string;\n  headers?: Object;\n  timeout?: number;\n  password?: string;\n  hasContent?: boolean;\n  crossDomain?: boolean;\n  withCredentials?: boolean;\n  createXHR?: () => XMLHttpRequest;\n  progressSubscriber?: Subscriber<any>;\n  responseType?: string;\n}\n\nfunction getCORSRequest(this: AjaxRequest): XMLHttpRequest {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else if (!!root.XDomainRequest) {\n    return new root.XDomainRequest();\n  } else {\n    throw new Error('CORS is not supported by your browser');\n  }\n}\n\nfunction getXMLHttpRequest(): XMLHttpRequest {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else {\n    let progId: string;\n    try {\n      const progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n      for (let i = 0; i < 3; i++) {\n        try {\n          progId = progIds[i];\n          if (new root.ActiveXObject(progId)) {\n            break;\n          }\n        } catch (e) {\n          //suppress exceptions\n        }\n      }\n      return new root.ActiveXObject(progId);\n    } catch (e) {\n      throw new Error('XMLHttpRequest is not supported by your browser');\n    }\n  }\n}\n\nexport interface AjaxCreationMethod {\n  (urlOrRequest: string | AjaxRequest): Observable<AjaxResponse>;\n  get(url: string, headers?: Object): Observable<AjaxResponse>;\n  post(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  put(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  patch(url: string, body?: any, headers?: Object): Observable<AjaxResponse>;\n  delete(url: string, headers?: Object): Observable<AjaxResponse>;\n  getJSON<T>(url: string, headers?: Object): Observable<T>;\n}\n\nexport function ajaxGet(url: string, headers: Object = null) {\n  return new AjaxObservable<AjaxResponse>({ method: 'GET', url, headers });\n};\n\nexport function ajaxPost(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'POST', url, body, headers });\n};\n\nexport function ajaxDelete(url: string, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'DELETE', url, headers });\n};\n\nexport function ajaxPut(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'PUT', url, body, headers });\n};\n\nexport function ajaxPatch(url: string, body?: any, headers?: Object): Observable<AjaxResponse> {\n  return new AjaxObservable<AjaxResponse>({ method: 'PATCH', url, body, headers });\n};\n\nconst mapResponse = map((x: AjaxResponse, index: number) => x.response);\n\nexport function ajaxGetJSON<T>(url: string, headers?: Object): Observable<T> {\n  return mapResponse(\n    new AjaxObservable<AjaxResponse>({\n      method: 'GET',\n      url,\n      responseType: 'json',\n      headers\n    })\n  );\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class AjaxObservable<T> extends Observable<T> {\n  /**\n   * Creates an observable for an Ajax request with either a request object with\n   * url, headers, etc or a string for a URL.\n   *\n   * @example\n   * source = Rx.Observable.ajax('/products');\n   * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\n   *\n   * @param {string|Object} request Can be one of the following:\n   *   A string of the URL to make the Ajax call.\n   *   An object with the following properties\n   *   - url: URL of the request\n   *   - body: The body of the request\n   *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\n   *   - async: Whether the request is async\n   *   - headers: Optional headers\n   *   - crossDomain: true if a cross domain request, else false\n   *   - createXHR: a function to override if you need to use an alternate\n   *   XMLHttpRequest implementation.\n   *   - resultSelector: a function to use to alter the output value type of\n   *   the Observable. Gets {@link AjaxResponse} as an argument.\n   * @return {Observable} An observable sequence containing the XMLHttpRequest.\n   * @static true\n   * @name ajax\n   * @owner Observable\n  */\n  static create: AjaxCreationMethod = (() => {\n    const create: any = (urlOrRequest: string | AjaxRequest) => {\n      return new AjaxObservable(urlOrRequest);\n    };\n\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n\n    return <AjaxCreationMethod>create;\n  })();\n\n  private request: AjaxRequest;\n\n  constructor(urlOrRequest: string | AjaxRequest) {\n    super();\n\n    const request: AjaxRequest = {\n      async: true,\n      createXHR: function(this: AjaxRequest) {\n        return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\n      },\n      crossDomain: false,\n      withCredentials: false,\n      headers: {},\n      method: 'GET',\n      responseType: 'json',\n      timeout: 0\n    };\n\n    if (typeof urlOrRequest === 'string') {\n      request.url = urlOrRequest;\n    } else {\n      for (const prop in urlOrRequest) {\n        if (urlOrRequest.hasOwnProperty(prop)) {\n          request[prop] = urlOrRequest[prop];\n        }\n      }\n    }\n\n    this.request = request;\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    return new AjaxSubscriber(subscriber, this.request);\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AjaxSubscriber<T> extends Subscriber<Event> {\n  private xhr: XMLHttpRequest;\n  private done: boolean = false;\n\n  constructor(destination: Subscriber<T>, public request: AjaxRequest) {\n    super(destination);\n\n    const headers = request.headers = request.headers || {};\n\n    // force CORS if requested\n    if (!request.crossDomain && !headers['X-Requested-With']) {\n      headers['X-Requested-With'] = 'XMLHttpRequest';\n    }\n\n    // ensure content type is set\n    if (!('Content-Type' in headers) && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n\n    // properly serialize body\n    request.body = this.serializeBody(request.body, request.headers['Content-Type']);\n\n    this.send();\n  }\n\n  next(e: Event): void {\n    this.done = true;\n    const { xhr, request, destination } = this;\n    const response = new AjaxResponse(e, xhr, request);\n\n    destination.next(response);\n  }\n\n  private send(): XMLHttpRequest {\n    const {\n      request,\n      request: { user, method, url, async, password, headers, body }\n    } = this;\n    const createXHR = request.createXHR;\n    const xhr: XMLHttpRequest = tryCatch(createXHR).call(request);\n\n    if (<any>xhr === errorObject) {\n      this.error(errorObject.e);\n    } else {\n      this.xhr = xhr;\n\n      // set up the events before open XHR\n      // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n      // You need to add the event listeners before calling open() on the request.\n      // Otherwise the progress events will not fire.\n      this.setupEvents(xhr, request);\n      // open XHR\n      let result: any;\n      if (user) {\n        result = tryCatch(xhr.open).call(xhr, method, url, async, user, password);\n      } else {\n        result = tryCatch(xhr.open).call(xhr, method, url, async);\n      }\n\n      if (result === errorObject) {\n        this.error(errorObject.e);\n        return null;\n      }\n\n      // timeout, responseType and withCredentials can be set once the XHR is open\n      if (async) {\n        xhr.timeout = request.timeout;\n        xhr.responseType = request.responseType as any;\n      }\n\n      if ('withCredentials' in xhr) {\n        xhr.withCredentials = !!request.withCredentials;\n      }\n\n      // set headers\n      this.setHeaders(xhr, headers);\n\n      // finally send the request\n      result = body ? tryCatch(xhr.send).call(xhr, body) : tryCatch(xhr.send).call(xhr);\n      if (result === errorObject) {\n        this.error(errorObject.e);\n        return null;\n      }\n    }\n\n    return xhr;\n  }\n\n  private serializeBody(body: any, contentType?: string) {\n    if (!body || typeof body === 'string') {\n      return body;\n    } else if (root.FormData && body instanceof root.FormData) {\n      return body;\n    }\n\n    if (contentType) {\n      const splitIndex = contentType.indexOf(';');\n      if (splitIndex !== -1) {\n        contentType = contentType.substring(0, splitIndex);\n      }\n    }\n\n    switch (contentType) {\n      case 'application/x-www-form-urlencoded':\n        return Object.keys(body).map(key => `${encodeURI(key)}=${encodeURI(body[key])}`).join('&');\n      case 'application/json':\n        return JSON.stringify(body);\n      default:\n        return body;\n    }\n  }\n\n  private setHeaders(xhr: XMLHttpRequest, headers: Object) {\n    for (let key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  }\n\n  private setupEvents(xhr: XMLHttpRequest, request: AjaxRequest) {\n    const progressSubscriber = request.progressSubscriber;\n\n    function xhrTimeout(this: XMLHttpRequest, e: ProgressEvent) {\n      const {subscriber, progressSubscriber, request } = (<any>xhrTimeout);\n      if (progressSubscriber) {\n        progressSubscriber.error(e);\n      }\n      subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\n    };\n    xhr.ontimeout = xhrTimeout;\n    (<any>xhrTimeout).request = request;\n    (<any>xhrTimeout).subscriber = this;\n    (<any>xhrTimeout).progressSubscriber = progressSubscriber;\n    if (xhr.upload && 'withCredentials' in xhr) {\n      if (progressSubscriber) {\n        let xhrProgress: (e: ProgressEvent) => void;\n        xhrProgress = function(e: ProgressEvent) {\n          const { progressSubscriber } = (<any>xhrProgress);\n          progressSubscriber.next(e);\n        };\n        if (root.XDomainRequest) {\n          xhr.onprogress = xhrProgress;\n        } else {\n          xhr.upload.onprogress = xhrProgress;\n        }\n        (<any>xhrProgress).progressSubscriber = progressSubscriber;\n      }\n      let xhrError: (e: ErrorEvent) => void;\n      xhrError = function(this: XMLHttpRequest, e: ErrorEvent) {\n        const { progressSubscriber, subscriber, request } = (<any>xhrError);\n        if (progressSubscriber) {\n          progressSubscriber.error(e);\n        }\n        subscriber.error(new AjaxError('ajax error', this, request));\n      };\n      xhr.onerror = xhrError;\n      (<any>xhrError).request = request;\n      (<any>xhrError).subscriber = this;\n      (<any>xhrError).progressSubscriber = progressSubscriber;\n    }\n\n    function xhrReadyStateChange(this: XMLHttpRequest, e: ProgressEvent) {\n      const { subscriber, progressSubscriber, request } = (<any>xhrReadyStateChange);\n      if (this.readyState === 4) {\n        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n        let status: number = this.status === 1223 ? 204 : this.status;\n        let response: any = (this.responseType === 'text' ?  (\n          this.response || this.responseText) : this.response);\n\n        // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n        if (status === 0) {\n          status = response ? 200 : 0;\n        }\n\n        if (200 <= status && status < 300) {\n          if (progressSubscriber) {\n            progressSubscriber.complete();\n          }\n          subscriber.next(e);\n          subscriber.complete();\n        } else {\n          if (progressSubscriber) {\n            progressSubscriber.error(e);\n          }\n          subscriber.error(new AjaxError('ajax error ' + status, this, request));\n        }\n      }\n    };\n    xhr.onreadystatechange = xhrReadyStateChange;\n    (<any>xhrReadyStateChange).subscriber = this;\n    (<any>xhrReadyStateChange).progressSubscriber = progressSubscriber;\n    (<any>xhrReadyStateChange).request = request;\n  }\n\n  unsubscribe() {\n    const { done, xhr } = this;\n    if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n      xhr.abort();\n    }\n    super.unsubscribe();\n  }\n}\n\n/**\n * A normalized AJAX response.\n *\n * @see {@link ajax}\n *\n * @class AjaxResponse\n */\nexport class AjaxResponse {\n  /** @type {number} The HTTP status code */\n  status: number;\n\n  /** @type {string|ArrayBuffer|Document|object|any} The response data */\n  response: any;\n\n  /** @type {string} The raw responseText */\n  responseText: string;\n\n  /** @type {string} The responseType (e.g. 'json', 'arraybuffer', or 'xml') */\n  responseType: string;\n\n  constructor(public originalEvent: Event, public xhr: XMLHttpRequest, public request: AjaxRequest) {\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n}\n\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nexport class AjaxError extends Error {\n  /** @type {XMLHttpRequest} The XHR instance associated with the error */\n  xhr: XMLHttpRequest;\n\n  /** @type {AjaxRequest} The AjaxRequest associated with the error */\n  request: AjaxRequest;\n\n  /** @type {number} The HTTP status code */\n  status: number;\n\n  /** @type {string} The responseType (e.g. 'json', 'arraybuffer', or 'xml') */\n  responseType: string;\n\n  /** @type {string|ArrayBuffer|Document|object|any} The response data */\n  response: any;\n\n  constructor(message: string, xhr: XMLHttpRequest, request: AjaxRequest) {\n    super(message);\n    this.message = message;\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n}\n\nfunction parseXhrResponse(responseType: string, xhr: XMLHttpRequest) {\n  switch (responseType) {\n    case 'json':\n        if ('response' in xhr) {\n          //IE does not support json as responseType, parse it internally\n          return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n        } else {\n          // HACK(benlesh): TypeScript shennanigans\n          // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n          return JSON.parse((xhr as any).responseText || 'null');\n        }\n      case 'xml':\n        return xhr.responseXML;\n      case 'text':\n      default:\n          // HACK(benlesh): TypeScript shennanigans\n          // tslint:disable-next-line:no-any latest TS seems to think xhr is \"never\" here.\n          return  ('response' in xhr) ? xhr.response : (xhr as any).responseText;\n  }\n}\n\n/**\n * @see {@link ajax}\n *\n * @class AjaxTimeoutError\n */\nexport class AjaxTimeoutError extends AjaxError {\n  constructor(xhr: XMLHttpRequest, request: AjaxRequest) {\n    super('ajax timeout', xhr, request);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}