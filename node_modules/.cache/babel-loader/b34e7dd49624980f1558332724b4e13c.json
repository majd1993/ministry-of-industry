{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = render;\n\nvar _markdownItForInline = _interopRequireDefault(require(\"markdown-it-for-inline\"));\n\nvar _markdownIt = _interopRequireDefault(require(\"markdown-it\"));\n\nvar _markdownItAttrsEs = _interopRequireDefault(require(\"markdown-it-attrs-es5\"));\n\nvar _sanitizeHtml = _interopRequireDefault(require(\"sanitize-html\"));\n/* eslint no-magic-numbers: [\"error\", { \"ignore\": [1] }] */\n\n\nvar SANITIZE_HTML_OPTIONS = {\n  allowedAttributes: {\n    a: ['aria-label', 'href', 'name', 'rel', 'target', 'title'],\n    img: ['alt', 'src']\n  },\n  allowedSchemes: ['data', 'http', 'https', 'ftp', 'mailto', 'sip', 'tel'],\n  allowedTags: ['a', 'b', 'blockquote', 'br', 'caption', 'code', 'div', 'em', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'i', 'img', 'li', 'nl', 'ol', 'p', 'pre', 'span', 'strike', 'strong', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul']\n};\nvar customMarkdownIt = new _markdownIt.default({\n  breaks: false,\n  html: false,\n  linkify: true,\n  typographer: true,\n  xhtmlOut: true\n}).use(_markdownItAttrsEs.default).use(_markdownItForInline.default, 'url_new_win', 'link_open', function (tokens, index) {\n  // TODO: [P4] This is copied from v3 and looks clunky\n  //       We should refactor this code\n  var targetAttrIndex = tokens[index].attrIndex('target');\n\n  if (~targetAttrIndex) {\n    tokens[index].attrs[targetAttrIndex][1] = '_blank';\n  } else {\n    tokens[index].attrPush(['target', '_blank']);\n  }\n\n  var relAttrIndex = tokens[index].attrIndex('rel');\n\n  if (~relAttrIndex) {\n    tokens[index].attrs[relAttrIndex][1] = 'noopener noreferrer';\n  } else {\n    tokens[index].attrPush(['rel', 'noopener noreferrer']);\n  }\n});\n\nfunction render(markdown, _ref) {\n  var markdownRespectCRLF = _ref.markdownRespectCRLF;\n\n  if (markdownRespectCRLF) {\n    markdown = markdown.replace(/\\n\\r|\\r\\n/g, function (carriageReturn) {\n      return carriageReturn === '\\n\\r' ? '\\r\\n' : '\\n\\r';\n    });\n  }\n\n  var html = customMarkdownIt.render(markdown);\n  return (0, _sanitizeHtml.default)(html, SANITIZE_HTML_OPTIONS);\n}","map":{"version":3,"sources":["../src/renderMarkdown.js"],"names":["SANITIZE_HTML_OPTIONS","allowedAttributes","a","img","allowedSchemes","allowedTags","customMarkdownIt","MarkdownIt","breaks","html","linkify","typographer","xhtmlOut","markdownItAttrs","iterator","targetAttrIndex","tokens","relAttrIndex","markdownRespectCRLF","markdown","carriageReturn"],"mappings":"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","sourcesContent":["/* eslint no-magic-numbers: [\"error\", { \"ignore\": [1] }] */\n\nimport iterator from 'markdown-it-for-inline';\nimport MarkdownIt from 'markdown-it';\nimport markdownItAttrs from 'markdown-it-attrs-es5';\nimport sanitizeHTML from 'sanitize-html';\n\nconst SANITIZE_HTML_OPTIONS = {\n  allowedAttributes: {\n    a: ['aria-label', 'href', 'name', 'rel', 'target', 'title'],\n    img: ['alt', 'src']\n  },\n  allowedSchemes: ['data', 'http', 'https', 'ftp', 'mailto', 'sip', 'tel'],\n  allowedTags: [\n    'a',\n    'b',\n    'blockquote',\n    'br',\n    'caption',\n    'code',\n    'div',\n    'em',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'hr',\n    'i',\n    'img',\n    'li',\n    'nl',\n    'ol',\n    'p',\n    'pre',\n    'span',\n    'strike',\n    'strong',\n    'table',\n    'tbody',\n    'td',\n    'tfoot',\n    'th',\n    'thead',\n    'tr',\n    'ul'\n  ]\n};\n\nconst customMarkdownIt = new MarkdownIt({\n  breaks: false,\n  html: false,\n  linkify: true,\n  typographer: true,\n  xhtmlOut: true\n})\n  .use(markdownItAttrs)\n  .use(iterator, 'url_new_win', 'link_open', (tokens, index) => {\n    // TODO: [P4] This is copied from v3 and looks clunky\n    //       We should refactor this code\n    const targetAttrIndex = tokens[index].attrIndex('target');\n\n    if (~targetAttrIndex) {\n      tokens[index].attrs[targetAttrIndex][1] = '_blank';\n    } else {\n      tokens[index].attrPush(['target', '_blank']);\n    }\n\n    const relAttrIndex = tokens[index].attrIndex('rel');\n\n    if (~relAttrIndex) {\n      tokens[index].attrs[relAttrIndex][1] = 'noopener noreferrer';\n    } else {\n      tokens[index].attrPush(['rel', 'noopener noreferrer']);\n    }\n  });\n\nexport default function render(markdown, { markdownRespectCRLF }) {\n  if (markdownRespectCRLF) {\n    markdown = markdown.replace(/\\n\\r|\\r\\n/gu, carriageReturn => (carriageReturn === '\\n\\r' ? '\\r\\n' : '\\n\\r'));\n  }\n\n  const html = customMarkdownIt.render(markdown);\n\n  return sanitizeHTML(html, SANITIZE_HTML_OPTIONS);\n}\n"],"sourceRoot":"bundle:///"},"metadata":{},"sourceType":"script"}