{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useByteFormatter;\n\nvar _react = require(\"react\");\n\nvar _useLocalizedGlobalize = _interopRequireDefault(require(\"./internal/useLocalizedGlobalize\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar KILOBYTE = 1024;\nvar MEGABYTE = 1048576;\nvar GIGABYTE = 1073741824;\nvar LONG_FORM = {\n  form: 'long'\n};\nvar SHORT_FORM = {\n  form: 'short'\n};\n\nfunction useByteFormatter() {\n  var _useLocalizedGlobaliz = (0, _useLocalizedGlobalize.default)(),\n      _useLocalizedGlobaliz2 = _slicedToArray(_useLocalizedGlobaliz, 1),\n      globalize = _useLocalizedGlobaliz2[0];\n\n  return (0, _react.useMemo)(function () {\n    var unitFormatter = globalize.unitFormatter.bind(globalize);\n    return function (bytes) {\n      if (bytes < KILOBYTE) {\n        return unitFormatter('byte', LONG_FORM)(bytes);\n      } else if (bytes < MEGABYTE) {\n        return unitFormatter('kilobyte', SHORT_FORM)(~~(bytes / KILOBYTE));\n      } else if (bytes < GIGABYTE) {\n        return unitFormatter('megabyte', SHORT_FORM)(~~(bytes / MEGABYTE));\n      }\n\n      return unitFormatter('gigabyte', SHORT_FORM)(~~(bytes / GIGABYTE));\n    };\n  }, [globalize]);\n}","map":{"version":3,"sources":["../../src/hooks/useByteFormatter.js"],"names":["KILOBYTE","MEGABYTE","GIGABYTE","LONG_FORM","form","SHORT_FORM","globalize","unitFormatter","bytes"],"mappings":";;;;;;;AAEA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,sBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,kCAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,QAAQ,GAAd,IAAA;AACA,IAAMC,QAAQ,GAAd,OAAA;AACA,IAAMC,QAAQ,GAAd,UAAA;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE;AADU,CAAlB;AAIA,IAAMC,UAAU,GAAG;AACjBD,EAAAA,IAAI,EAAE;AADW,CAAnB;;AAIe,SAAA,gBAAA,GAA4B;AAAA,MAAA,qBAAA,GACrB,CAAA,GAAA,sBAAA,CADqB,OACrB,GADqB;AAAA,MAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA,EAAA,CAAA,CAAA;AAAA,MAClCE,SADkC,GAAA,sBAAA,CAAA,CAAA,CAAA;;AAGzC,SAAO,CAAA,GAAA,MAAA,CAAA,OAAA,EAAQ,YAAM;AACnB,QAAMC,aAAa,GAAGD,SAAS,CAATA,aAAAA,CAAAA,IAAAA,CAAtB,SAAsBA,CAAtB;AAEA,WAAO,UAAA,KAAA,EAAS;AACd,UAAIE,KAAK,GAAT,QAAA,EAAsB;AACpB,eAAOD,aAAa,CAAA,MAAA,EAAbA,SAAa,CAAbA,CAAP,KAAOA,CAAP;AADF,OAAA,MAEO,IAAIC,KAAK,GAAT,QAAA,EAAsB;AAC3B,eAAOD,aAAa,CAAA,UAAA,EAAbA,UAAa,CAAbA,CAAsC,CAAC,EAAEC,KAAK,GAArD,QAA8C,CAAvCD,CAAP;AADK,OAAA,MAEA,IAAIC,KAAK,GAAT,QAAA,EAAsB;AAC3B,eAAOD,aAAa,CAAA,UAAA,EAAbA,UAAa,CAAbA,CAAsC,CAAC,EAAEC,KAAK,GAArD,QAA8C,CAAvCD,CAAP;AACD;;AAED,aAAOA,aAAa,CAAA,UAAA,EAAbA,UAAa,CAAbA,CAAsC,CAAC,EAAEC,KAAK,GAArD,QAA8C,CAAvCD,CAAP;AATF,KAAA;AAHK,GAAA,EAcJ,CAdH,SAcG,CAdI,CAAP;AAeD","sourcesContent":["/* eslint no-magic-numbers: [\"error\", { \"ignore\": [1024, 1048576, 1073741824] }] */\n\nimport { useMemo } from 'react';\nimport useLocalizedGlobalize from './internal/useLocalizedGlobalize';\n\nconst KILOBYTE = 1024;\nconst MEGABYTE = 1048576;\nconst GIGABYTE = 1073741824;\n\nconst LONG_FORM = {\n  form: 'long'\n};\n\nconst SHORT_FORM = {\n  form: 'short'\n};\n\nexport default function useByteFormatter() {\n  const [globalize] = useLocalizedGlobalize();\n\n  return useMemo(() => {\n    const unitFormatter = globalize.unitFormatter.bind(globalize);\n\n    return bytes => {\n      if (bytes < KILOBYTE) {\n        return unitFormatter('byte', LONG_FORM)(bytes);\n      } else if (bytes < MEGABYTE) {\n        return unitFormatter('kilobyte', SHORT_FORM)(~~(bytes / KILOBYTE));\n      } else if (bytes < GIGABYTE) {\n        return unitFormatter('megabyte', SHORT_FORM)(~~(bytes / MEGABYTE));\n      }\n\n      return unitFormatter('gigabyte', SHORT_FORM)(~~(bytes / GIGABYTE));\n    };\n  }, [globalize]);\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}