{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = observeActivitySaga;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _simpleUpdateIn = _interopRequireDefault(require(\"simple-update-in\"));\n\nvar _observeEach = _interopRequireDefault(require(\"./effects/observeEach\"));\n\nvar _queueIncomingActivity = _interopRequireDefault(require(\"../actions/queueIncomingActivity\"));\n\nvar _whileConnected = _interopRequireDefault(require(\"./effects/whileConnected\"));\n\nvar _marked = /*#__PURE__*/_regenerator[\"default\"].mark(observeActivity),\n    _marked2 = /*#__PURE__*/_regenerator[\"default\"].mark(observeActivitySaga);\n\nvar PASSTHRU_FN = function PASSTHRU_FN(value) {\n  return value;\n};\n\nfunction patchActivityWithFromRole(activity, userID) {\n  // Some activities, such as \"ConversationUpdate\", does not have \"from\" defined.\n  // And although \"role\" is defined in Direct Line spec, it was not sent over the wire.\n  // We normalize the activity here to simplify null-check and logic later.\n  // Patch activity.from.role to make sure its either \"bot\", \"user\", or \"channel\"\n  if (!activity.from) {\n    activity = (0, _simpleUpdateIn[\"default\"])(activity, ['from', 'role'], function () {\n      return 'channel';\n    });\n  } else if (!activity.from.role) {\n    if (activity.from.id === userID) {\n      activity = (0, _simpleUpdateIn[\"default\"])(activity, ['from', 'role'], function () {\n        return 'user';\n      });\n    } else if (activity.from.id) {\n      activity = (0, _simpleUpdateIn[\"default\"])(activity, ['from', 'role'], function () {\n        return 'bot';\n      });\n    } else {\n      activity = (0, _simpleUpdateIn[\"default\"])(activity, ['from', 'role'], function () {\n        return 'channel';\n      });\n    }\n  }\n\n  return activity;\n}\n\nfunction patchNullAsUndefined(activity) {\n  // These fields are known used in Web Chat and in any cases, they should not be null, but undefined.\n  // The only field omitted is \"value\", as it could be null purposefully.\n  return ['attachmentLayout', 'attachments', 'channelData', 'conversation', 'entities', 'from', 'inputHint', 'locale', 'name', 'recipient', 'speak', 'suggestedActions', 'text', 'textFormat', 'timestamp', 'type'].reduce(function (activity, name) {\n    var value = activity[name];\n    return (0, _simpleUpdateIn[\"default\"])(activity, [name], typeof value === 'undefined' || value === null ? undefined : PASSTHRU_FN);\n  }, activity);\n}\n\nfunction observeActivity(_ref) {\n  var directLine, userID;\n  return _regenerator[\"default\"].wrap(function observeActivity$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          directLine = _ref.directLine, userID = _ref.userID;\n          _context2.next = 3;\n          return (0, _observeEach[\"default\"])(directLine.activity$, /*#__PURE__*/_regenerator[\"default\"].mark(function observeActivity(activity) {\n            return _regenerator[\"default\"].wrap(function observeActivity$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    activity = patchNullAsUndefined(activity);\n                    activity = patchActivityWithFromRole(activity, userID);\n                    _context.next = 4;\n                    return (0, _effects.put)((0, _queueIncomingActivity[\"default\"])(activity));\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, observeActivity);\n          }));\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction observeActivitySaga() {\n  return _regenerator[\"default\"].wrap(function observeActivitySaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return (0, _whileConnected[\"default\"])(observeActivity);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["../../src/sagas/observeActivitySaga.js"],"names":["PASSTHRU_FN","activity","value","observeActivity","directLine","userID","patchNullAsUndefined","patchActivityWithFromRole","observeActivitySaga"],"mappings":"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","sourcesContent":["import { put } from 'redux-saga/effects';\nimport updateIn from 'simple-update-in';\n\nimport observeEach from './effects/observeEach';\nimport queueIncomingActivity from '../actions/queueIncomingActivity';\nimport whileConnected from './effects/whileConnected';\n\nconst PASSTHRU_FN = value => value;\n\nfunction patchActivityWithFromRole(activity, userID) {\n  // Some activities, such as \"ConversationUpdate\", does not have \"from\" defined.\n  // And although \"role\" is defined in Direct Line spec, it was not sent over the wire.\n  // We normalize the activity here to simplify null-check and logic later.\n\n  // Patch activity.from.role to make sure its either \"bot\", \"user\", or \"channel\"\n  if (!activity.from) {\n    activity = updateIn(activity, ['from', 'role'], () => 'channel');\n  } else if (!activity.from.role) {\n    if (activity.from.id === userID) {\n      activity = updateIn(activity, ['from', 'role'], () => 'user');\n    } else if (activity.from.id) {\n      activity = updateIn(activity, ['from', 'role'], () => 'bot');\n    } else {\n      activity = updateIn(activity, ['from', 'role'], () => 'channel');\n    }\n  }\n\n  return activity;\n}\n\nfunction patchNullAsUndefined(activity) {\n  // These fields are known used in Web Chat and in any cases, they should not be null, but undefined.\n  // The only field omitted is \"value\", as it could be null purposefully.\n\n  return [\n    'attachmentLayout',\n    'attachments',\n    'channelData',\n    'conversation',\n    'entities',\n    'from',\n    'inputHint',\n    'locale',\n    'name',\n    'recipient',\n    'speak',\n    'suggestedActions',\n    'text',\n    'textFormat',\n    'timestamp',\n    'type'\n  ].reduce((activity, name) => {\n    const { [name]: value } = activity;\n\n    return updateIn(activity, [name], typeof value === 'undefined' || value === null ? undefined : PASSTHRU_FN);\n  }, activity);\n}\n\nfunction* observeActivity({ directLine, userID }) {\n  yield observeEach(directLine.activity$, function* observeActivity(activity) {\n    activity = patchNullAsUndefined(activity);\n    activity = patchActivityWithFromRole(activity, userID);\n\n    yield put(queueIncomingActivity(activity));\n  });\n}\n\nexport default function* observeActivitySaga() {\n  yield whileConnected(observeActivity);\n}\n"],"sourceRoot":"core:///"},"metadata":{},"sourceType":"script"}