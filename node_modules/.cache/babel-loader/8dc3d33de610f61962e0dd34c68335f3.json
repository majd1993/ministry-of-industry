{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = startSpeakActivityOnPostActivitySaga;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _postActivity = require(\"../actions/postActivity\");\n\nvar _startSpeakingActivity = _interopRequireDefault(require(\"../actions/startSpeakingActivity\"));\n\nvar _whileConnected = _interopRequireDefault(require(\"./effects/whileConnected\"));\n\nvar _marked = /*#__PURE__*/_regenerator[\"default\"].mark(startSpeakActivityOnPostActivity),\n    _marked2 = /*#__PURE__*/_regenerator[\"default\"].mark(startSpeakActivityOnPostActivitySaga);\n\nfunction startSpeakActivityOnPostActivity() {\n  return _regenerator[\"default\"].wrap(function startSpeakActivityOnPostActivity$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return (0, _effects.takeEvery)(function (_ref) {\n            var meta = _ref.meta,\n                payload = _ref.payload,\n                type = _ref.type;\n            return type === _postActivity.POST_ACTIVITY_PENDING && meta.method === 'speech' && payload.activity.type === 'message';\n          }, /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n            return _regenerator[\"default\"].wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return (0, _effects.put)((0, _startSpeakingActivity[\"default\"])());\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction startSpeakActivityOnPostActivitySaga() {\n  return _regenerator[\"default\"].wrap(function startSpeakActivityOnPostActivitySaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return (0, _whileConnected[\"default\"])(startSpeakActivityOnPostActivity);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["../../src/sagas/startSpeakActivityOnPostActivitySaga.js"],"names":["startSpeakActivityOnPostActivity","meta","payload","type","POST_ACTIVITY_PENDING","startSpeakActivityOnPostActivitySaga"],"mappings":";;;;;;;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AACA,IAAA,sBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,kCAAA,CAAA,CAAA;;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;wDAEUA,gC;yDAUeK,oC;;AAVzB,SAAA,gCAAA,GAAA;AAAA,SAAA,YAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,iCAAA,CAAA,SAAA,EAAA;AAAA,WAAA,CAAA,EAAA;AAAA,cAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,aAAA,CAAA;AAAA,UAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AACE,iBAAM,CAAA,GAAA,QAAA,CAAA,SAAA,EACJ,UAAA,IAAA,EAAA;AAAA,gBAAGJ,IAAH,GAAA,IAAA,CAAA,IAAA;AAAA,gBAASC,OAAT,GAAA,IAAA,CAAA,OAAA;AAAA,gBAAkBC,IAAlB,GAAA,IAAA,CAAA,IAAA;AAAA,mBACEA,IAAI,KAAKC,aAAAA,CAATD,qBAAAA,IAAkCF,IAAI,CAAJA,MAAAA,KAAlCE,QAAAA,IAA8DD,OAAO,CAAPA,QAAAA,CAAAA,IAAAA,KADhE,SAAA;AADI,WAAA,EAAA,aAAA,YAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAGJ,SAAA,OAAA,GAAA;AAAA,mBAAA,YAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,qBAAA,CAAA,EAAA;AAAA,wBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,uBAAA,CAAA;AAAA,oBAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AACE,2BAAM,CAAA,GAAA,QAAA,CAAA,GAAA,EAAI,CAAA,GAAA,sBAAA,CAAV,SAAU,CAAA,GAAJ,CAAN;;AADF,uBAAA,CAAA;AAAA,uBAAA,KAAA;AAAA,2BAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,aAAA,EAAA,OAAA,CAAA;AAHF,WAAM,CAAA,CAAN;;AADF,aAAA,CAAA;AAAA,aAAA,KAAA;AAAA,iBAAA,SAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,GAAA,EAAA,OAAA,CAAA;AAAA;;AAUe,SAAA,oCAAA,GAAA;AAAA,SAAA,YAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,qCAAA,CAAA,SAAA,EAAA;AAAA,WAAA,CAAA,EAAA;AAAA,cAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,aAAA,CAAA;AAAA,UAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AACb,iBAAM,CAAA,GAAA,eAAA,CAAA,SAAA,CAAA,EAAN,gCAAM,CAAN;;AADa,aAAA,CAAA;AAAA,aAAA,KAAA;AAAA,iBAAA,SAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,GAAA,EAAA,QAAA,CAAA;AAAA","sourcesContent":["import { put, takeEvery } from 'redux-saga/effects';\n\nimport { POST_ACTIVITY_PENDING } from '../actions/postActivity';\nimport startSpeakingActivity from '../actions/startSpeakingActivity';\nimport whileConnected from './effects/whileConnected';\n\nfunction* startSpeakActivityOnPostActivity() {\n  yield takeEvery(\n    ({ meta, payload, type }) =>\n      type === POST_ACTIVITY_PENDING && meta.method === 'speech' && payload.activity.type === 'message',\n    function*() {\n      yield put(startSpeakingActivity());\n    }\n  );\n}\n\nexport default function* startSpeakActivityOnPostActivitySaga() {\n  yield whileConnected(startSpeakActivityOnPostActivity);\n}\n"],"sourceRoot":"core:///"},"metadata":{},"sourceType":"script"}