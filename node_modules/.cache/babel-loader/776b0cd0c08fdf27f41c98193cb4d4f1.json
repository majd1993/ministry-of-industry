{"ast":null,"code":"import _classCallCheck from \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\nimport { VoiceProfileType } from \"./Exports\";\n/**\n * Defines SpeakerIdentificationModel class for Speaker Recognition\n * Model contains a set of profiles against which to identify speaker(s)\n * @class SpeakerIdentificationModel\n */\n\nexport var SpeakerIdentificationModel = /*#__PURE__*/function () {\n  function SpeakerIdentificationModel(profiles) {\n    var _this = this;\n\n    _classCallCheck(this, SpeakerIdentificationModel);\n\n    this.privVoiceProfiles = [];\n    Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\n\n    if (profiles.length === 0) {\n      throw new Error(\"Empty Voice Profiles array\");\n    }\n\n    profiles.forEach(function (profile) {\n      if (profile.profileType !== VoiceProfileType.TextIndependentIdentification) {\n        throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\n      }\n\n      _this.privVoiceProfiles.push(profile);\n    });\n  }\n\n  _createClass(SpeakerIdentificationModel, [{\n    key: \"voiceProfileIds\",\n    get: function get() {\n      return this.privVoiceProfiles.map(function (profile) {\n        return profile.profileId;\n      }).join(\",\");\n    }\n  }], [{\n    key: \"fromProfiles\",\n    value: function fromProfiles(profiles) {\n      return new SpeakerIdentificationModel(profiles);\n    }\n  }]);\n\n  return SpeakerIdentificationModel;\n}();","map":{"version":3,"sources":["src/sdk/SpeakerIdentificationModel.ts"],"names":[],"mappings":";;AAAA;AACA;AAEA,SAAS,SAAT,QAA0B,aAA1B;AACA,SAEI,gBAFJ,QAGO,WAHP;AAKA;;;;AAIG;;AACH,WAAa,0BAAb;AAGI,sCAAoB,QAApB,EAA4C;AAAA;;AAAA;;AAFpC,SAAA,iBAAA,GAAoC,EAApC;AAGJ,IAAA,SAAS,CAAC,sBAAV,CAAiC,QAAjC,EAA2C,eAA3C;;AACA,QAAI,QAAQ,CAAC,MAAT,KAAoB,CAAxB,EAA2B;AACvB,YAAM,IAAI,KAAJ,CAAU,4BAAV,CAAN;AACH;;AACD,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAC,OAAD,EAA0B;AACvC,UAAI,OAAO,CAAC,WAAR,KAAwB,gBAAgB,CAAC,6BAA7C,EAA4E;AACxE,cAAM,IAAI,KAAJ,CAAU,2EAA2E,OAAO,CAAC,SAA7F,CAAN;AACH;;AACD,MAAA,KAAI,CAAC,iBAAL,CAAuB,IAAvB,CAA4B,OAA5B;AACH,KALD;AAMH;;AAdL;AAAA;AAAA,SAmBI,eAA0B;AACtB,aAAO,KAAK,iBAAL,CAAuB,GAAvB,CAA2B,UAAC,OAAD;AAAA,eAA2B,OAAO,CAAC,SAAnC;AAAA,OAA3B,EAAyE,IAAzE,CAA8E,GAA9E,CAAP;AACH;AArBL;AAAA;AAAA,WAeW,sBAAoB,QAApB,EAA4C;AAC/C,aAAO,IAAI,0BAAJ,CAA+B,QAA/B,CAAP;AACH;AAjBL;;AAAA;AAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    VoiceProfile,\r\n    VoiceProfileType,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines SpeakerIdentificationModel class for Speaker Recognition\r\n * Model contains a set of profiles against which to identify speaker(s)\r\n * @class SpeakerIdentificationModel\r\n */\r\nexport class SpeakerIdentificationModel {\r\n    private privVoiceProfiles: VoiceProfile[] = [];\r\n\r\n    private constructor(profiles: VoiceProfile[]) {\r\n        Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\r\n        if (profiles.length === 0) {\r\n            throw new Error(\"Empty Voice Profiles array\");\r\n        }\r\n        profiles.forEach((profile: VoiceProfile) => {\r\n            if (profile.profileType !== VoiceProfileType.TextIndependentIdentification) {\r\n                throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\r\n            }\r\n            this.privVoiceProfiles.push(profile);\r\n        });\r\n    }\r\n    public static fromProfiles(profiles: VoiceProfile[]): SpeakerIdentificationModel {\r\n        return new SpeakerIdentificationModel(profiles);\r\n    }\r\n\r\n    public get voiceProfileIds(): string {\r\n        return this.privVoiceProfiles.map((profile: VoiceProfile) => profile.profileId).join(\",\");\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}