{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _botframeworkWebchatComponent = require(\"botframework-webchat-component\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _AdaptiveCardBuilder = _interopRequireDefault(require(\"./AdaptiveCardBuilder\"));\n\nvar _AdaptiveCardRenderer = _interopRequireDefault(require(\"./AdaptiveCardRenderer\"));\n\nvar _useAdaptiveCardsPackage = _interopRequireDefault(require(\"../hooks/useAdaptiveCardsPackage\"));\n/* eslint no-magic-numbers: [\"error\", { \"ignore\": [25, 75] }] */\n\n\nvar useDirection = _botframeworkWebchatComponent.hooks.useDirection,\n    useStyleOptions = _botframeworkWebchatComponent.hooks.useStyleOptions;\n\nvar ThumbnailCardContent = function ThumbnailCardContent(_ref) {\n  var actionPerformedClassName = _ref.actionPerformedClassName,\n      content = _ref.content,\n      disabled = _ref.disabled;\n\n  var _useAdaptiveCardsPack = (0, _useAdaptiveCardsPackage.default)(),\n      _useAdaptiveCardsPack2 = (0, _slicedToArray2.default)(_useAdaptiveCardsPack, 1),\n      adaptiveCardsPackage = _useAdaptiveCardsPack2[0];\n\n  var _useDirection = useDirection(),\n      _useDirection2 = (0, _slicedToArray2.default)(_useDirection, 1),\n      direction = _useDirection2[0];\n\n  var _useStyleOptions = useStyleOptions(),\n      _useStyleOptions2 = (0, _slicedToArray2.default)(_useStyleOptions, 1),\n      styleOptions = _useStyleOptions2[0];\n\n  var builtCard = (0, _react.useMemo)(function () {\n    if (content) {\n      var builder = new _AdaptiveCardBuilder.default(adaptiveCardsPackage, styleOptions, direction);\n      var TextSize = adaptiveCardsPackage.TextSize,\n          TextWeight = adaptiveCardsPackage.TextWeight;\n      var buttons = content.buttons,\n          images = content.images,\n          subtitle = content.subtitle,\n          text = content.text,\n          title = content.title;\n      var richCardWrapTitle = styleOptions.richCardWrapTitle;\n\n      if (images && images.length) {\n        var _builder$addColumnSet = builder.addColumnSet([75, 25]),\n            _builder$addColumnSet2 = (0, _slicedToArray2.default)(_builder$addColumnSet, 2),\n            firstColumn = _builder$addColumnSet2[0],\n            lastColumn = _builder$addColumnSet2[1];\n\n        var _images = (0, _slicedToArray2.default)(images, 1),\n            _images$ = _images[0],\n            alt = _images$.alt,\n            tap = _images$.tap,\n            url = _images$.url;\n\n        builder.addTextBlock(title, {\n          size: TextSize.Medium,\n          weight: TextWeight.Bolder,\n          wrap: richCardWrapTitle\n        }, firstColumn);\n        builder.addTextBlock(subtitle, {\n          isSubtle: true,\n          wrap: richCardWrapTitle\n        }, firstColumn);\n        builder.addImage(url, lastColumn, tap, alt);\n        builder.addTextBlock(text, {\n          wrap: true\n        });\n        builder.addButtons(buttons);\n      } else {\n        builder.addCommon(content);\n      }\n\n      return builder.card;\n    }\n  }, [adaptiveCardsPackage, direction, content, styleOptions]);\n  return /*#__PURE__*/_react.default.createElement(_AdaptiveCardRenderer.default, {\n    actionPerformedClassName: actionPerformedClassName,\n    adaptiveCard: builtCard,\n    disabled: disabled,\n    tapAction: content && content.tap\n  });\n};\n\nThumbnailCardContent.defaultProps = {\n  actionPerformedClassName: '',\n  disabled: undefined\n};\nThumbnailCardContent.propTypes = {\n  actionPerformedClassName: _propTypes.default.string,\n  content: _propTypes.default.shape({\n    buttons: _propTypes.default.array,\n    images: _propTypes.default.arrayOf(_propTypes.default.shape({\n      alt: _propTypes.default.string.isRequired,\n      tap: _propTypes.default.any,\n      url: _propTypes.default.string.isRequired\n    })),\n    subtitle: _propTypes.default.string,\n    tap: _propTypes.default.any,\n    text: _propTypes.default.string,\n    title: _propTypes.default.string\n  }).isRequired,\n  disabled: _propTypes.default.bool\n};\nvar _default = ThumbnailCardContent;\nexports.default = _default;","map":{"version":3,"sources":["../../../src/adaptiveCards/Attachment/ThumbnailCardContent.js"],"names":["useDirection","useStyleOptions","hooks","ThumbnailCardContent","actionPerformedClassName","content","disabled","adaptiveCardsPackage","direction","styleOptions","builtCard","builder","AdaptiveCardBuilder","TextSize","TextWeight","buttons","images","subtitle","text","title","richCardWrapTitle","firstColumn","lastColumn","alt","tap","url","size","weight","wrap","isSubtle","undefined","PropTypes","isRequired","string","bool"],"mappings":"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","sourcesContent":["/* eslint no-magic-numbers: [\"error\", { \"ignore\": [25, 75] }] */\n\nimport { hooks } from 'botframework-webchat-component';\nimport PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\n\nimport AdaptiveCardBuilder from './AdaptiveCardBuilder';\nimport AdaptiveCardRenderer from './AdaptiveCardRenderer';\nimport useAdaptiveCardsPackage from '../hooks/useAdaptiveCardsPackage';\n\nconst { useDirection, useStyleOptions } = hooks;\n\nconst ThumbnailCardContent = ({ actionPerformedClassName, content, disabled }) => {\n  const [adaptiveCardsPackage] = useAdaptiveCardsPackage();\n  const [direction] = useDirection();\n  const [styleOptions] = useStyleOptions();\n  const builtCard = useMemo(() => {\n    if (content) {\n      const builder = new AdaptiveCardBuilder(adaptiveCardsPackage, styleOptions, direction);\n      const { TextSize, TextWeight } = adaptiveCardsPackage;\n      const { buttons, images, subtitle, text, title } = content;\n      const { richCardWrapTitle } = styleOptions;\n\n      if (images && images.length) {\n        const [firstColumn, lastColumn] = builder.addColumnSet([75, 25]);\n        const [{ alt, tap, url }] = images;\n\n        builder.addTextBlock(\n          title,\n          { size: TextSize.Medium, weight: TextWeight.Bolder, wrap: richCardWrapTitle },\n          firstColumn\n        );\n\n        builder.addTextBlock(subtitle, { isSubtle: true, wrap: richCardWrapTitle }, firstColumn);\n        builder.addImage(url, lastColumn, tap, alt);\n        builder.addTextBlock(text, { wrap: true });\n        builder.addButtons(buttons);\n      } else {\n        builder.addCommon(content);\n      }\n      return builder.card;\n    }\n  }, [adaptiveCardsPackage, direction, content, styleOptions]);\n\n  return (\n    <AdaptiveCardRenderer\n      actionPerformedClassName={actionPerformedClassName}\n      adaptiveCard={builtCard}\n      disabled={disabled}\n      tapAction={content && content.tap}\n    />\n  );\n};\n\nThumbnailCardContent.defaultProps = {\n  actionPerformedClassName: '',\n  disabled: undefined\n};\n\nThumbnailCardContent.propTypes = {\n  actionPerformedClassName: PropTypes.string,\n  content: PropTypes.shape({\n    buttons: PropTypes.array,\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        alt: PropTypes.string.isRequired,\n        tap: PropTypes.any,\n        url: PropTypes.string.isRequired\n      })\n    ),\n    subtitle: PropTypes.string,\n    tap: PropTypes.any,\n    text: PropTypes.string,\n    title: PropTypes.string\n  }).isRequired,\n  disabled: PropTypes.bool\n};\n\nexport default ThumbnailCardContent;\n"],"sourceRoot":"bundle:///"},"metadata":{},"sourceType":"script"}