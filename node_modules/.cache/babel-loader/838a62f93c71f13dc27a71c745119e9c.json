{"ast":null,"code":"'use strict';\n\nvar repeat = require('repeat-string');\n\nmodule.exports = thematic;\nvar space = ' '; // Stringify a `thematic-break`.\n// The character used is configurable through `rule`: (`'_'`):\n//\n// ```markdown\n// ___\n// ```\n//\n// The number of repititions is defined through `ruleRepetition` (`6`):\n//\n// ```markdown\n// ******\n// ```\n//\n// Whether spaces delimit each character, is configured through `ruleSpaces`\n// (`true`):\n// ```markdown\n// * * *\n// ```\n\nfunction thematic() {\n  var options = this.options;\n  var rule = repeat(options.rule, options.ruleRepetition);\n  return options.ruleSpaces ? rule.split('').join(space) : rule;\n}","map":{"version":3,"sources":["/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/remark-stringify/lib/visitors/thematic-break.js"],"names":["repeat","require","module","exports","thematic","space","options","rule","ruleRepetition","ruleSpaces","split","join"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,QAAjB;AAEA,IAAIC,KAAK,GAAG,GAAZ,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,QAAT,GAAoB;AAClB,MAAIE,OAAO,GAAG,KAAKA,OAAnB;AACA,MAAIC,IAAI,GAAGP,MAAM,CAACM,OAAO,CAACC,IAAT,EAAeD,OAAO,CAACE,cAAvB,CAAjB;AACA,SAAOF,OAAO,CAACG,UAAR,GAAqBF,IAAI,CAACG,KAAL,CAAW,EAAX,EAAeC,IAAf,CAAoBN,KAApB,CAArB,GAAkDE,IAAzD;AACD","sourcesContent":["'use strict'\n\nvar repeat = require('repeat-string')\n\nmodule.exports = thematic\n\nvar space = ' '\n\n// Stringify a `thematic-break`.\n// The character used is configurable through `rule`: (`'_'`):\n//\n// ```markdown\n// ___\n// ```\n//\n// The number of repititions is defined through `ruleRepetition` (`6`):\n//\n// ```markdown\n// ******\n// ```\n//\n// Whether spaces delimit each character, is configured through `ruleSpaces`\n// (`true`):\n// ```markdown\n// * * *\n// ```\nfunction thematic() {\n  var options = this.options\n  var rule = repeat(options.rule, options.ruleRepetition)\n  return options.ruleSpaces ? rule.split('').join(space) : rule\n}\n"]},"metadata":{},"sourceType":"script"}