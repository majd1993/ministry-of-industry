{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useSynthesize;\n\nvar _react = require(\"react\");\n\nvar _Context = _interopRequireDefault(require(\"./Context\"));\n\nvar _createNativeUtterance = _interopRequireDefault(require(\"./createNativeUtterance\"));\n\nfunction useSynthesize() {\n  var _useContext = (0, _react.useContext)(_Context[\"default\"]),\n      ponyfill = _useContext.ponyfill,\n      synthesize = _useContext.synthesize;\n\n  return function (utteranceOrText, progressFn) {\n    if (typeof utteranceOrText === 'string') {\n      utteranceOrText = (0, _createNativeUtterance[\"default\"])(ponyfill, {\n        text: utteranceOrText\n      });\n    }\n\n    return synthesize(ponyfill, utteranceOrText, {\n      onStart: progressFn && function () {\n        return progressFn();\n      }\n    });\n  };\n}","map":{"version":3,"sources":["../src/useSynthesize.js"],"names":["ponyfill","synthesize","Context","utteranceOrText","text","onStart","progressFn"],"mappings":";;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AACA,IAAA,sBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;AAEe,SAAA,aAAA,GAAyB;AAAA,MAAA,WAAA,GACL,CAAA,GAAA,MAAA,CAAA,UAAA,EAAWE,QAAAA,CADN,SACMA,CAAX,CADK;AAAA,MAC9BF,QAD8B,GAAA,WAAA,CAAA,QAAA;AAAA,MACpBC,UADoB,GAAA,WAAA,CAAA,UAAA;;AAGtC,SAAO,UAAA,eAAA,EAAA,UAAA,EAAiC;AACtC,QAAI,OAAA,eAAA,KAAJ,QAAA,EAAyC;AACvCE,MAAAA,eAAe,GAAG,CAAA,GAAA,sBAAA,CAAA,SAAA,CAAA,EAAA,QAAA,EAAgC;AAAEC,QAAAA,IAAI,EAAED;AAAR,OAAhC,CAAlBA;AACD;;AAED,WAAOF,UAAU,CAAA,QAAA,EAAA,eAAA,EAA4B;AAAEI,MAAAA,OAAO,EAAEC,UAAU,IAAK,YAAA;AAAA,eAAMA,UAAN,EAAA;AAAA;AAA1B,KAA5B,CAAjB;AALF,GAAA;AAOD","sourcesContent":["import { useContext } from 'react';\n\nimport Context from './Context';\nimport createNativeUtterance from './createNativeUtterance';\n\nexport default function useSynthesize() {\n  const { ponyfill, synthesize } = useContext(Context);\n\n  return (utteranceOrText, progressFn) => {\n    if (typeof utteranceOrText === 'string') {\n      utteranceOrText = createNativeUtterance(ponyfill, { text: utteranceOrText });\n    }\n\n    return synthesize(ponyfill, utteranceOrText, { onStart: progressFn && (() => progressFn()) });\n  };\n}\n"]},"metadata":{},"sourceType":"script"}