{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Defines result of speech synthesis.\n * @class SpeechSynthesisResult\n * Added in version 1.11.0\n */\n\nvar SpeechSynthesisResult =\n/** @class */\nfunction () {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {string} resultId - The result id.\n   * @param {ResultReason} reason - The reason.\n   * @param {number} audioData - The offset into the stream.\n   * @param {string} errorDetails - Error details, if provided.\n   * @param {PropertyCollection} properties - Additional properties, if provided.\n   */\n  function SpeechSynthesisResult(resultId, reason, audioData, errorDetails, properties) {\n    this.privResultId = resultId;\n    this.privReason = reason;\n    this.privAudioData = audioData;\n    this.privErrorDetails = errorDetails;\n    this.privProperties = properties;\n  }\n\n  Object.defineProperty(SpeechSynthesisResult.prototype, \"resultId\", {\n    /**\n     * Specifies the result identifier.\n     * @member SpeechSynthesisResult.prototype.resultId\n     * @function\n     * @public\n     * @returns {string} Specifies the result identifier.\n     */\n    get: function get() {\n      return this.privResultId;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SpeechSynthesisResult.prototype, \"reason\", {\n    /**\n     * Specifies status of the result.\n     * @member SpeechSynthesisResult.prototype.reason\n     * @function\n     * @public\n     * @returns {ResultReason} Specifies status of the result.\n     */\n    get: function get() {\n      return this.privReason;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SpeechSynthesisResult.prototype, \"audioData\", {\n    /**\n     * The synthesized audio data\n     * @member SpeechSynthesisResult.prototype.audioData\n     * @function\n     * @public\n     * @returns {ArrayBuffer} The synthesized audio data.\n     */\n    get: function get() {\n      return this.privAudioData;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SpeechSynthesisResult.prototype, \"errorDetails\", {\n    /**\n     * In case of an unsuccessful synthesis, provides details of the occurred error.\n     * @member SpeechSynthesisResult.prototype.errorDetails\n     * @function\n     * @public\n     * @returns {string} a brief description of an error.\n     */\n    get: function get() {\n      return this.privErrorDetails;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SpeechSynthesisResult.prototype, \"properties\", {\n    /**\n     *  The set of properties exposed in the result.\n     * @member SpeechSynthesisResult.prototype.properties\n     * @function\n     * @public\n     * @returns {PropertyCollection} The set of properties exposed in the result.\n     */\n    get: function get() {\n      return this.privProperties;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return SpeechSynthesisResult;\n}();\n\nexports.SpeechSynthesisResult = SpeechSynthesisResult;","map":{"version":3,"sources":["src/sdk/SpeechSynthesisResult.ts"],"names":[],"mappings":"cAAA;AACA;;;;;AAIA;;;;AAIG;;AACH,IAAA,qBAAA;AAAA;AAAA,YAAA;AASI;;;;;;;;AAQG;AACH,WAAA,qBAAA,CAAY,QAAZ,EAA+B,MAA/B,EAAuD,SAAvD,EACY,YADZ,EACmC,UADnC,EACkE;AAC9D,SAAK,YAAL,GAAoB,QAApB;AACA,SAAK,UAAL,GAAkB,MAAlB;AACA,SAAK,aAAL,GAAqB,SAArB;AACA,SAAK,gBAAL,GAAwB,YAAxB;AACA,SAAK,cAAL,GAAsB,UAAtB;AACH;;AASD,EAAA,MAAA,CAAA,cAAA,CAAW,qBAAA,CAAA,SAAX,EAAW,UAAX,EAAmB;AAPnB;;;;;;AAMG;SACH,eAAA;AACI,aAAO,KAAK,YAAZ;AACH,KAFkB;oBAAA;;AAAA,GAAnB;AAWA,EAAA,MAAA,CAAA,cAAA,CAAW,qBAAA,CAAA,SAAX,EAAW,QAAX,EAAiB;AAPjB;;;;;;AAMG;SACH,eAAA;AACI,aAAO,KAAK,UAAZ;AACH,KAFgB;oBAAA;;AAAA,GAAjB;AAWA,EAAA,MAAA,CAAA,cAAA,CAAW,qBAAA,CAAA,SAAX,EAAW,WAAX,EAAoB;AAPpB;;;;;;AAMG;SACH,eAAA;AACI,aAAO,KAAK,aAAZ;AACH,KAFmB;oBAAA;;AAAA,GAApB;AAWA,EAAA,MAAA,CAAA,cAAA,CAAW,qBAAA,CAAA,SAAX,EAAW,cAAX,EAAuB;AAPvB;;;;;;AAMG;SACH,eAAA;AACI,aAAO,KAAK,gBAAZ;AACH,KAFsB;oBAAA;;AAAA,GAAvB;AAWA,EAAA,MAAA,CAAA,cAAA,CAAW,qBAAA,CAAA,SAAX,EAAW,YAAX,EAAqB;AAPrB;;;;;;AAMG;SACH,eAAA;AACI,aAAO,KAAK,cAAZ;AACH,KAFoB;oBAAA;;AAAA,GAArB;AAGJ,SAAA,qBAAA;AAAC,CAjFD,EAAA;;AAAa,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason } from \"./Exports\";\r\n\r\n/**\r\n * Defines result of speech synthesis.\r\n * @class SpeechSynthesisResult\r\n * Added in version 1.11.0\r\n */\r\nexport class SpeechSynthesisResult {\r\n    private privResultId: string;\r\n    private privReason: ResultReason;\r\n    private privText: string;\r\n    private privAudioData: ArrayBuffer;\r\n    private privOffset: number;\r\n    private privErrorDetails: string;\r\n    private privProperties: PropertyCollection;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {number} audioData - The offset into the stream.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    constructor(resultId?: string, reason?: ResultReason,  audioData?: ArrayBuffer,\r\n                errorDetails?: string, properties?: PropertyCollection) {\r\n        this.privResultId = resultId;\r\n        this.privReason = reason;\r\n        this.privAudioData = audioData;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privProperties = properties;\r\n    }\r\n\r\n    /**\r\n     * Specifies the result identifier.\r\n     * @member SpeechSynthesisResult.prototype.resultId\r\n     * @function\r\n     * @public\r\n     * @returns {string} Specifies the result identifier.\r\n     */\r\n    public get resultId(): string {\r\n        return this.privResultId;\r\n    }\r\n\r\n    /**\r\n     * Specifies status of the result.\r\n     * @member SpeechSynthesisResult.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {ResultReason} Specifies status of the result.\r\n     */\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * The synthesized audio data\r\n     * @member SpeechSynthesisResult.prototype.audioData\r\n     * @function\r\n     * @public\r\n     * @returns {ArrayBuffer} The synthesized audio data.\r\n     */\r\n    public get audioData(): ArrayBuffer {\r\n        return this.privAudioData;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful synthesis, provides details of the occurred error.\r\n     * @member SpeechSynthesisResult.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} a brief description of an error.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    /**\r\n     *  The set of properties exposed in the result.\r\n     * @member SpeechSynthesisResult.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The set of properties exposed in the result.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}