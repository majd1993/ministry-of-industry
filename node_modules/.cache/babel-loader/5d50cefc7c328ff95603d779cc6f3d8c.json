{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = downscaleImageToDataURLUsingWorker;\nexports.checkSupport = checkSupport;\n\nvar _blobToArrayBuffer = _interopRequireDefault(require(\"./blobToArrayBuffer\"));\n\nvar _downscaleImageToDataURLUsingWorker = _interopRequireDefault(require(\"./downscaleImageToDataURLUsingWorker.worker\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction createWorker(fn) {\n  var blob = new Blob([\"(\".concat(fn, \")()\")], {\n    type: 'text/javascript'\n  });\n  var url = window.URL.createObjectURL(blob);\n  return new Promise(function (resolve, reject) {\n    var worker = new Worker(url);\n\n    worker.onerror = function (_ref) {\n      var error = _ref.error,\n          message = _ref.message;\n      return reject(error || new Error(message));\n    };\n\n    worker.onmessage = function (_ref2) {\n      var data = _ref2.data;\n      return data === 'ready' && resolve(worker);\n    };\n  }).finally(function () {\n    window.URL.revokeObjectURL(url);\n  });\n}\n\nvar workerPromise;\n\nfunction getWorker() {\n  return _getWorker.apply(this, arguments);\n} // We are using a lazy-check because:\n// 1. OffscreenCanvas.getContext has a toll\n// 2. Developers could bring polyfills\n\n\nfunction _getWorker() {\n  _getWorker = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var worker;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!workerPromise) {\n              _context3.next = 6;\n              break;\n            }\n\n            _context3.next = 3;\n            return workerPromise;\n\n          case 3:\n            worker = _context3.sent;\n            _context3.next = 11;\n            break;\n\n          case 6:\n            workerPromise = createWorker(_downscaleImageToDataURLUsingWorker.default);\n            _context3.next = 9;\n            return workerPromise;\n\n          case 9:\n            worker = _context3.sent;\n            worker.addEventListener('error', function () {\n              // Current worker errored out, will create a new worker next time.\n              workerPromise = null;\n              worker.terminate();\n            });\n\n          case 11:\n            return _context3.abrupt(\"return\", worker);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getWorker.apply(this, arguments);\n}\n\nvar checkSupportOffscreenCanvas = function checkSupportOffscreenCanvas() {\n  var hasOffscreenCanvas = typeof window.OffscreenCanvas !== 'undefined' && (typeof window.OffscreenCanvas.prototype.convertToBlob !== 'undefined' || typeof window.OffscreenCanvas.prototype.toBlob !== 'undefined');\n  var isOffscreenCanvasSupportGetContext2D;\n\n  if (hasOffscreenCanvas) {\n    try {\n      new OffscreenCanvas(1, 1).getContext('2d');\n      isOffscreenCanvasSupportGetContext2D = true;\n    } catch (err) {\n      isOffscreenCanvasSupportGetContext2D = false;\n    }\n  }\n\n  return typeof window.createImageBitmap !== 'undefined' && hasOffscreenCanvas && isOffscreenCanvasSupportGetContext2D;\n};\n\nvar checkSupportWebWorkerPromise;\n\nfunction checkSupportWebWorker() {\n  return checkSupportWebWorkerPromise || (checkSupportWebWorkerPromise = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var worker;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof window.MessageChannel === 'undefined' || typeof window.Worker === 'undefined')) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 2:\n            _context.prev = 2;\n            _context.next = 5;\n            return createWorker('function(){postMessage(\"ready\")}');\n\n          case 5:\n            worker = _context.sent;\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", false);\n\n          case 11:\n            worker.terminate();\n            return _context.abrupt(\"return\", true);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 8]]);\n  }))());\n}\n\nvar checkSupportPromise;\n\nfunction checkSupport() {\n  return checkSupportPromise || (checkSupportPromise = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var results;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return Promise.all([checkSupportOffscreenCanvas(), checkSupportWebWorker()]);\n\n          case 3:\n            results = _context2.sent;\n            return _context2.abrupt(\"return\", results.every(function (result) {\n              return result;\n            }));\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", false);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  }))());\n}\n\nfunction downscaleImageToDataURLUsingWorker(blob, maxWidth, maxHeight, type, quality) {\n  return new Promise(function (resolve, reject) {\n    var _MessageChannel = new MessageChannel(),\n        port1 = _MessageChannel.port1,\n        port2 = _MessageChannel.port2;\n\n    port1.onmessage = function (_ref5) {\n      var _ref5$data = _ref5.data,\n          error = _ref5$data.error,\n          result = _ref5$data.result;\n\n      if (error) {\n        var err = new Error(error.message);\n        err.stack = error.stack;\n        reject(err);\n      } else {\n        resolve(result);\n      }\n\n      port1.close();\n      port2.close();\n    };\n\n    Promise.all([(0, _blobToArrayBuffer.default)(blob), getWorker()]).then(function (_ref6) {\n      var _ref7 = _slicedToArray(_ref6, 2),\n          arrayBuffer = _ref7[0],\n          worker = _ref7[1];\n\n      return worker.postMessage({\n        arrayBuffer: arrayBuffer,\n        maxHeight: maxHeight,\n        maxWidth: maxWidth,\n        quality: quality,\n        type: type\n      }, [arrayBuffer, port2]);\n    });\n  });\n}","map":{"version":3,"sources":["../../../src/Utils/downscaleImageToDataURL/downscaleImageToDataURLUsingWorker.js"],"names":["blob","type","url","window","worker","error","message","reject","data","resolve","getWorker","workerPromise","createWorker","workerFunction","checkSupportOffscreenCanvas","hasOffscreenCanvas","isOffscreenCanvasSupportGetContext2D","checkSupportWebWorkerPromise","checkSupportPromise","results","Promise","checkSupportWebWorker","port1","port2","result","err","arrayBuffer","maxHeight","maxWidth","quality"],"mappings":"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","sourcesContent":["import blobToArrayBuffer from './blobToArrayBuffer';\nimport workerFunction from './downscaleImageToDataURLUsingWorker.worker';\n\nfunction createWorker(fn) {\n  const blob = new Blob([`(${fn})()`], { type: 'text/javascript' });\n  const url = window.URL.createObjectURL(blob);\n\n  return new Promise((resolve, reject) => {\n    const worker = new Worker(url);\n\n    worker.onerror = ({ error, message }) => reject(error || new Error(message));\n    worker.onmessage = ({ data }) => data === 'ready' && resolve(worker);\n  }).finally(() => {\n    window.URL.revokeObjectURL(url);\n  });\n}\n\nlet workerPromise;\n\nasync function getWorker() {\n  let worker;\n\n  if (workerPromise) {\n    worker = await workerPromise;\n  } else {\n    workerPromise = createWorker(workerFunction);\n\n    worker = await workerPromise;\n    worker.addEventListener('error', () => {\n      // Current worker errored out, will create a new worker next time.\n      workerPromise = null;\n      worker.terminate();\n    });\n  }\n\n  return worker;\n}\n\n// We are using a lazy-check because:\n// 1. OffscreenCanvas.getContext has a toll\n// 2. Developers could bring polyfills\n\nconst checkSupportOffscreenCanvas = () => {\n  const hasOffscreenCanvas =\n    typeof window.OffscreenCanvas !== 'undefined' &&\n    (typeof window.OffscreenCanvas.prototype.convertToBlob !== 'undefined' ||\n      typeof window.OffscreenCanvas.prototype.toBlob !== 'undefined');\n  let isOffscreenCanvasSupportGetContext2D;\n\n  if (hasOffscreenCanvas) {\n    try {\n      new OffscreenCanvas(1, 1).getContext('2d');\n      isOffscreenCanvasSupportGetContext2D = true;\n    } catch (err) {\n      isOffscreenCanvasSupportGetContext2D = false;\n    }\n  }\n\n  return typeof window.createImageBitmap !== 'undefined' && hasOffscreenCanvas && isOffscreenCanvasSupportGetContext2D;\n};\n\nlet checkSupportWebWorkerPromise;\n\nfunction checkSupportWebWorker() {\n  return (\n    checkSupportWebWorkerPromise ||\n    (checkSupportWebWorkerPromise = (async () => {\n      if (typeof window.MessageChannel === 'undefined' || typeof window.Worker === 'undefined') {\n        return false;\n      }\n\n      let worker;\n\n      try {\n        worker = await createWorker('function(){postMessage(\"ready\")}');\n      } catch (err) {\n        return false;\n      }\n\n      worker.terminate();\n\n      return true;\n    })())\n  );\n}\n\nlet checkSupportPromise;\n\nfunction checkSupport() {\n  return (\n    checkSupportPromise ||\n    (checkSupportPromise = (async () => {\n      try {\n        const results = await Promise.all([checkSupportOffscreenCanvas(), checkSupportWebWorker()]);\n\n        return results.every(result => result);\n      } catch (err) {\n        return false;\n      }\n    })())\n  );\n}\n\nexport default function downscaleImageToDataURLUsingWorker(blob, maxWidth, maxHeight, type, quality) {\n  return new Promise((resolve, reject) => {\n    const { port1, port2 } = new MessageChannel();\n\n    port1.onmessage = ({ data: { error, result } }) => {\n      if (error) {\n        const err = new Error(error.message);\n\n        err.stack = error.stack;\n\n        reject(err);\n      } else {\n        resolve(result);\n      }\n\n      port1.close();\n      port2.close();\n    };\n\n    Promise.all([blobToArrayBuffer(blob), getWorker()]).then(([arrayBuffer, worker]) =>\n      worker.postMessage({ arrayBuffer, maxHeight, maxWidth, quality, type }, [arrayBuffer, port2])\n    );\n  });\n}\n\nexport { checkSupport };\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}