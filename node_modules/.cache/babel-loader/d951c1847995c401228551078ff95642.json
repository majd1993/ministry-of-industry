{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _botframeworkWebchatComponent = require(\"botframework-webchat-component\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _AdaptiveCardBuilder = _interopRequireDefault(require(\"./AdaptiveCardBuilder\"));\n\nvar _AdaptiveCardRenderer = _interopRequireDefault(require(\"./AdaptiveCardRenderer\"));\n\nvar _useAdaptiveCardsPackage = _interopRequireDefault(require(\"../hooks/useAdaptiveCardsPackage\"));\n/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 10, 15, 25, 50, 75] }] */\n\n\nvar useDirection = _botframeworkWebchatComponent.hooks.useDirection,\n    useLocalizer = _botframeworkWebchatComponent.hooks.useLocalizer,\n    useStyleOptions = _botframeworkWebchatComponent.hooks.useStyleOptions;\n\nfunction nullOrUndefined(obj) {\n  return obj === null || typeof obj === 'undefined';\n}\n\nvar ReceiptCardContent = function ReceiptCardContent(_ref) {\n  var actionPerformedClassName = _ref.actionPerformedClassName,\n      content = _ref.content,\n      disabled = _ref.disabled;\n\n  var _useAdaptiveCardsPack = (0, _useAdaptiveCardsPackage.default)(),\n      _useAdaptiveCardsPack2 = (0, _slicedToArray2.default)(_useAdaptiveCardsPack, 1),\n      adaptiveCardsPackage = _useAdaptiveCardsPack2[0];\n\n  var _useDirection = useDirection(),\n      _useDirection2 = (0, _slicedToArray2.default)(_useDirection, 1),\n      direction = _useDirection2[0];\n\n  var _useStyleOptions = useStyleOptions(),\n      _useStyleOptions2 = (0, _slicedToArray2.default)(_useStyleOptions, 1),\n      styleOptions = _useStyleOptions2[0];\n\n  var localize = useLocalizer();\n  var taxText = localize('RECEIPT_CARD_TAX');\n  var totalText = localize('RECEIPT_CARD_TOTAL');\n  var vatText = localize('RECEIPT_CARD_VAT');\n  var builtCard = (0, _react.useMemo)(function () {\n    var builder = new _AdaptiveCardBuilder.default(adaptiveCardsPackage, styleOptions, direction);\n    var HorizontalAlignment = adaptiveCardsPackage.HorizontalAlignment,\n        TextSize = adaptiveCardsPackage.TextSize,\n        TextWeight = adaptiveCardsPackage.TextWeight;\n    var buttons = content.buttons,\n        facts = content.facts,\n        items = content.items,\n        tax = content.tax,\n        title = content.title,\n        total = content.total,\n        vat = content.vat;\n    var richCardWrapTitle = styleOptions.richCardWrapTitle;\n\n    if (content) {\n      builder.addTextBlock(title, {\n        size: TextSize.Medium,\n        weight: TextWeight.Bolder,\n        wrap: richCardWrapTitle\n      });\n\n      if (facts) {\n        var _builder$addColumnSet = builder.addColumnSet([75, 25]),\n            _builder$addColumnSet2 = (0, _slicedToArray2.default)(_builder$addColumnSet, 2),\n            firstFactColumn = _builder$addColumnSet2[0],\n            lastFactColumn = _builder$addColumnSet2[1];\n\n        facts.map(function (_ref2) {\n          var key = _ref2.key,\n              value = _ref2.value;\n          builder.addTextBlock(key, {\n            size: TextSize.Medium\n          }, firstFactColumn);\n          builder.addTextBlock(value, {\n            size: TextSize.Medium,\n            horizontalAlignment: HorizontalAlignment.Right\n          }, lastFactColumn);\n        });\n      }\n\n      items && items.map(function (_ref3) {\n        var _ref3$image = _ref3.image;\n        _ref3$image = _ref3$image === void 0 ? {} : _ref3$image;\n        var alt = _ref3$image.alt,\n            imageTap = _ref3$image.tap,\n            url = _ref3$image.url,\n            price = _ref3.price,\n            quantity = _ref3.quantity,\n            subtitle = _ref3.subtitle,\n            tap = _ref3.tap,\n            text = _ref3.text,\n            title = _ref3.title;\n        var itemColumns;\n\n        if (url) {\n          var _builder$addColumnSet3 = builder.addColumnSet([15, 75, 10]),\n              _builder$addColumnSet4 = (0, _toArray2.default)(_builder$addColumnSet3),\n              itemImageColumn = _builder$addColumnSet4[0],\n              columns = _builder$addColumnSet4.slice(1);\n\n          itemColumns = columns;\n          builder.addImage(url, itemImageColumn, imageTap, alt);\n        } else {\n          itemColumns = builder.addColumnSet([75, 25], undefined, tap && tap);\n        }\n\n        var _itemColumns = itemColumns,\n            _itemColumns2 = (0, _slicedToArray2.default)(_itemColumns, 2),\n            itemTitleColumn = _itemColumns2[0],\n            itemPriceColumn = _itemColumns2[1];\n\n        builder.addTextBlock(quantity ? \"\".concat(title, \" &times; \").concat(quantity) : title, {\n          size: TextSize.Medium,\n          weight: TextWeight.Bolder,\n          wrap: richCardWrapTitle\n        }, itemTitleColumn);\n        builder.addTextBlock(subtitle, {\n          size: TextSize.Medium,\n          wrap: richCardWrapTitle\n        }, itemTitleColumn);\n        builder.addTextBlock(price, {\n          horizontalAlignment: HorizontalAlignment.Right\n        }, itemPriceColumn);\n\n        if (text) {\n          builder.addTextBlock(text, {\n            size: TextSize.Medium,\n            wrap: richCardWrapTitle\n          }, itemTitleColumn);\n        }\n      });\n\n      if (!nullOrUndefined(vat)) {\n        var vatCol = builder.addColumnSet([75, 25]);\n        builder.addTextBlock(vatText, {\n          size: TextSize.Medium,\n          weight: TextWeight.Bolder\n        }, vatCol[0]);\n        builder.addTextBlock(vat, {\n          horizontalAlignment: HorizontalAlignment.Right\n        }, vatCol[1]);\n      }\n\n      if (!nullOrUndefined(tax)) {\n        var taxCol = builder.addColumnSet([75, 25]);\n        builder.addTextBlock(taxText, {\n          size: TextSize.Medium,\n          weight: TextWeight.Bolder\n        }, taxCol[0]);\n        builder.addTextBlock(tax, {\n          horizontalAlignment: HorizontalAlignment.Right\n        }, taxCol[1]);\n      }\n\n      if (!nullOrUndefined(total)) {\n        var totalCol = builder.addColumnSet([75, 25]);\n        builder.addTextBlock(totalText, {\n          size: TextSize.Medium,\n          weight: TextWeight.Bolder\n        }, totalCol[0]);\n        builder.addTextBlock(total, {\n          horizontalAlignment: HorizontalAlignment.Right,\n          size: TextSize.Medium,\n          weight: TextWeight.Bolder\n        }, totalCol[1]);\n      }\n\n      builder.addButtons(buttons);\n      return builder.card;\n    }\n  }, [adaptiveCardsPackage, content, direction, styleOptions, taxText, totalText, vatText]);\n  return /*#__PURE__*/_react.default.createElement(_AdaptiveCardRenderer.default, {\n    actionPerformedClassName: actionPerformedClassName,\n    adaptiveCard: builtCard,\n    disabled: disabled,\n    tapAction: content && content.tap\n  });\n};\n\nReceiptCardContent.defaultProps = {\n  actionPerformedClassName: '',\n  disabled: undefined\n};\nReceiptCardContent.propTypes = {\n  actionPerformedClassName: _propTypes.default.string,\n  content: _propTypes.default.shape({\n    buttons: _propTypes.default.array,\n    facts: _propTypes.default.arrayOf(_propTypes.default.shape({\n      key: _propTypes.default.string,\n      value: _propTypes.default.string\n    })),\n    items: _propTypes.default.arrayOf(_propTypes.default.shape({\n      image: _propTypes.default.shape({\n        alt: _propTypes.default.string.isRequired,\n        tap: _propTypes.default.any,\n        url: _propTypes.default.string.isRequired\n      }),\n      price: _propTypes.default.string.isRequired,\n      quantity: _propTypes.default.string,\n      subtitle: _propTypes.default.string,\n      tap: _propTypes.default.any,\n      text: _propTypes.default.string,\n      title: _propTypes.default.string.isRequired\n    })),\n    tap: _propTypes.default.any,\n    tax: _propTypes.default.string,\n    title: _propTypes.default.string,\n    total: _propTypes.default.string,\n    vat: _propTypes.default.string\n  }).isRequired,\n  disabled: _propTypes.default.bool\n};\nvar _default = ReceiptCardContent;\nexports.default = _default;","map":{"version":3,"sources":["../../../src/adaptiveCards/Attachment/ReceiptCardContent.js"],"names":["useDirection","useLocalizer","useStyleOptions","hooks","obj","ReceiptCardContent","actionPerformedClassName","content","disabled","adaptiveCardsPackage","direction","styleOptions","localize","taxText","totalText","vatText","builtCard","builder","AdaptiveCardBuilder","HorizontalAlignment","TextSize","TextWeight","buttons","facts","items","tax","title","total","vat","richCardWrapTitle","size","weight","wrap","firstFactColumn","lastFactColumn","key","value","Medium","horizontalAlignment","Right","image","alt","tap","imageTap","url","price","quantity","subtitle","text","itemImageColumn","columns","itemColumns","itemTitleColumn","itemPriceColumn","nullOrUndefined","vatCol","Bolder","taxCol","totalCol","undefined","PropTypes","string","isRequired","bool"],"mappings":"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","sourcesContent":["/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 10, 15, 25, 50, 75] }] */\n\nimport { hooks } from 'botframework-webchat-component';\nimport PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\n\nimport AdaptiveCardBuilder from './AdaptiveCardBuilder';\nimport AdaptiveCardRenderer from './AdaptiveCardRenderer';\nimport useAdaptiveCardsPackage from '../hooks/useAdaptiveCardsPackage';\n\nconst { useDirection, useLocalizer, useStyleOptions } = hooks;\n\nfunction nullOrUndefined(obj) {\n  return obj === null || typeof obj === 'undefined';\n}\n\nconst ReceiptCardContent = ({ actionPerformedClassName, content, disabled }) => {\n  const [adaptiveCardsPackage] = useAdaptiveCardsPackage();\n  const [direction] = useDirection();\n  const [styleOptions] = useStyleOptions();\n  const localize = useLocalizer();\n\n  const taxText = localize('RECEIPT_CARD_TAX');\n  const totalText = localize('RECEIPT_CARD_TOTAL');\n  const vatText = localize('RECEIPT_CARD_VAT');\n\n  const builtCard = useMemo(() => {\n    const builder = new AdaptiveCardBuilder(adaptiveCardsPackage, styleOptions, direction);\n    const { HorizontalAlignment, TextSize, TextWeight } = adaptiveCardsPackage;\n    const { buttons, facts, items, tax, title, total, vat } = content;\n    const { richCardWrapTitle } = styleOptions;\n\n    if (content) {\n      builder.addTextBlock(title, { size: TextSize.Medium, weight: TextWeight.Bolder, wrap: richCardWrapTitle });\n\n      if (facts) {\n        const [firstFactColumn, lastFactColumn] = builder.addColumnSet([75, 25]);\n\n        facts.map(({ key, value }) => {\n          builder.addTextBlock(key, { size: TextSize.Medium }, firstFactColumn);\n          builder.addTextBlock(\n            value,\n            { size: TextSize.Medium, horizontalAlignment: HorizontalAlignment.Right },\n            lastFactColumn\n          );\n        });\n      }\n\n      items &&\n        items.map(({ image: { alt, tap: imageTap, url } = {}, price, quantity, subtitle, tap, text, title }) => {\n          let itemColumns;\n\n          if (url) {\n            const [itemImageColumn, ...columns] = builder.addColumnSet([15, 75, 10]);\n\n            itemColumns = columns;\n            builder.addImage(url, itemImageColumn, imageTap, alt);\n          } else {\n            itemColumns = builder.addColumnSet([75, 25], undefined, tap && tap);\n          }\n\n          const [itemTitleColumn, itemPriceColumn] = itemColumns;\n\n          builder.addTextBlock(\n            quantity ? `${title} &times; ${quantity}` : title,\n            { size: TextSize.Medium, weight: TextWeight.Bolder, wrap: richCardWrapTitle },\n            itemTitleColumn\n          );\n          builder.addTextBlock(subtitle, { size: TextSize.Medium, wrap: richCardWrapTitle }, itemTitleColumn);\n          builder.addTextBlock(price, { horizontalAlignment: HorizontalAlignment.Right }, itemPriceColumn);\n\n          if (text) {\n            builder.addTextBlock(text, { size: TextSize.Medium, wrap: richCardWrapTitle }, itemTitleColumn);\n          }\n        });\n\n      if (!nullOrUndefined(vat)) {\n        const vatCol = builder.addColumnSet([75, 25]);\n\n        builder.addTextBlock(vatText, { size: TextSize.Medium, weight: TextWeight.Bolder }, vatCol[0]);\n        builder.addTextBlock(vat, { horizontalAlignment: HorizontalAlignment.Right }, vatCol[1]);\n      }\n\n      if (!nullOrUndefined(tax)) {\n        const taxCol = builder.addColumnSet([75, 25]);\n\n        builder.addTextBlock(taxText, { size: TextSize.Medium, weight: TextWeight.Bolder }, taxCol[0]);\n        builder.addTextBlock(tax, { horizontalAlignment: HorizontalAlignment.Right }, taxCol[1]);\n      }\n\n      if (!nullOrUndefined(total)) {\n        const totalCol = builder.addColumnSet([75, 25]);\n\n        builder.addTextBlock(totalText, { size: TextSize.Medium, weight: TextWeight.Bolder }, totalCol[0]);\n        builder.addTextBlock(\n          total,\n          { horizontalAlignment: HorizontalAlignment.Right, size: TextSize.Medium, weight: TextWeight.Bolder },\n          totalCol[1]\n        );\n      }\n\n      builder.addButtons(buttons);\n\n      return builder.card;\n    }\n  }, [adaptiveCardsPackage, content, direction, styleOptions, taxText, totalText, vatText]);\n\n  return (\n    <AdaptiveCardRenderer\n      actionPerformedClassName={actionPerformedClassName}\n      adaptiveCard={builtCard}\n      disabled={disabled}\n      tapAction={content && content.tap}\n    />\n  );\n};\n\nReceiptCardContent.defaultProps = {\n  actionPerformedClassName: '',\n  disabled: undefined\n};\n\nReceiptCardContent.propTypes = {\n  actionPerformedClassName: PropTypes.string,\n  content: PropTypes.shape({\n    buttons: PropTypes.array,\n    facts: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string,\n        value: PropTypes.string\n      })\n    ),\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        image: PropTypes.shape({\n          alt: PropTypes.string.isRequired,\n          tap: PropTypes.any,\n          url: PropTypes.string.isRequired\n        }),\n        price: PropTypes.string.isRequired,\n        quantity: PropTypes.string,\n        subtitle: PropTypes.string,\n        tap: PropTypes.any,\n        text: PropTypes.string,\n        title: PropTypes.string.isRequired\n      })\n    ),\n    tap: PropTypes.any,\n    tax: PropTypes.string,\n    title: PropTypes.string,\n    total: PropTypes.string,\n    vat: PropTypes.string\n  }).isRequired,\n  disabled: PropTypes.bool\n};\n\nexport default ReceiptCardContent;\n"],"sourceRoot":"bundle:///"},"metadata":{},"sourceType":"script"}