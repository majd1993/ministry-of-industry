{"ast":null,"code":"'use strict';\n\nvar repeat = require('repeat-string');\n\nvar pad = require('../util/pad');\n\nmodule.exports = listItem;\nvar lineFeed = '\\n';\nvar space = ' ';\nvar leftSquareBracket = '[';\nvar rightSquareBracket = ']';\nvar lowercaseX = 'x';\nvar ceil = Math.ceil;\nvar blank = lineFeed + lineFeed;\nvar tabSize = 4; // Stringify a list item.\n//\n// Prefixes the content with a checked checkbox when `checked: true`:\n//\n// ```markdown\n// [x] foo\n// ```\n//\n// Prefixes the content with an unchecked checkbox when `checked: false`:\n//\n// ```markdown\n// [ ] foo\n// ```\n\nfunction listItem(node, parent, position, bullet) {\n  var self = this;\n  var style = self.options.listItemIndent;\n  var marker = bullet || self.options.bullet;\n  var spread = node.spread == null ? true : node.spread;\n  var checked = node.checked;\n  var children = node.children;\n  var length = children.length;\n  var values = [];\n  var index = -1;\n  var value;\n  var indent;\n  var spacing;\n\n  while (++index < length) {\n    values[index] = self.visit(children[index], node);\n  }\n\n  value = values.join(spread ? blank : lineFeed);\n\n  if (typeof checked === 'boolean') {\n    // Note: I’d like to be able to only add the space between the check and\n    // the value, but unfortunately github does not support empty list-items\n    // with a checkbox :(\n    value = leftSquareBracket + (checked ? lowercaseX : space) + rightSquareBracket + space + value;\n  }\n\n  if (style === '1' || style === 'mixed' && value.indexOf(lineFeed) === -1) {\n    indent = marker.length + 1;\n    spacing = space;\n  } else {\n    indent = ceil((marker.length + 1) / tabSize) * tabSize;\n    spacing = repeat(space, indent - marker.length);\n  }\n\n  return value ? marker + spacing + pad(value, indent / tabSize).slice(indent) : marker;\n}","map":{"version":3,"sources":["/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/remark-stringify/lib/visitors/list-item.js"],"names":["repeat","require","pad","module","exports","listItem","lineFeed","space","leftSquareBracket","rightSquareBracket","lowercaseX","ceil","Math","blank","tabSize","node","parent","position","bullet","self","style","options","listItemIndent","marker","spread","checked","children","length","values","index","value","indent","spacing","visit","join","indexOf","slice"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAApB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,aAAD,CAAjB;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,QAAjB;AAEA,IAAIC,QAAQ,GAAG,IAAf;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,iBAAiB,GAAG,GAAxB;AACA,IAAIC,kBAAkB,GAAG,GAAzB;AACA,IAAIC,UAAU,GAAG,GAAjB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACD,IAAhB;AACA,IAAIE,KAAK,GAAGP,QAAQ,GAAGA,QAAvB;AAEA,IAAIQ,OAAO,GAAG,CAAd,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAST,QAAT,CAAkBU,IAAlB,EAAwBC,MAAxB,EAAgCC,QAAhC,EAA0CC,MAA1C,EAAkD;AAChD,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,KAAK,GAAGD,IAAI,CAACE,OAAL,CAAaC,cAAzB;AACA,MAAIC,MAAM,GAAGL,MAAM,IAAIC,IAAI,CAACE,OAAL,CAAaH,MAApC;AACA,MAAIM,MAAM,GAAGT,IAAI,CAACS,MAAL,IAAe,IAAf,GAAsB,IAAtB,GAA6BT,IAAI,CAACS,MAA/C;AACA,MAAIC,OAAO,GAAGV,IAAI,CAACU,OAAnB;AACA,MAAIC,QAAQ,GAAGX,IAAI,CAACW,QAApB;AACA,MAAIC,MAAM,GAAGD,QAAQ,CAACC,MAAtB;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,KAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,OAAJ;;AAEA,SAAO,EAAEH,KAAF,GAAUF,MAAjB,EAAyB;AACvBC,IAAAA,MAAM,CAACC,KAAD,CAAN,GAAgBV,IAAI,CAACc,KAAL,CAAWP,QAAQ,CAACG,KAAD,CAAnB,EAA4Bd,IAA5B,CAAhB;AACD;;AAEDe,EAAAA,KAAK,GAAGF,MAAM,CAACM,IAAP,CAAYV,MAAM,GAAGX,KAAH,GAAWP,QAA7B,CAAR;;AAEA,MAAI,OAAOmB,OAAP,KAAmB,SAAvB,EAAkC;AAChC;AACA;AACA;AACAK,IAAAA,KAAK,GACHtB,iBAAiB,IAChBiB,OAAO,GAAGf,UAAH,GAAgBH,KADP,CAAjB,GAEAE,kBAFA,GAGAF,KAHA,GAIAuB,KALF;AAMD;;AAED,MAAIV,KAAK,KAAK,GAAV,IAAkBA,KAAK,KAAK,OAAV,IAAqBU,KAAK,CAACK,OAAN,CAAc7B,QAAd,MAA4B,CAAC,CAAxE,EAA4E;AAC1EyB,IAAAA,MAAM,GAAGR,MAAM,CAACI,MAAP,GAAgB,CAAzB;AACAK,IAAAA,OAAO,GAAGzB,KAAV;AACD,GAHD,MAGO;AACLwB,IAAAA,MAAM,GAAGpB,IAAI,CAAC,CAACY,MAAM,CAACI,MAAP,GAAgB,CAAjB,IAAsBb,OAAvB,CAAJ,GAAsCA,OAA/C;AACAkB,IAAAA,OAAO,GAAGhC,MAAM,CAACO,KAAD,EAAQwB,MAAM,GAAGR,MAAM,CAACI,MAAxB,CAAhB;AACD;;AAED,SAAOG,KAAK,GACRP,MAAM,GAAGS,OAAT,GAAmB9B,GAAG,CAAC4B,KAAD,EAAQC,MAAM,GAAGjB,OAAjB,CAAH,CAA6BsB,KAA7B,CAAmCL,MAAnC,CADX,GAERR,MAFJ;AAGD","sourcesContent":["'use strict'\n\nvar repeat = require('repeat-string')\nvar pad = require('../util/pad')\n\nmodule.exports = listItem\n\nvar lineFeed = '\\n'\nvar space = ' '\nvar leftSquareBracket = '['\nvar rightSquareBracket = ']'\nvar lowercaseX = 'x'\n\nvar ceil = Math.ceil\nvar blank = lineFeed + lineFeed\n\nvar tabSize = 4\n\n// Stringify a list item.\n//\n// Prefixes the content with a checked checkbox when `checked: true`:\n//\n// ```markdown\n// [x] foo\n// ```\n//\n// Prefixes the content with an unchecked checkbox when `checked: false`:\n//\n// ```markdown\n// [ ] foo\n// ```\nfunction listItem(node, parent, position, bullet) {\n  var self = this\n  var style = self.options.listItemIndent\n  var marker = bullet || self.options.bullet\n  var spread = node.spread == null ? true : node.spread\n  var checked = node.checked\n  var children = node.children\n  var length = children.length\n  var values = []\n  var index = -1\n  var value\n  var indent\n  var spacing\n\n  while (++index < length) {\n    values[index] = self.visit(children[index], node)\n  }\n\n  value = values.join(spread ? blank : lineFeed)\n\n  if (typeof checked === 'boolean') {\n    // Note: I’d like to be able to only add the space between the check and\n    // the value, but unfortunately github does not support empty list-items\n    // with a checkbox :(\n    value =\n      leftSquareBracket +\n      (checked ? lowercaseX : space) +\n      rightSquareBracket +\n      space +\n      value\n  }\n\n  if (style === '1' || (style === 'mixed' && value.indexOf(lineFeed) === -1)) {\n    indent = marker.length + 1\n    spacing = space\n  } else {\n    indent = ceil((marker.length + 1) / tabSize) * tabSize\n    spacing = repeat(space, indent - marker.length)\n  }\n\n  return value\n    ? marker + spacing + pad(value, indent / tabSize).slice(indent)\n    : marker\n}\n"]},"metadata":{},"sourceType":"script"}