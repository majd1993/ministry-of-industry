{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _BasicWebChat = _interopRequireDefault(require(\"./BasicWebChat\"));\n\nvar _Composer = _interopRequireDefault(require(\"./Composer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n} // Please keep this file as simple as possible. This is for setting up the surface (a.k.a. <Composer>) and <BasicWebChat> only.\n// Web developers may choose to put things before/after <BasicWebChat> while still inside the surface.\n// For example,\n// - They can hide our default send box and built their own using hooks\n// - They can run hooks outside of activity/attachment middleware\n//   - They will put <Composer> as very top of their page, and allow buttons on their existing page to send message to bot\n\n\nvar ReactWebChat = function ReactWebChat(_ref) {\n  var className = _ref.className,\n      composerProps = _objectWithoutProperties(_ref, [\"className\"]);\n\n  return /*#__PURE__*/_react.default.createElement(_Composer.default, composerProps, /*#__PURE__*/_react.default.createElement(_BasicWebChat.default, {\n    className: className\n  }));\n};\n\nvar _default = ReactWebChat;\nexports.default = _default;\nReactWebChat.defaultProps = _objectSpread({\n  className: undefined\n}, _Composer.default.defaultProps);\nReactWebChat.propTypes = _objectSpread({\n  className: _propTypes.default.string\n}, _Composer.default.propTypes);","map":{"version":3,"sources":["../src/ReactWebChat.js"],"names":["ReactWebChat","className","composerProps","undefined","Composer","PropTypes","string"],"mappings":";;;;;;;AAAA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAEA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAA,IAAA,EAAA;AAAA,MAAGC,SAAH,GAAA,IAAA,CAAA,SAAA;AAAA,MAAiBC,aAAjB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,CAAA,CAAA;;AAAA,SAAA,aACnB,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,SAAA,CAAD,OAAA,EAAA,aAAA,EAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,aAAA,CAAD,OAAA,EAAA;AAAc,IAAA,SAAS,EAAED;AAAzB,GAAA,CADF,CADmB;AAArB,CAAA;;eAMeD,Y;;AAEfA,YAAY,CAAZA,YAAAA,GAAAA,aAAAA,CAAAA;AACEC,EAAAA,SAAS,EAAEE;AADbH,CAAAA,EAEKI,SAAAA,CAAAA,OAAAA,CAFLJ,YAAAA,CAAAA;AAKAA,YAAY,CAAZA,SAAAA,GAAAA,aAAAA,CAAAA;AACEC,EAAAA,SAAS,EAAEI,UAAAA,CAAAA,OAAAA,CAAUC;AADvBN,CAAAA,EAEKI,SAAAA,CAAAA,OAAAA,CAFLJ,SAAAA,CAAAA","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport BasicWebChat from './BasicWebChat';\nimport Composer from './Composer';\n\n// Please keep this file as simple as possible. This is for setting up the surface (a.k.a. <Composer>) and <BasicWebChat> only.\n\n// Web developers may choose to put things before/after <BasicWebChat> while still inside the surface.\n// For example,\n// - They can hide our default send box and built their own using hooks\n// - They can run hooks outside of activity/attachment middleware\n//   - They will put <Composer> as very top of their page, and allow buttons on their existing page to send message to bot\n\nconst ReactWebChat = ({ className, ...composerProps }) => (\n  <Composer {...composerProps}>\n    <BasicWebChat className={className} />\n  </Composer>\n);\n\nexport default ReactWebChat;\n\nReactWebChat.defaultProps = {\n  className: undefined,\n  ...Composer.defaultProps\n};\n\nReactWebChat.propTypes = {\n  className: PropTypes.string,\n  ...Composer.propTypes\n};\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}