{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useDirection;\n\nvar _react = require(\"react\");\n\nvar _getRTLList = _interopRequireDefault(require(\"../localization/getRTLList\"));\n\nvar _useDirFromProps3 = _interopRequireDefault(require(\"./internal/useDirFromProps\"));\n\nvar _useLanguage3 = _interopRequireDefault(require(\"./useLanguage\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction determineDirection(dir, language) {\n  if (dir !== 'auto') {\n    return dir;\n  } else if ((0, _getRTLList.default)().includes(language)) {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n\nfunction useDirection() {\n  var _useDirFromProps = (0, _useDirFromProps3.default)(),\n      _useDirFromProps2 = _slicedToArray(_useDirFromProps, 1),\n      dir = _useDirFromProps2[0];\n\n  var _useLanguage = (0, _useLanguage3.default)(),\n      _useLanguage2 = _slicedToArray(_useLanguage, 1),\n      language = _useLanguage2[0];\n\n  var determinedDirection = (0, _react.useMemo)(function () {\n    return determineDirection(dir, language);\n  }, [dir, language]);\n  return [determinedDirection];\n}","map":{"version":3,"sources":["../../src/hooks/useDirection.js"],"names":["dir","language","determinedDirection","determineDirection"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,4BAAA,CAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,4BAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAAA,kBAAA,CAAA,GAAA,EAAA,QAAA,EAA2C;AACzC,MAAIA,GAAG,KAAP,MAAA,EAAoB;AAClB,WAAA,GAAA;AADF,GAAA,MAEO,IAAI,CAAA,GAAA,WAAA,CAAA,OAAA,IAAA,QAAA,CAAJ,QAAI,CAAJ,EAAqC;AAC1C,WAAA,KAAA;AACD;;AAED,SAAA,KAAA;AACD;;AAEc,SAAA,YAAA,GAAwB;AAAA,MAAA,gBAAA,GACvB,CAAA,GAAA,iBAAA,CADuB,OACvB,GADuB;AAAA,MAAA,iBAAA,GAAA,cAAA,CAAA,gBAAA,EAAA,CAAA,CAAA;AAAA,MAC9BA,GAD8B,GAAA,iBAAA,CAAA,CAAA,CAAA;;AAAA,MAAA,YAAA,GAElB,CAAA,GAAA,aAAA,CAFkB,OAElB,GAFkB;AAAA,MAAA,aAAA,GAAA,cAAA,CAAA,YAAA,EAAA,CAAA,CAAA;AAAA,MAE9BC,QAF8B,GAAA,aAAA,CAAA,CAAA,CAAA;;AAGrC,MAAMC,mBAAmB,GAAG,CAAA,GAAA,MAAA,CAAA,OAAA,EAAQ,YAAA;AAAA,WAAMC,kBAAkB,CAAA,GAAA,EAAxB,QAAwB,CAAxB;AAAR,GAAA,EAAiD,CAAA,GAAA,EAA7E,QAA6E,CAAjD,CAA5B;AAEA,SAAO,CAAP,mBAAO,CAAP;AACD","sourcesContent":["import { useMemo } from 'react';\n\nimport getRTLList from '../localization/getRTLList';\nimport useDirFromProps from './internal/useDirFromProps';\nimport useLanguage from './useLanguage';\n\nfunction determineDirection(dir, language) {\n  if (dir !== 'auto') {\n    return dir;\n  } else if (getRTLList().includes(language)) {\n    return 'rtl';\n  }\n\n  return 'ltr';\n}\n\nexport default function useDirection() {\n  const [dir] = useDirFromProps();\n  const [language] = useLanguage();\n  const determinedDirection = useMemo(() => determineDirection(dir, language), [dir, language]);\n\n  return [determinedDirection];\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}