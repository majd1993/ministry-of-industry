{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _reactDictateButton = require(\"react-dictate-button\");\n\nvar _botframeworkWebchatCore = require(\"botframework-webchat-core\");\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _useSettableDictateAbortable = _interopRequireDefault(require(\"./hooks/internal/useSettableDictateAbortable\"));\n\nvar _useWebSpeechPonyfill4 = _interopRequireDefault(require(\"./hooks/useWebSpeechPonyfill\"));\n\nvar _useSetDictateState = _interopRequireDefault(require(\"botframework-webchat-api/lib/hooks/internal/useSetDictateState\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useActivities = _botframeworkWebchatApi.hooks.useActivities,\n    useDictateInterims = _botframeworkWebchatApi.hooks.useDictateInterims,\n    useDictateState = _botframeworkWebchatApi.hooks.useDictateState,\n    useDisabled = _botframeworkWebchatApi.hooks.useDisabled,\n    useEmitTypingIndicator = _botframeworkWebchatApi.hooks.useEmitTypingIndicator,\n    useLanguage = _botframeworkWebchatApi.hooks.useLanguage,\n    useSendBoxValue = _botframeworkWebchatApi.hooks.useSendBoxValue,\n    useSendTypingIndicator = _botframeworkWebchatApi.hooks.useSendTypingIndicator,\n    useShouldSpeakIncomingActivity = _botframeworkWebchatApi.hooks.useShouldSpeakIncomingActivity,\n    useStopDictate = _botframeworkWebchatApi.hooks.useStopDictate,\n    useSubmitSendBox = _botframeworkWebchatApi.hooks.useSubmitSendBox;\nvar _Constants$DictateSta = _botframeworkWebchatCore.Constants.DictateState,\n    DICTATING = _Constants$DictateSta.DICTATING,\n    IDLE = _Constants$DictateSta.IDLE,\n    STARTING = _Constants$DictateSta.STARTING;\n\nvar Dictation = function Dictation(_ref) {\n  var onError = _ref.onError;\n\n  var _useSettableDictateAb = (0, _useSettableDictateAbortable.default)(),\n      _useSettableDictateAb2 = _slicedToArray(_useSettableDictateAb, 2),\n      setDictateAbortable = _useSettableDictateAb2[1];\n\n  var _useDictateInterims = useDictateInterims(),\n      _useDictateInterims2 = _slicedToArray(_useDictateInterims, 2),\n      setDictateInterims = _useDictateInterims2[1];\n\n  var _useSendBoxValue = useSendBoxValue(),\n      _useSendBoxValue2 = _slicedToArray(_useSendBoxValue, 2),\n      setSendBox = _useSendBoxValue2[1];\n\n  var _useShouldSpeakIncomi = useShouldSpeakIncomingActivity(),\n      _useShouldSpeakIncomi2 = _slicedToArray(_useShouldSpeakIncomi, 2),\n      setShouldSpeakIncomingActivity = _useShouldSpeakIncomi2[1];\n\n  var _useWebSpeechPonyfill = (0, _useWebSpeechPonyfill4.default)(),\n      _useWebSpeechPonyfill2 = _slicedToArray(_useWebSpeechPonyfill, 1),\n      _useWebSpeechPonyfill3 = _useWebSpeechPonyfill2[0];\n\n  _useWebSpeechPonyfill3 = _useWebSpeechPonyfill3 === void 0 ? {} : _useWebSpeechPonyfill3;\n  var SpeechGrammarList = _useWebSpeechPonyfill3.SpeechGrammarList,\n      SpeechRecognition = _useWebSpeechPonyfill3.SpeechRecognition;\n\n  var _useActivities = useActivities(),\n      _useActivities2 = _slicedToArray(_useActivities, 1),\n      activities = _useActivities2[0];\n\n  var _useDictateState = useDictateState(),\n      _useDictateState2 = _slicedToArray(_useDictateState, 1),\n      dictateState = _useDictateState2[0];\n\n  var _useDisabled = useDisabled(),\n      _useDisabled2 = _slicedToArray(_useDisabled, 1),\n      disabled = _useDisabled2[0];\n\n  var _useSendTypingIndicat = useSendTypingIndicator(),\n      _useSendTypingIndicat2 = _slicedToArray(_useSendTypingIndicat, 1),\n      sendTypingIndicator = _useSendTypingIndicat2[0];\n\n  var _useLanguage = useLanguage('speech'),\n      _useLanguage2 = _slicedToArray(_useLanguage, 1),\n      speechLanguage = _useLanguage2[0];\n\n  var emitTypingIndicator = useEmitTypingIndicator();\n  var setDictateState = (0, _useSetDictateState.default)();\n  var stopDictate = useStopDictate();\n  var submitSendBox = useSubmitSendBox();\n  var numSpeakingActivities = (0, _react.useMemo)(function () {\n    return activities.filter(function (_ref2) {\n      var _ref2$channelData = _ref2.channelData;\n      _ref2$channelData = _ref2$channelData === void 0 ? {} : _ref2$channelData;\n      var speak = _ref2$channelData.speak;\n      return speak;\n    }).length;\n  }, [activities]);\n  var handleDictate = (0, _react.useCallback)(function (_ref3) {\n    var _ref3$result = _ref3.result;\n    _ref3$result = _ref3$result === void 0 ? {} : _ref3$result;\n    var confidence = _ref3$result.confidence,\n        transcript = _ref3$result.transcript;\n\n    if (dictateState === DICTATING || dictateState === STARTING) {\n      setDictateInterims([]);\n      setDictateState(IDLE);\n      stopDictate();\n\n      if (transcript) {\n        setSendBox(transcript);\n        submitSendBox('speech', {\n          channelData: {\n            speech: {\n              alternatives: [{\n                confidence: confidence,\n                transcript: transcript\n              }]\n            }\n          }\n        });\n        setShouldSpeakIncomingActivity(true);\n      }\n    }\n  }, [dictateState, setDictateInterims, setDictateState, stopDictate, setSendBox, submitSendBox, setShouldSpeakIncomingActivity]);\n  var handleDictating = (0, _react.useCallback)(function (_ref4) {\n    var abortable = _ref4.abortable,\n        _ref4$results = _ref4.results,\n        results = _ref4$results === void 0 ? [] : _ref4$results;\n\n    if (dictateState === DICTATING || dictateState === STARTING) {\n      var interims = results.map(function (_ref5) {\n        var transcript = _ref5.transcript;\n        return transcript;\n      });\n      setDictateAbortable(abortable);\n      setDictateInterims(interims);\n      setDictateState(DICTATING);\n      sendTypingIndicator && emitTypingIndicator();\n    }\n  }, [dictateState, emitTypingIndicator, sendTypingIndicator, setDictateAbortable, setDictateInterims, setDictateState]);\n  var handleError = (0, _react.useCallback)(function (event) {\n    dictateState !== IDLE && setDictateState(IDLE);\n    (dictateState === DICTATING || dictateState === STARTING) && stopDictate();\n    onError && onError(event);\n  }, [dictateState, onError, setDictateState, stopDictate]);\n  return /*#__PURE__*/_react.default.createElement(_reactDictateButton.Composer, {\n    lang: speechLanguage,\n    onDictate: handleDictate,\n    onError: handleError,\n    onProgress: handleDictating,\n    speechGrammarList: SpeechGrammarList,\n    speechRecognition: SpeechRecognition,\n    started: !disabled && (dictateState === STARTING || dictateState === DICTATING) && !numSpeakingActivities\n  });\n};\n\nDictation.defaultProps = {\n  onError: undefined\n};\nDictation.propTypes = {\n  onError: _propTypes.default.func\n};\nvar _default = Dictation;\nexports.default = _default;","map":{"version":3,"sources":["../src/Dictation.js"],"names":["useActivities","useDictateInterims","useDictateState","useDisabled","useEmitTypingIndicator","useLanguage","useSendBoxValue","useSendTypingIndicator","useShouldSpeakIncomingActivity","useStopDictate","useSubmitSendBox","hooks","DictateState","DICTATING","IDLE","STARTING","Constants","Dictation","onError","setDictateAbortable","setDictateInterims","setSendBox","setShouldSpeakIncomingActivity","SpeechGrammarList","SpeechRecognition","activities","dictateState","disabled","sendTypingIndicator","speechLanguage","emitTypingIndicator","setDictateState","stopDictate","submitSendBox","numSpeakingActivities","speak","handleDictate","result","confidence","transcript","channelData","speech","alternatives","handleDictating","abortable","results","interims","handleError","undefined","PropTypes","func"],"mappings":"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","sourcesContent":["import { Composer as DictateComposer } from 'react-dictate-button';\nimport { Constants } from 'botframework-webchat-core';\nimport { hooks } from 'botframework-webchat-api';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useMemo } from 'react';\n\nimport useSettableDictateAbortable from './hooks/internal/useSettableDictateAbortable';\nimport useWebSpeechPonyfill from './hooks/useWebSpeechPonyfill';\n\n// TODO: [P1] #3350 No /lib/, we need to move setDictateState from bf-wc-core (Redux) to React Context.\nimport useSetDictateState from 'botframework-webchat-api/lib/hooks/internal/useSetDictateState';\n\nconst {\n  useActivities,\n  useDictateInterims,\n  useDictateState,\n  useDisabled,\n  useEmitTypingIndicator,\n  useLanguage,\n  useSendBoxValue,\n  useSendTypingIndicator,\n  useShouldSpeakIncomingActivity,\n  useStopDictate,\n  useSubmitSendBox\n} = hooks;\n\nconst {\n  DictateState: { DICTATING, IDLE, STARTING }\n} = Constants;\n\nconst Dictation = ({ onError }) => {\n  const [, setDictateAbortable] = useSettableDictateAbortable();\n  const [, setDictateInterims] = useDictateInterims();\n  const [, setSendBox] = useSendBoxValue();\n  const [, setShouldSpeakIncomingActivity] = useShouldSpeakIncomingActivity();\n  const [{ SpeechGrammarList, SpeechRecognition } = {}] = useWebSpeechPonyfill();\n  const [activities] = useActivities();\n  const [dictateState] = useDictateState();\n  const [disabled] = useDisabled();\n  const [sendTypingIndicator] = useSendTypingIndicator();\n  const [speechLanguage] = useLanguage('speech');\n  const emitTypingIndicator = useEmitTypingIndicator();\n  const setDictateState = useSetDictateState();\n  const stopDictate = useStopDictate();\n  const submitSendBox = useSubmitSendBox();\n\n  const numSpeakingActivities = useMemo(() => activities.filter(({ channelData: { speak } = {} }) => speak).length, [\n    activities\n  ]);\n\n  const handleDictate = useCallback(\n    ({ result: { confidence, transcript } = {} }) => {\n      if (dictateState === DICTATING || dictateState === STARTING) {\n        setDictateInterims([]);\n        setDictateState(IDLE);\n        stopDictate();\n\n        if (transcript) {\n          setSendBox(transcript);\n          submitSendBox('speech', { channelData: { speech: { alternatives: [{ confidence, transcript }] } } });\n          setShouldSpeakIncomingActivity(true);\n        }\n      }\n    },\n    [\n      dictateState,\n      setDictateInterims,\n      setDictateState,\n      stopDictate,\n      setSendBox,\n      submitSendBox,\n      setShouldSpeakIncomingActivity\n    ]\n  );\n\n  const handleDictating = useCallback(\n    ({ abortable, results = [] }) => {\n      if (dictateState === DICTATING || dictateState === STARTING) {\n        const interims = results.map(({ transcript }) => transcript);\n\n        setDictateAbortable(abortable);\n        setDictateInterims(interims);\n        setDictateState(DICTATING);\n        sendTypingIndicator && emitTypingIndicator();\n      }\n    },\n    [dictateState, emitTypingIndicator, sendTypingIndicator, setDictateAbortable, setDictateInterims, setDictateState]\n  );\n\n  const handleError = useCallback(\n    event => {\n      dictateState !== IDLE && setDictateState(IDLE);\n      (dictateState === DICTATING || dictateState === STARTING) && stopDictate();\n\n      onError && onError(event);\n    },\n    [dictateState, onError, setDictateState, stopDictate]\n  );\n\n  return (\n    <DictateComposer\n      lang={speechLanguage}\n      onDictate={handleDictate}\n      onError={handleError}\n      onProgress={handleDictating}\n      speechGrammarList={SpeechGrammarList}\n      speechRecognition={SpeechRecognition}\n      started={!disabled && (dictateState === STARTING || dictateState === DICTATING) && !numSpeakingActivities}\n    />\n  );\n};\n\nDictation.defaultProps = {\n  onError: undefined\n};\n\nDictation.propTypes = {\n  onError: PropTypes.func\n};\n\nexport default Dictation;\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}