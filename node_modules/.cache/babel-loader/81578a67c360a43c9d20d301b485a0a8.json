{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = connectToWebChat;\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _WebChatAPIContext = _interopRequireDefault(require(\"botframework-webchat-api/lib/hooks/internal/WebChatAPIContext\"));\n\nvar _WebChatReduxContext = _interopRequireDefault(require(\"botframework-webchat-api/lib/hooks/internal/WebChatReduxContext\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction removeUndefinedValues(map) {\n  return Object.keys(map).reduce(function (result, key) {\n    var value = map[key];\n\n    if (typeof value !== 'undefined') {\n      result[key] = value;\n    }\n\n    return result;\n  }, {});\n}\n\nfunction combineSelectors() {\n  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {\n    selectors[_key] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return selectors.reduce(function (result, selector) {\n      return _objectSpread(_objectSpread({}, result), removeUndefinedValues(selector && selector.apply(void 0, args) || {}));\n    }, {});\n  };\n}\n\nfunction connectToWebChat() {\n  var combinedSelector = combineSelectors.apply(void 0, arguments); // TODO: [P1] Instead of exposing Redux store via props, we should consider exposing via Context.\n  //       We should also hide dispatch function.\n\n  return function (Component) {\n    var ConnectedComponent = (0, _reactRedux.connect)(function (state, _ref) {\n      var context = _ref.context,\n          ownProps = _objectWithoutProperties(_ref, [\"context\"]);\n\n      return combinedSelector(_objectSpread(_objectSpread({}, state), context), ownProps);\n    }, null, null, {\n      context: _WebChatReduxContext.default\n    })(Component);\n\n    var WebChatConnectedComponent = function WebChatConnectedComponent(props) {\n      return /*#__PURE__*/_react.default.createElement(_WebChatAPIContext.default.Consumer, null, function (context) {\n        return /*#__PURE__*/_react.default.createElement(ConnectedComponent, _extends({}, props, {\n          context: context\n        }));\n      });\n    };\n\n    return WebChatConnectedComponent;\n  };\n}","map":{"version":3,"sources":["../src/connectToWebChat.js"],"names":["value","map","result","selectors","args","removeUndefinedValues","selector","combinedSelector","combineSelectors","ConnectedComponent","context","ownProps","WebChatReduxContext","WebChatConnectedComponent"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport React from 'react';\n\nimport WebChatAPIContext from 'botframework-webchat-api/lib/hooks/internal/WebChatAPIContext';\nimport WebChatReduxContext from 'botframework-webchat-api/lib/hooks/internal/WebChatReduxContext';\n\nfunction removeUndefinedValues(map) {\n  return Object.keys(map).reduce((result, key) => {\n    const value = map[key];\n\n    if (typeof value !== 'undefined') {\n      result[key] = value;\n    }\n\n    return result;\n  }, {});\n}\n\nfunction combineSelectors(...selectors) {\n  return (...args) =>\n    selectors.reduce(\n      (result, selector) => ({\n        ...result,\n        ...removeUndefinedValues((selector && selector(...args)) || {})\n      }),\n      {}\n    );\n}\n\nexport default function connectToWebChat(...selectors) {\n  const combinedSelector = combineSelectors(...selectors);\n\n  // TODO: [P1] Instead of exposing Redux store via props, we should consider exposing via Context.\n  //       We should also hide dispatch function.\n  return Component => {\n    const ConnectedComponent = connect(\n      (state, { context, ...ownProps }) => combinedSelector({ ...state, ...context }, ownProps),\n      null,\n      null,\n      {\n        context: WebChatReduxContext\n      }\n    )(Component);\n\n    const WebChatConnectedComponent = props => (\n      <WebChatAPIContext.Consumer>\n        {context => <ConnectedComponent {...props} context={context} />}\n      </WebChatAPIContext.Consumer>\n    );\n\n    return WebChatConnectedComponent;\n  };\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}