{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _react = require(\"react\");\n\nvar _downscaleImageToDataURLUsingWorker = require(\"../../Utils/downscaleImageToDataURL/downscaleImageToDataURLUsingWorker\");\n\nvar _BypassSpeechSynthesisPonyfill = require(\"./BypassSpeechSynthesisPonyfill\");\n\nvar _useWebSpeechPonyfill3 = _interopRequireDefault(require(\"../useWebSpeechPonyfill\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useTrackDimension = _botframeworkWebchatApi.hooks.useTrackDimension;\n\nvar Tracker = function Tracker() {\n  var _useWebSpeechPonyfill = (0, _useWebSpeechPonyfill3.default)(),\n      _useWebSpeechPonyfill2 = _slicedToArray(_useWebSpeechPonyfill, 1),\n      webSpeechPonyfill = _useWebSpeechPonyfill2[0];\n\n  var trackDimension = useTrackDimension();\n  var speechRecognitionCapability = !!webSpeechPonyfill.SpeechRecognition;\n  var speechSynthesisCapability = webSpeechPonyfill.speechSynthesis && webSpeechPonyfill.speechSynthesis !== _BypassSpeechSynthesisPonyfill.speechSynthesis;\n  (0, _react.useEffect)(function () {\n    trackDimension('capability:downscaleImage:workerType', (0, _downscaleImageToDataURLUsingWorker.checkSupport)() ? 'web worker' : 'main');\n    trackDimension('capability:renderer', 'html'); // TODO: [P2] #2937 Differentiate between Cognitive Services and browser speech\n\n    trackDimension('prop:speechRecognition', !!speechRecognitionCapability + '');\n    trackDimension('prop:speechSynthesis', !!speechSynthesisCapability + '');\n  }, [trackDimension, speechRecognitionCapability, speechSynthesisCapability]);\n  return false;\n};\n\nvar _default = Tracker;\nexports.default = _default;","map":{"version":3,"sources":["../../../src/hooks/internal/UITracker.js"],"names":["useTrackDimension","hooks","Tracker","webSpeechPonyfill","trackDimension","speechRecognitionCapability","speechSynthesisCapability","speechSynthesis"],"mappings":";;;;;;;AAAA,IAAA,uBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,mCAAA,GAAA,OAAA,CAAA,wEAAA,CAAA;;AACA,IAAA,8BAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AACA,IAAA,sBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEQA,iB,GAAsBC,uBAAAA,CAAAA,KAAAA,CAAtBD,iB;;AAER,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,MAAA,qBAAA,GACQ,CAAA,GAAA,sBAAA,CADR,OACQ,GADR;AAAA,MAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA,EAAA,CAAA,CAAA;AAAA,MACbC,iBADa,GAAA,sBAAA,CAAA,CAAA,CAAA;;AAEpB,MAAMC,cAAc,GAAGJ,iBAAvB,EAAA;AAEA,MAAMK,2BAA2B,GAAG,CAAC,CAACF,iBAAiB,CAAvD,iBAAA;AACA,MAAMG,yBAAyB,GAC7BH,iBAAiB,CAAjBA,eAAAA,IAAqCA,iBAAiB,CAAjBA,eAAAA,KAAsCI,8BAAAA,CAD7E,eAAA;AAGA,GAAA,GAAA,MAAA,CAAA,SAAA,EAAU,YAAM;AACdH,IAAAA,cAAc,CAAA,sCAAA,EAAyC,CAAA,GAAA,mCAAA,CAAA,YAAA,MAAA,YAAA,GAAvDA,MAAc,CAAdA;AACAA,IAAAA,cAAc,CAAA,qBAAA,EAFA,MAEA,CAAdA,CAFc,CAId;;AACAA,IAAAA,cAAc,CAAA,wBAAA,EAA2B,CAAC,CAAD,2BAAA,GAAzCA,EAAc,CAAdA;AACAA,IAAAA,cAAc,CAAA,sBAAA,EAAyB,CAAC,CAAD,yBAAA,GAAvCA,EAAc,CAAdA;AANF,GAAA,EAOG,CAAA,cAAA,EAAA,2BAAA,EAPH,yBAOG,CAPH;AASA,SAAA,KAAA;AAjBF,CAAA;;eAoBeF,O","sourcesContent":["import { hooks } from 'botframework-webchat-api';\nimport { useEffect } from 'react';\n\nimport { checkSupport as supportWorker } from '../../Utils/downscaleImageToDataURL/downscaleImageToDataURLUsingWorker';\nimport { speechSynthesis } from './BypassSpeechSynthesisPonyfill';\nimport useWebSpeechPonyfill from '../useWebSpeechPonyfill';\n\nconst { useTrackDimension } = hooks;\n\nconst Tracker = () => {\n  const [webSpeechPonyfill] = useWebSpeechPonyfill();\n  const trackDimension = useTrackDimension();\n\n  const speechRecognitionCapability = !!webSpeechPonyfill.SpeechRecognition;\n  const speechSynthesisCapability =\n    webSpeechPonyfill.speechSynthesis && webSpeechPonyfill.speechSynthesis !== speechSynthesis;\n\n  useEffect(() => {\n    trackDimension('capability:downscaleImage:workerType', supportWorker() ? 'web worker' : 'main');\n    trackDimension('capability:renderer', 'html');\n\n    // TODO: [P2] #2937 Differentiate between Cognitive Services and browser speech\n    trackDimension('prop:speechRecognition', !!speechRecognitionCapability + '');\n    trackDimension('prop:speechSynthesis', !!speechSynthesisCapability + '');\n  }, [trackDimension, speechRecognitionCapability, speechSynthesisCapability]);\n\n  return false;\n};\n\nexport default Tracker;\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}