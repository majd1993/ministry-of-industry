{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = lastTyping;\n\nvar _simpleUpdateIn = _interopRequireDefault(require(\"simple-update-in\"));\n\nvar _incomingActivity = require(\"../actions/incomingActivity\");\n\nvar _postActivity = require(\"../actions/postActivity\");\n/*eslint no-case-declarations: \"off\"*/\n\n/*eslint no-unused-vars: \"off\"*/\n\n\nvar DEFAULT_STATE = {};\n\nfunction lastTyping() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_STATE;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      payload = _ref.payload,\n      type = _ref.type;\n\n  if (type === _incomingActivity.INCOMING_ACTIVITY || type === _postActivity.POST_ACTIVITY_PENDING) {\n    var _payload$activity = payload.activity,\n        _payload$activity$fro = _payload$activity.from,\n        id = _payload$activity$fro.id,\n        name = _payload$activity$fro.name,\n        role = _payload$activity$fro.role,\n        activityType = _payload$activity.type;\n\n    if (activityType === 'typing') {\n      state = (0, _simpleUpdateIn[\"default\"])(state, [id], function () {\n        return {\n          at: Date.now(),\n          name: name,\n          role: role\n        };\n      });\n    } else if (activityType === 'message') {\n      state = (0, _simpleUpdateIn[\"default\"])(state, [id]);\n    }\n  }\n\n  return state;\n}","map":{"version":3,"sources":["../../src/reducers/typing.js"],"names":["DEFAULT_STATE","state","payload","type","INCOMING_ACTIVITY","POST_ACTIVITY_PENDING","id","name","role","activityType","at","Date"],"mappings":";;;;;;;;;AAGA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;AAEA,IAAA,iBAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;AANA;;AACA;;;AAOA,IAAMA,aAAa,GAAnB,EAAA;;AAEe,SAAA,UAAA,GAA8D;AAAA,MAA1CC,KAA0C,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAlCD,aAAkC;;AAAA,MAAA,IAAA,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA;AAAA,MAAjBE,OAAiB,GAAA,IAAA,CAAjBA,OAAiB;AAAA,MAARC,IAAQ,GAAA,IAAA,CAARA,IAAQ;;AAC3E,MAAIA,IAAI,KAAKC,iBAAAA,CAATD,iBAAAA,IAA8BA,IAAI,KAAKE,aAAAA,CAA3C,qBAAA,EAAkE;AAAA,QAAA,iBAAA,GAM5DH,OAN4D,CAAA,QAAA;AAAA,QAAA,qBAAA,GAAA,iBAAA,CAAA,IAAA;AAAA,QAGpDI,EAHoD,GAAA,qBAAA,CAAA,EAAA;AAAA,QAGhDC,IAHgD,GAAA,qBAAA,CAAA,IAAA;AAAA,QAG1CC,IAH0C,GAAA,qBAAA,CAAA,IAAA;AAAA,QAItDC,YAJsD,GAAA,iBAAA,CAAA,IAAA;;AAQhE,QAAIA,YAAY,KAAhB,QAAA,EAA+B;AAC7BR,MAAAA,KAAK,GAAG,CAAA,GAAA,eAAA,CAAA,SAAA,CAAA,EAAA,KAAA,EAAgB,CAAhB,EAAgB,CAAhB,EAAsB,YAAA;AAAA,eAAO;AACnCS,UAAAA,EAAE,EAAEC,IAAI,CAD2B,GAC/BA,EAD+B;AAEnCJ,UAAAA,IAAI,EAF+B,IAAA;AAGnCC,UAAAA,IAAI,EAAJA;AAHmC,SAAP;AAA9BP,OAAQ,CAARA;AADF,KAAA,MAMO,IAAIQ,YAAY,KAAhB,SAAA,EAAgC;AACrCR,MAAAA,KAAK,GAAG,CAAA,GAAA,eAAA,CAAA,SAAA,CAAA,EAAA,KAAA,EAAgB,CAAxBA,EAAwB,CAAhB,CAARA;AACD;AACF;;AAED,SAAA,KAAA;AACD","sourcesContent":["/*eslint no-case-declarations: \"off\"*/\n/*eslint no-unused-vars: \"off\"*/\n\nimport updateIn from 'simple-update-in';\n\nimport { INCOMING_ACTIVITY } from '../actions/incomingActivity';\nimport { POST_ACTIVITY_PENDING } from '../actions/postActivity';\n\nconst DEFAULT_STATE = {};\n\nexport default function lastTyping(state = DEFAULT_STATE, { payload, type }) {\n  if (type === INCOMING_ACTIVITY || type === POST_ACTIVITY_PENDING) {\n    const {\n      activity: {\n        from: { id, name, role },\n        type: activityType\n      }\n    } = payload;\n\n    if (activityType === 'typing') {\n      state = updateIn(state, [id], () => ({\n        at: Date.now(),\n        name,\n        role\n      }));\n    } else if (activityType === 'message') {\n      state = updateIn(state, [id]);\n    }\n  }\n\n  return state;\n}\n"],"sourceRoot":"core:///"},"metadata":{},"sourceType":"script"}