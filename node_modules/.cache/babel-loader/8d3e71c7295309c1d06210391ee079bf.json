{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar payloadAssembler_1 = require(\"../assemblers/payloadAssembler\");\n\nvar payloadTypes_1 = require(\"./payloadTypes\");\n/**\n * Orchestrates assemly of payloads\n */\n\n\nvar PayloadAssemblerManager =\n/** @class */\nfunction () {\n  function PayloadAssemblerManager(streamManager, onReceiveResponse, onReceiveRequest) {\n    this.activeAssemblers = {};\n    this.streamManager = streamManager;\n    this.onReceiveRequest = onReceiveRequest;\n    this.onReceiveResponse = onReceiveResponse;\n  }\n\n  PayloadAssemblerManager.prototype.getPayloadStream = function (header) {\n    if (header.payloadType === payloadTypes_1.PayloadTypes.stream) {\n      return this.streamManager.getPayloadStream(header);\n    } else if (!this.activeAssemblers[header.id]) {\n      var assembler = this.createPayloadAssembler(header);\n\n      if (assembler) {\n        this.activeAssemblers[header.id] = assembler;\n        return assembler.getPayloadStream();\n      }\n    }\n  };\n\n  PayloadAssemblerManager.prototype.onReceive = function (header, contentStream, contentLength) {\n    if (header.payloadType === payloadTypes_1.PayloadTypes.stream) {\n      this.streamManager.onReceive(header, contentStream, contentLength);\n    } else {\n      if (this.activeAssemblers && this.activeAssemblers[header.id]) {\n        var assembler = this.activeAssemblers[header.id];\n        assembler.onReceive(header, contentStream, contentLength);\n      }\n\n      if (header.end) {\n        delete this.activeAssemblers[header.id];\n      }\n    }\n  };\n\n  PayloadAssemblerManager.prototype.createPayloadAssembler = function (header) {\n    if (header.payloadType === payloadTypes_1.PayloadTypes.request) {\n      return new payloadAssembler_1.PayloadAssembler(this.streamManager, {\n        header: header,\n        onCompleted: this.onReceiveRequest\n      });\n    } else if (header.payloadType === payloadTypes_1.PayloadTypes.response) {\n      return new payloadAssembler_1.PayloadAssembler(this.streamManager, {\n        header: header,\n        onCompleted: this.onReceiveResponse\n      });\n    }\n  };\n\n  return PayloadAssemblerManager;\n}();\n\nexports.PayloadAssemblerManager = PayloadAssemblerManager;","map":{"version":3,"sources":["../../src/payloads/payloadAssemblerManager.ts"],"names":[],"mappings":";;;;;;AAQA,IAAA,kBAAA,GAAA,OAAA,CAAA,gCAAA,CAAA;;AAGA,IAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;AAEA;;AAEG;;;AACH,IAAA,uBAAA;AAAA;AAAA,YAAA;AAMI,WAAA,uBAAA,CAAmB,aAAnB,EAAiD,iBAAjD,EAA8E,gBAA9E,EAAwG;AAFvF,SAAA,gBAAA,GAAuD,EAAvD;AAGb,SAAK,aAAL,GAAqB,aAArB;AACA,SAAK,gBAAL,GAAwB,gBAAxB;AACA,SAAK,iBAAL,GAAyB,iBAAzB;AACH;;AAEM,EAAA,uBAAA,CAAA,SAAA,CAAA,gBAAA,GAAP,UAAwB,MAAxB,EAAuC;AACnC,QAAI,MAAM,CAAC,WAAP,KAAuB,cAAA,CAAA,YAAA,CAAa,MAAxC,EAAgD;AAC5C,aAAO,KAAK,aAAL,CAAmB,gBAAnB,CAAoC,MAApC,CAAP;AACH,KAFD,MAEO,IAAI,CAAC,KAAK,gBAAL,CAAsB,MAAM,CAAC,EAA7B,CAAL,EAAuC;AAC1C,UAAI,SAAS,GAAG,KAAK,sBAAL,CAA4B,MAA5B,CAAhB;;AAEA,UAAI,SAAJ,EAAe;AACX,aAAK,gBAAL,CAAsB,MAAM,CAAC,EAA7B,IAAmC,SAAnC;AACA,eAAO,SAAS,CAAC,gBAAV,EAAP;AACH;AACJ;AACJ,GAXM;;AAaA,EAAA,uBAAA,CAAA,SAAA,CAAA,SAAA,GAAP,UAAiB,MAAjB,EAAkC,aAAlC,EAAqE,aAArE,EAA0F;AACtF,QAAI,MAAM,CAAC,WAAP,KAAuB,cAAA,CAAA,YAAA,CAAa,MAAxC,EAAgD;AAC5C,WAAK,aAAL,CAAmB,SAAnB,CAA6B,MAA7B,EAAqC,aAArC,EAAoD,aAApD;AACH,KAFD,MAEO;AACH,UAAI,KAAK,gBAAL,IAAyB,KAAK,gBAAL,CAAsB,MAAM,CAAC,EAA7B,CAA7B,EAA+D;AAC3D,YAAI,SAAS,GAAG,KAAK,gBAAL,CAAsB,MAAM,CAAC,EAA7B,CAAhB;AACA,QAAA,SAAS,CAAC,SAAV,CAAoB,MAApB,EAA4B,aAA5B,EAA2C,aAA3C;AACH;;AACD,UAAI,MAAM,CAAC,GAAX,EAAgB;AACZ,eAAO,KAAK,gBAAL,CAAsB,MAAM,CAAC,EAA7B,CAAP;AACH;AACJ;AACJ,GAZM;;AAcC,EAAA,uBAAA,CAAA,SAAA,CAAA,sBAAA,GAAR,UAA+B,MAA/B,EAA8C;AAC1C,QAAI,MAAM,CAAC,WAAP,KAAuB,cAAA,CAAA,YAAA,CAAa,OAAxC,EAAiD;AAC7C,aAAO,IAAI,kBAAA,CAAA,gBAAJ,CAAqB,KAAK,aAA1B,EAAyC;AAAC,QAAA,MAAM,EAAE,MAAT;AAAiB,QAAA,WAAW,EAAE,KAAK;AAAnC,OAAzC,CAAP;AACH,KAFD,MAEO,IAAI,MAAM,CAAC,WAAP,KAAuB,cAAA,CAAA,YAAA,CAAa,QAAxC,EAAkD;AACrD,aAAO,IAAI,kBAAA,CAAA,gBAAJ,CAAqB,KAAK,aAA1B,EAAyC;AAAC,QAAA,MAAM,EAAE,MAAT;AAAiB,QAAA,WAAW,EAAE,KAAK;AAAnC,OAAzC,CAAP;AACH;AACJ,GANO;;AAOZ,SAAA,uBAAA;AAAC,CA9CD,EAAA;;AAAa,OAAA,CAAA,uBAAA,GAAA,uBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar payloadAssembler_1 = require(\"../assemblers/payloadAssembler\");\nvar payloadTypes_1 = require(\"./payloadTypes\");\n/**\n * Orchestrates assemly of payloads\n */\nvar PayloadAssemblerManager = /** @class */ (function () {\n    function PayloadAssemblerManager(streamManager, onReceiveResponse, onReceiveRequest) {\n        this.activeAssemblers = {};\n        this.streamManager = streamManager;\n        this.onReceiveRequest = onReceiveRequest;\n        this.onReceiveResponse = onReceiveResponse;\n    }\n    PayloadAssemblerManager.prototype.getPayloadStream = function (header) {\n        if (header.payloadType === payloadTypes_1.PayloadTypes.stream) {\n            return this.streamManager.getPayloadStream(header);\n        }\n        else if (!this.activeAssemblers[header.id]) {\n            var assembler = this.createPayloadAssembler(header);\n            if (assembler) {\n                this.activeAssemblers[header.id] = assembler;\n                return assembler.getPayloadStream();\n            }\n        }\n    };\n    PayloadAssemblerManager.prototype.onReceive = function (header, contentStream, contentLength) {\n        if (header.payloadType === payloadTypes_1.PayloadTypes.stream) {\n            this.streamManager.onReceive(header, contentStream, contentLength);\n        }\n        else {\n            if (this.activeAssemblers && this.activeAssemblers[header.id]) {\n                var assembler = this.activeAssemblers[header.id];\n                assembler.onReceive(header, contentStream, contentLength);\n            }\n            if (header.end) {\n                delete this.activeAssemblers[header.id];\n            }\n        }\n    };\n    PayloadAssemblerManager.prototype.createPayloadAssembler = function (header) {\n        if (header.payloadType === payloadTypes_1.PayloadTypes.request) {\n            return new payloadAssembler_1.PayloadAssembler(this.streamManager, { header: header, onCompleted: this.onReceiveRequest });\n        }\n        else if (header.payloadType === payloadTypes_1.PayloadTypes.response) {\n            return new payloadAssembler_1.PayloadAssembler(this.streamManager, { header: header, onCompleted: this.onReceiveResponse });\n        }\n    };\n    return PayloadAssemblerManager;\n}());\nexports.PayloadAssemblerManager = PayloadAssemblerManager;\n//# sourceMappingURL=payloadAssemblerManager.js.map"]},"metadata":{},"sourceType":"script"}