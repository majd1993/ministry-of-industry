{"ast":null,"code":"'use strict';\n\nvar copy = require('../util/copy-identifier-encoding');\n\nvar label = require('../util/label');\n\nmodule.exports = linkReference;\nvar leftSquareBracket = '[';\nvar rightSquareBracket = ']';\nvar shortcut = 'shortcut';\nvar collapsed = 'collapsed';\n\nfunction linkReference(node) {\n  var self = this;\n  var type = node.referenceType;\n  var exit = self.enterLinkReference(self, node);\n  var value = self.all(node).join('');\n  exit();\n\n  if (type === shortcut || type === collapsed) {\n    value = copy(value, node.label || node.identifier);\n  }\n\n  return leftSquareBracket + value + rightSquareBracket + label(node);\n}","map":{"version":3,"sources":["/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/remark-stringify/lib/visitors/link-reference.js"],"names":["copy","require","label","module","exports","linkReference","leftSquareBracket","rightSquareBracket","shortcut","collapsed","node","self","type","referenceType","exit","enterLinkReference","value","all","join","identifier"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,kCAAD,CAAlB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,eAAD,CAAnB;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,aAAjB;AAEA,IAAIC,iBAAiB,GAAG,GAAxB;AACA,IAAIC,kBAAkB,GAAG,GAAzB;AAEA,IAAIC,QAAQ,GAAG,UAAf;AACA,IAAIC,SAAS,GAAG,WAAhB;;AAEA,SAASJ,aAAT,CAAuBK,IAAvB,EAA6B;AAC3B,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,IAAI,GAAGF,IAAI,CAACG,aAAhB;AACA,MAAIC,IAAI,GAAGH,IAAI,CAACI,kBAAL,CAAwBJ,IAAxB,EAA8BD,IAA9B,CAAX;AACA,MAAIM,KAAK,GAAGL,IAAI,CAACM,GAAL,CAASP,IAAT,EAAeQ,IAAf,CAAoB,EAApB,CAAZ;AAEAJ,EAAAA,IAAI;;AAEJ,MAAIF,IAAI,KAAKJ,QAAT,IAAqBI,IAAI,KAAKH,SAAlC,EAA6C;AAC3CO,IAAAA,KAAK,GAAGhB,IAAI,CAACgB,KAAD,EAAQN,IAAI,CAACR,KAAL,IAAcQ,IAAI,CAACS,UAA3B,CAAZ;AACD;;AAED,SAAOb,iBAAiB,GAAGU,KAApB,GAA4BT,kBAA5B,GAAiDL,KAAK,CAACQ,IAAD,CAA7D;AACD","sourcesContent":["'use strict'\n\nvar copy = require('../util/copy-identifier-encoding')\nvar label = require('../util/label')\n\nmodule.exports = linkReference\n\nvar leftSquareBracket = '['\nvar rightSquareBracket = ']'\n\nvar shortcut = 'shortcut'\nvar collapsed = 'collapsed'\n\nfunction linkReference(node) {\n  var self = this\n  var type = node.referenceType\n  var exit = self.enterLinkReference(self, node)\n  var value = self.all(node).join('')\n\n  exit()\n\n  if (type === shortcut || type === collapsed) {\n    value = copy(value, node.label || node.identifier)\n  }\n\n  return leftSquareBracket + value + rightSquareBracket + label(node)\n}\n"]},"metadata":{},"sourceType":"script"}