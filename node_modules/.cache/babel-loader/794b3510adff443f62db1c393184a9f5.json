{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useReadTelemetryDimensions;\n\nvar _react = require(\"react\");\n\nvar _useWebChatAPIContext2 = _interopRequireDefault(require(\"./useWebChatAPIContext\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction useReadTelemetryDimensions() {\n  var _useWebChatAPIContext = (0, _useWebChatAPIContext2.default)(),\n      telemetryDimensionsRef = _useWebChatAPIContext.telemetryDimensionsRef;\n\n  return (0, _react.useCallback)(function () {\n    return _objectSpread({}, telemetryDimensionsRef.current);\n  }, [telemetryDimensionsRef]);\n}","map":{"version":3,"sources":["../../../src/hooks/internal/useReadTelemetryDimensions.js"],"names":["telemetryDimensionsRef"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,sBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,wBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAAA,0BAAA,GAAsC;AAAA,MAAA,qBAAA,GAChB,CAAA,GAAA,sBAAA,CADgB,OAChB,GADgB;AAAA,MAC3CA,sBAD2C,GAAA,qBAAA,CAAA,sBAAA;;AAGnD,SAAO,CAAA,GAAA,MAAA,CAAA,WAAA,EAAY,YAAA;AAAA,WAAA,aAAA,CAAA,EAAA,EAAYA,sBAAsB,CAAlC,OAAA,CAAA;AAAZ,GAAA,EAA2D,CAAlE,sBAAkE,CAA3D,CAAP;AACD","sourcesContent":["import { useCallback } from 'react';\n\nimport useWebChatAPIContext from './useWebChatAPIContext';\n\nexport default function useReadTelemetryDimensions() {\n  const { telemetryDimensionsRef } = useWebChatAPIContext();\n\n  return useCallback(() => ({ ...telemetryDimensionsRef.current }), [telemetryDimensionsRef]);\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}