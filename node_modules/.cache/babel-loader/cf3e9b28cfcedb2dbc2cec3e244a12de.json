{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mapMap;\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction mapMap(map, mapper) {\n  return Object.entries(map).reduce(function (result, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    result[key] = mapper(value, key);\n    return result;\n  }, {});\n}","map":{"version":3,"sources":["../../src/Utils/mapMap.js"],"names":["key","value","result","mapper"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAe,SAAA,MAAA,CAAA,GAAA,EAAA,MAAA,EAA6B;AAC1C,SAAO,MAAM,CAAN,OAAA,CAAA,GAAA,EAAA,MAAA,CAA2B,UAAA,MAAA,EAAA,IAAA,EAA0B;AAAA,QAAA,KAAA,GAAA,cAAA,CAAA,IAAA,EAAA,CAAA,CAAA;AAAA,QAAhBA,GAAgB,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,QAAXC,KAAW,GAAA,KAAA,CAAA,CAAA,CAAA;;AAC1DC,IAAAA,MAAM,CAANA,GAAM,CAANA,GAAcC,MAAM,CAAA,KAAA,EAApBD,GAAoB,CAApBA;AAEA,WAAA,MAAA;AAHK,GAAA,EAAP,EAAO,CAAP;AAKD","sourcesContent":["export default function mapMap(map, mapper) {\n  return Object.entries(map).reduce((result, [key, value]) => {\n    result[key] = mapper(value, key);\n\n    return result;\n  }, {});\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}