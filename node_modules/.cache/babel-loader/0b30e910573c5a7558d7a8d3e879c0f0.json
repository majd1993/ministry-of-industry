{"ast":null,"code":"'use strict';\n\nmodule.exports = function for_inline_plugin(md, ruleName, tokenType, iteartor) {\n  function scan(state) {\n    var i, blkIdx, inlineTokens;\n\n    for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n      if (state.tokens[blkIdx].type !== 'inline') {\n        continue;\n      }\n\n      inlineTokens = state.tokens[blkIdx].children;\n\n      for (i = inlineTokens.length - 1; i >= 0; i--) {\n        if (inlineTokens[i].type !== tokenType) {\n          continue;\n        }\n\n        iteartor(inlineTokens, i);\n      }\n    }\n  }\n\n  md.core.ruler.push(ruleName, scan);\n};","map":{"version":3,"sources":["/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/markdown-it-for-inline/index.js"],"names":["module","exports","for_inline_plugin","md","ruleName","tokenType","iteartor","scan","state","i","blkIdx","inlineTokens","tokens","length","type","children","core","ruler","push"],"mappings":"AAAA;;AAGAA,MAAM,CAACC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,EAA3B,EAA+BC,QAA/B,EAAyCC,SAAzC,EAAoDC,QAApD,EAA8D;AAE7E,WAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAIC,CAAJ,EAAOC,MAAP,EAAeC,YAAf;;AAEA,SAAKD,MAAM,GAAGF,KAAK,CAACI,MAAN,CAAaC,MAAb,GAAsB,CAApC,EAAuCH,MAAM,IAAI,CAAjD,EAAoDA,MAAM,EAA1D,EAA8D;AAC5D,UAAIF,KAAK,CAACI,MAAN,CAAaF,MAAb,EAAqBI,IAArB,KAA8B,QAAlC,EAA4C;AAC1C;AACD;;AAEDH,MAAAA,YAAY,GAAGH,KAAK,CAACI,MAAN,CAAaF,MAAb,EAAqBK,QAApC;;AAEA,WAAKN,CAAC,GAAGE,YAAY,CAACE,MAAb,GAAsB,CAA/B,EAAkCJ,CAAC,IAAI,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC7C,YAAIE,YAAY,CAACF,CAAD,CAAZ,CAAgBK,IAAhB,KAAyBT,SAA7B,EAAwC;AACtC;AACD;;AAEDC,QAAAA,QAAQ,CAACK,YAAD,EAAeF,CAAf,CAAR;AACD;AACF;AACF;;AAEDN,EAAAA,EAAE,CAACa,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBd,QAAnB,EAA6BG,IAA7B;AACD,CAvBD","sourcesContent":["'use strict';\n\n\nmodule.exports = function for_inline_plugin(md, ruleName, tokenType, iteartor) {\n\n  function scan(state) {\n    var i, blkIdx, inlineTokens;\n\n    for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n      if (state.tokens[blkIdx].type !== 'inline') {\n        continue;\n      }\n\n      inlineTokens = state.tokens[blkIdx].children;\n\n      for (i = inlineTokens.length - 1; i >= 0; i--) {\n        if (inlineTokens[i].type !== tokenType) {\n          continue;\n        }\n\n        iteartor(inlineTokens, i);\n      }\n    }\n  }\n\n  md.core.ruler.push(ruleName, scan);\n};\n"]},"metadata":{},"sourceType":"script"}