{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connectSuggestedActions = exports.default = void 0;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _reactFilm = _interopRequireWildcard(require(\"react-film\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _connectToWebChat = _interopRequireDefault(require(\"../connectToWebChat\"));\n\nvar _ScreenReaderText = _interopRequireDefault(require(\"../ScreenReaderText\"));\n\nvar _SuggestedAction = _interopRequireDefault(require(\"./SuggestedAction\"));\n\nvar _useLocalizeAccessKey = _interopRequireDefault(require(\"../hooks/internal/useLocalizeAccessKey\"));\n\nvar _useNonce3 = _interopRequireDefault(require(\"../hooks/internal/useNonce\"));\n\nvar _useStyleSet3 = _interopRequireDefault(require(\"../hooks/useStyleSet\"));\n\nvar _useStyleToEmotionObject = _interopRequireDefault(require(\"../hooks/internal/useStyleToEmotionObject\"));\n\nvar _useSuggestedActionsAccessKey = _interopRequireDefault(require(\"../hooks/internal/useSuggestedActionsAccessKey\"));\n\nvar _useUniqueId = _interopRequireDefault(require(\"../hooks/internal/useUniqueId\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useDirection = _botframeworkWebchatApi.hooks.useDirection,\n    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer,\n    useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;\nvar ROOT_STYLE = {\n  '&.webchat__suggested-actions .webchat__suggested-actions__stack': {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n};\n\nfunction suggestedActionText(_ref) {\n  var displayText = _ref.displayText,\n      title = _ref.title,\n      type = _ref.type,\n      value = _ref.value;\n\n  if (type === 'messageBack') {\n    return title || displayText;\n  } else if (title) {\n    return title;\n  } else if (typeof value === 'string') {\n    return value;\n  }\n\n  return JSON.stringify(value);\n}\n\nvar connectSuggestedActions = function connectSuggestedActions() {\n  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {\n    selectors[_key] = arguments[_key];\n  }\n\n  return _connectToWebChat.default.apply(void 0, [function (_ref2) {\n    var language = _ref2.language,\n        suggestedActions = _ref2.suggestedActions;\n    return {\n      language: language,\n      suggestedActions: suggestedActions\n    };\n  }].concat(selectors));\n};\n\nexports.connectSuggestedActions = connectSuggestedActions;\n\nvar SuggestedActions = function SuggestedActions(_ref3) {\n  var className = _ref3.className,\n      _ref3$suggestedAction = _ref3.suggestedActions,\n      suggestedActions = _ref3$suggestedAction === void 0 ? [] : _ref3$suggestedAction;\n\n  var _useStyleOptions = useStyleOptions(),\n      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),\n      _useStyleOptions2$ = _useStyleOptions2[0],\n      suggestedActionLayout = _useStyleOptions2$.suggestedActionLayout,\n      suggestedActionsCarouselFlipperBoxWidth = _useStyleOptions2$.suggestedActionsCarouselFlipperBoxWidth,\n      suggestedActionsCarouselFlipperCursor = _useStyleOptions2$.suggestedActionsCarouselFlipperCursor,\n      suggestedActionsCarouselFlipperSize = _useStyleOptions2$.suggestedActionsCarouselFlipperSize;\n\n  var _useStyleSet = (0, _useStyleSet3.default)(),\n      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),\n      suggestedActionsStyleSet = _useStyleSet2[0].suggestedActions;\n\n  var _useSuggestedActionsA = (0, _useSuggestedActionsAccessKey.default)(),\n      _useSuggestedActionsA2 = _slicedToArray(_useSuggestedActionsA, 1),\n      accessKey = _useSuggestedActionsA2[0];\n\n  var _useDirection = useDirection(),\n      _useDirection2 = _slicedToArray(_useDirection, 1),\n      direction = _useDirection2[0];\n\n  var _useNonce = (0, _useNonce3.default)(),\n      _useNonce2 = _slicedToArray(_useNonce, 1),\n      nonce = _useNonce2[0];\n\n  var ariaLabelId = (0, _useUniqueId.default)('webchat__suggested-actions');\n  var localize = useLocalizer();\n  var localizeAccessKey = (0, _useLocalizeAccessKey.default)();\n  var rootClassName = (0, _useStyleToEmotionObject.default)()(ROOT_STYLE) + '';\n  var filmStyleSet = (0, _react.useMemo)(function () {\n    return (0, _reactFilm.createBasicStyleSet)({\n      cursor: suggestedActionsCarouselFlipperCursor,\n      flipperBoxWidth: suggestedActionsCarouselFlipperBoxWidth,\n      flipperSize: suggestedActionsCarouselFlipperSize\n    });\n  }, [suggestedActionsCarouselFlipperBoxWidth, suggestedActionsCarouselFlipperCursor, suggestedActionsCarouselFlipperSize]);\n  var suggestedActionsContainerText = localize('SUGGESTED_ACTIONS_ALT', suggestedActions.length ? accessKey ? localize('SUGGESTED_ACTIONS_ALT_HAS_CONTENT_AND_ACCESS_KEY', localizeAccessKey(accessKey)) : localize('SUGGESTED_ACTIONS_ALT_HAS_CONTENT') : localize('SUGGESTED_ACTIONS_ALT_NO_CONTENT'));\n\n  if (!suggestedActions.length) {\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      \"aria-labelledby\": ariaLabelId,\n      \"aria-live\": \"polite\",\n      role: \"status\"\n    }, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {\n      id: ariaLabelId,\n      text: suggestedActionsContainerText\n    }));\n  }\n\n  var children = suggestedActions.map(function (_ref4, index) {\n    var displayText = _ref4.displayText,\n        image = _ref4.image,\n        imageAltText = _ref4.imageAltText,\n        text = _ref4.text,\n        title = _ref4.title,\n        type = _ref4.type,\n        value = _ref4.value;\n    return /*#__PURE__*/_react.default.createElement(_SuggestedAction.default, {\n      ariaHidden: true,\n      buttonText: suggestedActionText({\n        displayText: displayText,\n        title: title,\n        type: type,\n        value: value\n      }),\n      displayText: displayText,\n      image: image,\n      imageAlt: imageAltText,\n      key: index,\n      text: text,\n      type: type,\n      value: value\n    });\n  });\n\n  if (suggestedActionLayout === 'stacked') {\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      \"aria-labelledby\": ariaLabelId,\n      \"aria-live\": \"polite\",\n      className: (0, _classnames.default)('webchat__suggested-actions', rootClassName, suggestedActionsStyleSet + '', (className || '') + ''),\n      role: \"status\"\n    }, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {\n      id: ariaLabelId,\n      text: suggestedActionsContainerText\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      className: \"webchat__suggested-actions__stack\"\n    }, children));\n  }\n\n  return (\n    /*#__PURE__*/\n    // TODO: The content of suggested actions should be the labelled by the activity.\n    //       That means, when the user focus into the suggested actions, it should read similar to \"Bot said, what's your preference of today? Suggested actions has items: apple button, orange button, banana button.\"\n    _react.default.createElement(\"div\", {\n      \"aria-labelledby\": ariaLabelId,\n      \"aria-live\": \"polite\",\n      className: (0, _classnames.default)('webchat__suggested-actions', rootClassName, suggestedActionsStyleSet + '', (className || '') + ''),\n      role: \"status\"\n    }, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {\n      id: ariaLabelId,\n      text: suggestedActionsContainerText\n    }), /*#__PURE__*/_react.default.createElement(_reactFilm.default, {\n      autoCenter: false,\n      className: \"webchat__suggested-actions__carousel\",\n      dir: direction,\n      flipperBlurFocusOnClick: true,\n      nonce: nonce,\n      showDots: false,\n      showScrollBar: false,\n      styleSet: filmStyleSet\n    }, children))\n  );\n};\n\nSuggestedActions.defaultProps = {\n  className: ''\n};\nSuggestedActions.propTypes = {\n  className: _propTypes.default.string,\n  suggestedActions: _propTypes.default.arrayOf(_propTypes.default.shape({\n    displayText: _propTypes.default.string,\n    image: _propTypes.default.string,\n    imageAltText: _propTypes.default.string,\n    text: _propTypes.default.string,\n    title: _propTypes.default.string,\n    type: _propTypes.default.string.isRequired,\n    value: _propTypes.default.any\n  })).isRequired\n};\n\nvar _default = connectSuggestedActions()(SuggestedActions);\n\nexports.default = _default;","map":{"version":3,"sources":["../../src/SendBox/SuggestedActions.js"],"names":["useDirection","useLocalizer","useStyleOptions","hooks","ROOT_STYLE","display","flexDirection","displayText","title","type","value","JSON","connectSuggestedActions","selectors","language","suggestedActions","SuggestedActions","className","suggestedActionLayout","suggestedActionsCarouselFlipperBoxWidth","suggestedActionsCarouselFlipperCursor","suggestedActionsCarouselFlipperSize","suggestedActionsStyleSet","accessKey","direction","nonce","ariaLabelId","localize","localizeAccessKey","rootClassName","filmStyleSet","cursor","flipperBoxWidth","flipperSize","suggestedActionsContainerText","children","image","imageAltText","text","suggestedActionText","PropTypes","any","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAA,uBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,UAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;AACA,IAAA,qBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,wCAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,4BAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;AACA,IAAA,wBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,2CAAA,CAAA,CAAA;;AACA,IAAA,6BAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gDAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,+BAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEQA,Y,GAAgDG,uBAAAA,CAAAA,KAAAA,CAAhDH,Y;IAAcC,Y,GAAkCE,uBAAAA,CAAAA,KAAAA,CAAlCF,Y;IAAcC,e,GAAoBC,uBAAAA,CAAAA,KAAAA,CAApBD,e;AAEpC,IAAME,UAAU,GAAG;AACjB,qEAAmE;AACjEC,IAAAA,OAAO,EAD0D,MAAA;AAEjEC,IAAAA,aAAa,EAAE;AAFkD;AADlD,CAAnB;;AAOA,SAAA,mBAAA,CAAA,IAAA,EAAkE;AAAA,MAAnCC,WAAmC,GAAA,IAAA,CAAnCA,WAAmC;AAAA,MAAtBC,KAAsB,GAAA,IAAA,CAAtBA,KAAsB;AAAA,MAAfC,IAAe,GAAA,IAAA,CAAfA,IAAe;AAAA,MAATC,KAAS,GAAA,IAAA,CAATA,KAAS;;AAChE,MAAID,IAAI,KAAR,aAAA,EAA4B;AAC1B,WAAOD,KAAK,IAAZ,WAAA;AADF,GAAA,MAEO,IAAA,KAAA,EAAW;AAChB,WAAA,KAAA;AADK,GAAA,MAEA,IAAI,OAAA,KAAA,KAAJ,QAAA,EAA+B;AACpC,WAAA,KAAA;AACD;;AAED,SAAOG,IAAI,CAAJA,SAAAA,CAAP,KAAOA,CAAP;AACD;;AAED,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAA;AAAA,OAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAIC,SAAJ,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAIA,IAAAA,SAAJ,CAAA,IAAA,CAAIA,GAAJ,SAAA,CAAA,IAAA,CAAIA;AAAJ;;AAAA,SAC9B,iBAAA,CAAA,OAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CACE,UAAA,KAAA,EAAA;AAAA,QAAGC,QAAH,GAAA,KAAA,CAAA,QAAA;AAAA,QAAaC,gBAAb,GAAA,KAAA,CAAA,gBAAA;AAAA,WAAqC;AACnCD,MAAAA,QAAQ,EAD2B,QAAA;AAEnCC,MAAAA,gBAAgB,EAAhBA;AAFmC,KAArC;AADF,GAAA,EAAA,MAAA,CAD8B,SAC9B,CAAA,CAD8B;AAAhC,CAAA;;;;AASA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,KAAA,EAA0C;AAAA,MAAvCC,SAAuC,GAAA,KAAA,CAAvCA,SAAuC;AAAA,MAAA,qBAAA,GAAA,KAAA,CAA5BF,gBAA4B;AAAA,MAA5BA,gBAA4B,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAT,EAAS,GAAA,qBAAA;;AAAA,MAAA,gBAAA,GAQ7Db,eAR6D,EAAA;AAAA,MAAA,iBAAA,GAAA,cAAA,CAAA,gBAAA,EAAA,CAAA,CAAA;AAAA,MAAA,kBAAA,GAAA,iBAAA,CAAA,CAAA,CAAA;AAAA,MAG7DgB,qBAH6D,GAAA,kBAAA,CAAA,qBAAA;AAAA,MAI7DC,uCAJ6D,GAAA,kBAAA,CAAA,uCAAA;AAAA,MAK7DC,qCAL6D,GAAA,kBAAA,CAAA,qCAAA;AAAA,MAM7DC,mCAN6D,GAAA,kBAAA,CAAA,mCAAA;;AAAA,MAAA,YAAA,GASR,CAAA,GAAA,aAAA,CATQ,OASR,GATQ;AAAA,MAAA,aAAA,GAAA,cAAA,CAAA,YAAA,EAAA,CAAA,CAAA;AAAA,MAStCC,wBATsC,GAAA,aAAA,CAAA,CAAA,CAAA,CAAA,gBAAA;;AAAA,MAAA,qBAAA,GAU7C,CAAA,GAAA,6BAAA,CAV6C,OAU7C,GAV6C;AAAA,MAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA,EAAA,CAAA,CAAA;AAAA,MAU1DC,SAV0D,GAAA,sBAAA,CAAA,CAAA,CAAA;;AAAA,MAAA,aAAA,GAW7CvB,YAX6C,EAAA;AAAA,MAAA,cAAA,GAAA,cAAA,CAAA,aAAA,EAAA,CAAA,CAAA;AAAA,MAW1DwB,SAX0D,GAAA,cAAA,CAAA,CAAA,CAAA;;AAAA,MAAA,SAAA,GAYjD,CAAA,GAAA,UAAA,CAZiD,OAYjD,GAZiD;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MAY1DC,KAZ0D,GAAA,UAAA,CAAA,CAAA,CAAA;;AAajE,MAAMC,WAAW,GAAG,CAAA,GAAA,YAAA,CAAA,OAAA,EAApB,4BAAoB,CAApB;AACA,MAAMC,QAAQ,GAAG1B,YAAjB,EAAA;AACA,MAAM2B,iBAAiB,GAAG,CAAA,GAAA,qBAAA,CAA1B,OAA0B,GAA1B;AACA,MAAMC,aAAa,GAAG,CAAA,GAAA,wBAAA,CAAA,OAAA,IAAA,UAAA,IAAtB,EAAA;AACA,MAAMC,YAAY,GAAG,CAAA,GAAA,MAAA,CAAA,OAAA,EACnB,YAAA;AAAA,WACE,CAAA,GAAA,UAAA,CAAA,mBAAA,EAAgC;AAC9BC,MAAAA,MAAM,EADwB,qCAAA;AAE9BC,MAAAA,eAAe,EAFe,uCAAA;AAG9BC,MAAAA,WAAW,EAAEZ;AAHiB,KAAhC,CADF;AADmB,GAAA,EAOnB,CAAA,uCAAA,EAAA,qCAAA,EAPF,mCAOE,CAPmB,CAArB;AAcA,MAAMa,6BAA6B,GAAGP,QAAQ,CAAA,uBAAA,EAE5CZ,gBAAgB,CAAhBA,MAAAA,GACIQ,SAAS,GACPI,QAAQ,CAAA,kDAAA,EAAqDC,iBAAiB,CADvE,SACuE,CAAtE,CADD,GAEPD,QAAQ,CAHdZ,mCAGc,CAHdA,GAIIY,QAAQ,CANd,kCAMc,CANgC,CAA9C;;AASA,MAAI,CAACZ,gBAAgB,CAArB,MAAA,EAA8B;AAC5B,WAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,yBAAL,WAAA;AAAmC,mBAAnC,QAAA;AAAsD,MAAA,IAAI,EAAC;AAA3D,KAAA,EAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,iBAAA,CAAD,OAAA,EAAA;AAAkB,MAAA,EAAE,EAApB,WAAA;AAAmC,MAAA,IAAI,EAAEmB;AAAzC,KAAA,CADF,CADF;AAKD;;AAED,MAAMC,QAAQ,GAAG,gBAAgB,CAAhB,GAAA,CAAqB,UAAA,KAAA,EAAA,KAAA,EAAA;AAAA,QAAG5B,WAAH,GAAA,KAAA,CAAA,WAAA;AAAA,QAAgB6B,KAAhB,GAAA,KAAA,CAAA,KAAA;AAAA,QAAuBC,YAAvB,GAAA,KAAA,CAAA,YAAA;AAAA,QAAqCC,IAArC,GAAA,KAAA,CAAA,IAAA;AAAA,QAA2C9B,KAA3C,GAAA,KAAA,CAAA,KAAA;AAAA,QAAkDC,IAAlD,GAAA,KAAA,CAAA,IAAA;AAAA,QAAwDC,KAAxD,GAAA,KAAA,CAAA,KAAA;AAAA,WAAA,aACpC,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,gBAAA,CAAD,OAAA,EAAA;AACE,MAAA,UAAU,EADZ,IAAA;AAEE,MAAA,UAAU,EAAE6B,mBAAmB,CAAC;AAAEhC,QAAAA,WAAW,EAAb,WAAA;AAAeC,QAAAA,KAAK,EAApB,KAAA;AAAsBC,QAAAA,IAAI,EAA1B,IAAA;AAA4BC,QAAAA,KAAK,EAALA;AAA5B,OAAD,CAFjC;AAGE,MAAA,WAAW,EAHb,WAAA;AAIE,MAAA,KAAK,EAJP,KAAA;AAKE,MAAA,QAAQ,EALV,YAAA;AAME,MAAA,GAAG,EANL,KAAA;AAOE,MAAA,IAAI,EAPN,IAAA;AAQE,MAAA,IAAI,EARN,IAAA;AASE,MAAA,KAAK,EAAEA;AATT,KAAA,CADoC;AAAtC,GAAiB,CAAjB;;AAcA,MAAIQ,qBAAqB,KAAzB,SAAA,EAAyC;AACvC,WAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,yBADF,WAAA;AAEE,mBAFF,QAAA;AAGE,MAAA,SAAS,EAAE,CAAA,GAAA,WAAA,CAAA,OAAA,EAAA,4BAAA,EAAA,aAAA,EAGTI,wBAAwB,GAHf,EAAA,EAIT,CAACL,SAAS,IAAV,EAAA,IAPJ,EAGa,CAHb;AASE,MAAA,IAAI,EAAC;AATP,KAAA,EAAA,aAWE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,iBAAA,CAAD,OAAA,EAAA;AAAkB,MAAA,EAAE,EAApB,WAAA;AAAmC,MAAA,IAAI,EAAEiB;AAAzC,KAAA,CAXF,EAAA,aAYE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAC;AAAf,KAAA,EAbJ,QAaI,CAZF,CADF;AAgBD;;AAED;AAAA;AACE;AACA;AACA,IAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,yBADF,WAAA;AAEE,mBAFF,QAAA;AAGE,MAAA,SAAS,EAAE,CAAA,GAAA,WAAA,CAAA,OAAA,EAAA,4BAAA,EAAA,aAAA,EAGTZ,wBAAwB,GAHf,EAAA,EAIT,CAACL,SAAS,IAAV,EAAA,IAPJ,EAGa,CAHb;AASE,MAAA,IAAI,EAAC;AATP,KAAA,EAAA,aAWE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,iBAAA,CAAD,OAAA,EAAA;AAAkB,MAAA,EAAE,EAApB,WAAA;AAAmC,MAAA,IAAI,EAAEiB;AAAzC,KAAA,CAXF,EAAA,aAYE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,UAAA,CAAD,OAAA,EAAA;AACE,MAAA,UAAU,EADZ,KAAA;AAEE,MAAA,SAAS,EAFX,sCAAA;AAGE,MAAA,GAAG,EAHL,SAAA;AAIE,MAAA,uBAAuB,EAJzB,IAAA;AAKE,MAAA,KAAK,EALP,KAAA;AAME,MAAA,QAAQ,EANV,KAAA;AAOE,MAAA,aAAa,EAPf,KAAA;AAQE,MAAA,QAAQ,EAAEJ;AARZ,KAAA,EAZF,QAYE,CAZF;AAHF;AAjFF,CAAA;;AAgHAd,gBAAgB,CAAhBA,YAAAA,GAAgC;AAC9BC,EAAAA,SAAS,EAAE;AADmB,CAAhCD;AAIAA,gBAAgB,CAAhBA,SAAAA,GAA6B;AAC3BC,EAAAA,SAAS,EAAEuB,UAAAA,CAAAA,OAAAA,CADgB,MAAA;AAE3BzB,EAAAA,gBAAgB,EAAE,UAAA,CAAA,OAAA,CAAA,OAAA,CAChB,UAAA,CAAA,OAAA,CAAA,KAAA,CAAgB;AACdR,IAAAA,WAAW,EAAEiC,UAAAA,CAAAA,OAAAA,CADC,MAAA;AAEdJ,IAAAA,KAAK,EAAEI,UAAAA,CAAAA,OAAAA,CAFO,MAAA;AAGdH,IAAAA,YAAY,EAAEG,UAAAA,CAAAA,OAAAA,CAHA,MAAA;AAIdF,IAAAA,IAAI,EAAEE,UAAAA,CAAAA,OAAAA,CAJQ,MAAA;AAKdhC,IAAAA,KAAK,EAAEgC,UAAAA,CAAAA,OAAAA,CALO,MAAA;AAMd/B,IAAAA,IAAI,EAAE+B,UAAAA,CAAAA,OAAAA,CAAAA,MAAAA,CANQ,UAAA;AAOd9B,IAAAA,KAAK,EAAE8B,UAAAA,CAAAA,OAAAA,CAAUC;AAPH,GAAhB,CADgB,EAUhBC;AAZyB,CAA7B1B;;eAeeJ,uBAAuB,GAAA,gBAAA,C","sourcesContent":["/* eslint react/no-array-index-key: \"off\" */\n\nimport { hooks } from 'botframework-webchat-api';\nimport BasicFilm, { createBasicStyleSet as createBasicStyleSetForReactFilm } from 'react-film';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\n\nimport connectToWebChat from '../connectToWebChat';\nimport ScreenReaderText from '../ScreenReaderText';\nimport SuggestedAction from './SuggestedAction';\nimport useLocalizeAccessKey from '../hooks/internal/useLocalizeAccessKey';\nimport useNonce from '../hooks/internal/useNonce';\nimport useStyleSet from '../hooks/useStyleSet';\nimport useStyleToEmotionObject from '../hooks/internal/useStyleToEmotionObject';\nimport useSuggestedActionsAccessKey from '../hooks/internal/useSuggestedActionsAccessKey';\nimport useUniqueId from '../hooks/internal/useUniqueId';\n\nconst { useDirection, useLocalizer, useStyleOptions } = hooks;\n\nconst ROOT_STYLE = {\n  '&.webchat__suggested-actions .webchat__suggested-actions__stack': {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n};\n\nfunction suggestedActionText({ displayText, title, type, value }) {\n  if (type === 'messageBack') {\n    return title || displayText;\n  } else if (title) {\n    return title;\n  } else if (typeof value === 'string') {\n    return value;\n  }\n\n  return JSON.stringify(value);\n}\n\nconst connectSuggestedActions = (...selectors) =>\n  connectToWebChat(\n    ({ language, suggestedActions }) => ({\n      language,\n      suggestedActions\n    }),\n    ...selectors\n  );\n\nconst SuggestedActions = ({ className, suggestedActions = [] }) => {\n  const [\n    {\n      suggestedActionLayout,\n      suggestedActionsCarouselFlipperBoxWidth,\n      suggestedActionsCarouselFlipperCursor,\n      suggestedActionsCarouselFlipperSize\n    }\n  ] = useStyleOptions();\n  const [{ suggestedActions: suggestedActionsStyleSet }] = useStyleSet();\n  const [accessKey] = useSuggestedActionsAccessKey();\n  const [direction] = useDirection();\n  const [nonce] = useNonce();\n  const ariaLabelId = useUniqueId('webchat__suggested-actions');\n  const localize = useLocalizer();\n  const localizeAccessKey = useLocalizeAccessKey();\n  const rootClassName = useStyleToEmotionObject()(ROOT_STYLE) + '';\n  const filmStyleSet = useMemo(\n    () =>\n      createBasicStyleSetForReactFilm({\n        cursor: suggestedActionsCarouselFlipperCursor,\n        flipperBoxWidth: suggestedActionsCarouselFlipperBoxWidth,\n        flipperSize: suggestedActionsCarouselFlipperSize\n      }),\n    [\n      suggestedActionsCarouselFlipperBoxWidth,\n      suggestedActionsCarouselFlipperCursor,\n      suggestedActionsCarouselFlipperSize\n    ]\n  );\n\n  const suggestedActionsContainerText = localize(\n    'SUGGESTED_ACTIONS_ALT',\n    suggestedActions.length\n      ? accessKey\n        ? localize('SUGGESTED_ACTIONS_ALT_HAS_CONTENT_AND_ACCESS_KEY', localizeAccessKey(accessKey))\n        : localize('SUGGESTED_ACTIONS_ALT_HAS_CONTENT')\n      : localize('SUGGESTED_ACTIONS_ALT_NO_CONTENT')\n  );\n\n  if (!suggestedActions.length) {\n    return (\n      <div aria-labelledby={ariaLabelId} aria-live=\"polite\" role=\"status\">\n        <ScreenReaderText id={ariaLabelId} text={suggestedActionsContainerText} />\n      </div>\n    );\n  }\n\n  const children = suggestedActions.map(({ displayText, image, imageAltText, text, title, type, value }, index) => (\n    <SuggestedAction\n      ariaHidden={true}\n      buttonText={suggestedActionText({ displayText, title, type, value })}\n      displayText={displayText}\n      image={image}\n      imageAlt={imageAltText}\n      key={index}\n      text={text}\n      type={type}\n      value={value}\n    />\n  ));\n\n  if (suggestedActionLayout === 'stacked') {\n    return (\n      <div\n        aria-labelledby={ariaLabelId}\n        aria-live=\"polite\"\n        className={classNames(\n          'webchat__suggested-actions',\n          rootClassName,\n          suggestedActionsStyleSet + '',\n          (className || '') + ''\n        )}\n        role=\"status\"\n      >\n        <ScreenReaderText id={ariaLabelId} text={suggestedActionsContainerText} />\n        <div className=\"webchat__suggested-actions__stack\">{children}</div>\n      </div>\n    );\n  }\n\n  return (\n    // TODO: The content of suggested actions should be the labelled by the activity.\n    //       That means, when the user focus into the suggested actions, it should read similar to \"Bot said, what's your preference of today? Suggested actions has items: apple button, orange button, banana button.\"\n    <div\n      aria-labelledby={ariaLabelId}\n      aria-live=\"polite\"\n      className={classNames(\n        'webchat__suggested-actions',\n        rootClassName,\n        suggestedActionsStyleSet + '',\n        (className || '') + ''\n      )}\n      role=\"status\"\n    >\n      <ScreenReaderText id={ariaLabelId} text={suggestedActionsContainerText} />\n      <BasicFilm\n        autoCenter={false}\n        className=\"webchat__suggested-actions__carousel\"\n        dir={direction}\n        flipperBlurFocusOnClick={true}\n        nonce={nonce}\n        showDots={false}\n        showScrollBar={false}\n        styleSet={filmStyleSet}\n      >\n        {children}\n      </BasicFilm>\n    </div>\n  );\n};\n\nSuggestedActions.defaultProps = {\n  className: ''\n};\n\nSuggestedActions.propTypes = {\n  className: PropTypes.string,\n  suggestedActions: PropTypes.arrayOf(\n    PropTypes.shape({\n      displayText: PropTypes.string,\n      image: PropTypes.string,\n      imageAltText: PropTypes.string,\n      text: PropTypes.string,\n      title: PropTypes.string,\n      type: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })\n  ).isRequired\n};\n\nexport default connectSuggestedActions()(SuggestedActions);\n\nexport { connectSuggestedActions };\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}