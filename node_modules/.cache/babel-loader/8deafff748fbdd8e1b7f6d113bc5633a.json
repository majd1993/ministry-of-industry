{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/**\n * An abstract base class that defines callback methods (read() and close()) for\n * custom audio input streams).\n * @class PullAudioInputStreamCallback\n */\n\nvar PullAudioInputStreamCallback =\n/** @class */\nfunction () {\n  function PullAudioInputStreamCallback() {}\n\n  return PullAudioInputStreamCallback;\n}();\n\nexports.PullAudioInputStreamCallback = PullAudioInputStreamCallback;","map":{"version":3,"sources":["src/sdk/Audio/PullAudioInputStreamCallback.ts"],"names":[],"mappings":";;;;IAAA;AACA;;AACC;;;;AAIG;;AACJ,IAAA,4BAAA;AAAA;AAAA,YAAA;AAAA,WAAA,4BAAA,GAAA,CAoBC;;AAAD,SAAA,4BAAA;AAAC,CApBD,EAAA;;AAAsB,OAAA,CAAA,4BAAA,GAAA,4BAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n /**\r\n  * An abstract base class that defines callback methods (read() and close()) for\r\n  * custom audio input streams).\r\n  * @class PullAudioInputStreamCallback\r\n  */\r\nexport abstract class PullAudioInputStreamCallback {\r\n\r\n    /**\r\n     * Reads data from audio input stream into the data buffer. The maximal number of bytes\r\n     * to be read is determined by the size of dataBuffer.\r\n     * @member PullAudioInputStreamCallback.prototype.read\r\n     * @function\r\n     * @public\r\n     * @param {ArrayBuffer} dataBuffer - The byte array to store the read data.\r\n     * @returns {number} the number of bytes have been read.\r\n     */\r\n    public abstract read(dataBuffer: ArrayBuffer): number;\r\n\r\n    /**\r\n     * Closes the audio input stream.\r\n     * @member PullAudioInputStreamCallback.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public abstract close(): void;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}