{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _useStyleSet3 = _interopRequireDefault(require(\"../hooks/useStyleSet\"));\n\nvar _useStyleToEmotionObject = _interopRequireDefault(require(\"../hooks/internal/useStyleToEmotionObject\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useAvatarForBot = _botframeworkWebchatApi.hooks.useAvatarForBot,\n    useAvatarForUser = _botframeworkWebchatApi.hooks.useAvatarForUser;\nvar ROOT_STYLE = {\n  alignItems: 'center',\n  display: 'flex',\n  '& .webchat__initialsAvatar__initials': {\n    justifyContent: 'center'\n  }\n};\n\nvar InitialsAvatar = function InitialsAvatar(_ref) {\n  var fromUser = _ref.fromUser;\n\n  var _useAvatarForBot = useAvatarForBot(),\n      _useAvatarForBot2 = _slicedToArray(_useAvatarForBot, 1),\n      avatarInitialsForBot = _useAvatarForBot2[0].initials;\n\n  var _useAvatarForUser = useAvatarForUser(),\n      _useAvatarForUser2 = _slicedToArray(_useAvatarForUser, 1),\n      avatarInitialsForUser = _useAvatarForUser2[0].initials;\n\n  var _useStyleSet = (0, _useStyleSet3.default)(),\n      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),\n      initialsAvatarStyleSet = _useStyleSet2[0].initialsAvatar;\n\n  var rootClassName = (0, _useStyleToEmotionObject.default)()(ROOT_STYLE) + '';\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: (0, _classnames.default)('webchat__initialsAvatar', {\n      'webchat__initialsAvatar--fromUser': fromUser\n    }, rootClassName, initialsAvatarStyleSet + '')\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__initialsAvatar__initials\"\n  }, fromUser ? avatarInitialsForUser : avatarInitialsForBot));\n};\n\nInitialsAvatar.defaultProps = {\n  fromUser: false\n};\nInitialsAvatar.propTypes = {\n  fromUser: _propTypes.default.bool\n};\nvar _default = InitialsAvatar;\nexports.default = _default;","map":{"version":3,"sources":["../../src/Avatar/InitialsAvatar.js"],"names":["useAvatarForBot","useAvatarForUser","hooks","ROOT_STYLE","alignItems","display","justifyContent","InitialsAvatar","fromUser","avatarInitialsForBot","avatarInitialsForUser","initialsAvatarStyleSet","rootClassName","PropTypes","bool"],"mappings":";;;;;;;AAAA,IAAA,uBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;AACA,IAAA,wBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,2CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEQA,e,GAAsCE,uBAAAA,CAAAA,KAAAA,CAAtCF,e;IAAiBC,gB,GAAqBC,uBAAAA,CAAAA,KAAAA,CAArBD,gB;AAEzB,IAAME,UAAU,GAAG;AACjBC,EAAAA,UAAU,EADO,QAAA;AAEjBC,EAAAA,OAAO,EAFU,MAAA;AAIjB,0CAAwC;AACtCC,IAAAA,cAAc,EAAE;AADsB;AAJvB,CAAnB;;AASA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAA,IAAA,EAAkB;AAAA,MAAfC,QAAe,GAAA,IAAA,CAAfA,QAAe;;AAAA,MAAA,gBAAA,GACMR,eADN,EAAA;AAAA,MAAA,iBAAA,GAAA,cAAA,CAAA,gBAAA,EAAA,CAAA,CAAA;AAAA,MACpBS,oBADoB,GAAA,iBAAA,CAAA,CAAA,CAAA,CAAA,QAAA;;AAAA,MAAA,iBAAA,GAEOR,gBAFP,EAAA;AAAA,MAAA,kBAAA,GAAA,cAAA,CAAA,iBAAA,EAAA,CAAA,CAAA;AAAA,MAEpBS,qBAFoB,GAAA,kBAAA,CAAA,CAAA,CAAA,CAAA,QAAA;;AAAA,MAAA,YAAA,GAGc,CAAA,GAAA,aAAA,CAHd,OAGc,GAHd;AAAA,MAAA,aAAA,GAAA,cAAA,CAAA,YAAA,EAAA,CAAA,CAAA;AAAA,MAGdC,sBAHc,GAAA,aAAA,CAAA,CAAA,CAAA,CAAA,cAAA;;AAIvC,MAAMC,aAAa,GAAG,CAAA,GAAA,wBAAA,CAAA,OAAA,IAAA,UAAA,IAAtB,EAAA;AAEA,SAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAE,CAAA,GAAA,WAAA,CAAA,OAAA,EAAA,yBAAA,EAET;AACE,2CAAqCJ;AADvC,KAFS,EAAA,aAAA,EAMTG,sBAAsB,GANb,EAAA;AADb,GAAA,EAAA,aAUE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAoDH,QAAQ,GAAA,qBAAA,GAXhE,oBAWI,CAVF,CADF;AANF,CAAA;;AAsBAD,cAAc,CAAdA,YAAAA,GAA8B;AAC5BC,EAAAA,QAAQ,EAAE;AADkB,CAA9BD;AAIAA,cAAc,CAAdA,SAAAA,GAA2B;AACzBC,EAAAA,QAAQ,EAAEK,UAAAA,CAAAA,OAAAA,CAAUC;AADK,CAA3BP;eAIeA,c","sourcesContent":["import { hooks } from 'botframework-webchat-api';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport useStyleSet from '../hooks/useStyleSet';\nimport useStyleToEmotionObject from '../hooks/internal/useStyleToEmotionObject';\n\nconst { useAvatarForBot, useAvatarForUser } = hooks;\n\nconst ROOT_STYLE = {\n  alignItems: 'center',\n  display: 'flex',\n\n  '& .webchat__initialsAvatar__initials': {\n    justifyContent: 'center'\n  }\n};\n\nconst InitialsAvatar = ({ fromUser }) => {\n  const [{ initials: avatarInitialsForBot }] = useAvatarForBot();\n  const [{ initials: avatarInitialsForUser }] = useAvatarForUser();\n  const [{ initialsAvatar: initialsAvatarStyleSet }] = useStyleSet();\n  const rootClassName = useStyleToEmotionObject()(ROOT_STYLE) + '';\n\n  return (\n    <div\n      className={classNames(\n        'webchat__initialsAvatar',\n        {\n          'webchat__initialsAvatar--fromUser': fromUser\n        },\n        rootClassName,\n        initialsAvatarStyleSet + ''\n      )}\n    >\n      <div className=\"webchat__initialsAvatar__initials\">{fromUser ? avatarInitialsForUser : avatarInitialsForBot}</div>\n    </div>\n  );\n};\n\nInitialsAvatar.defaultProps = {\n  fromUser: false\n};\n\nInitialsAvatar.propTypes = {\n  fromUser: PropTypes.bool\n};\n\nexport default InitialsAvatar;\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}