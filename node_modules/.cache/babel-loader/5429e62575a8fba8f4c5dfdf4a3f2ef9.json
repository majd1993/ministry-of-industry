{"ast":null,"code":"'use strict';\n\nvar count = require('ccount');\n\nmodule.exports = enclose;\nvar leftParenthesis = '(';\nvar rightParenthesis = ')';\nvar lessThan = '<';\nvar greaterThan = '>';\nvar expression = /\\s/; // Wrap `url` in angle brackets when needed, or when\n// forced.\n// In links, images, and definitions, the URL part needs\n// to be enclosed when it:\n//\n// - has a length of `0`\n// - contains white-space\n// - has more or less opening than closing parentheses\n\nfunction enclose(uri, always) {\n  if (always || uri.length === 0 || expression.test(uri) || count(uri, leftParenthesis) !== count(uri, rightParenthesis)) {\n    return lessThan + uri + greaterThan;\n  }\n\n  return uri;\n}","map":{"version":3,"sources":["/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/remark-stringify/lib/util/enclose-uri.js"],"names":["count","require","module","exports","enclose","leftParenthesis","rightParenthesis","lessThan","greaterThan","expression","uri","always","length","test"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AAEA,IAAIC,eAAe,GAAG,GAAtB;AACA,IAAIC,gBAAgB,GAAG,GAAvB;AACA,IAAIC,QAAQ,GAAG,GAAf;AACA,IAAIC,WAAW,GAAG,GAAlB;AAEA,IAAIC,UAAU,GAAG,IAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASL,OAAT,CAAiBM,GAAjB,EAAsBC,MAAtB,EAA8B;AAC5B,MACEA,MAAM,IACND,GAAG,CAACE,MAAJ,KAAe,CADf,IAEAH,UAAU,CAACI,IAAX,CAAgBH,GAAhB,CAFA,IAGAV,KAAK,CAACU,GAAD,EAAML,eAAN,CAAL,KAAgCL,KAAK,CAACU,GAAD,EAAMJ,gBAAN,CAJvC,EAKE;AACA,WAAOC,QAAQ,GAAGG,GAAX,GAAiBF,WAAxB;AACD;;AAED,SAAOE,GAAP;AACD","sourcesContent":["'use strict'\n\nvar count = require('ccount')\n\nmodule.exports = enclose\n\nvar leftParenthesis = '('\nvar rightParenthesis = ')'\nvar lessThan = '<'\nvar greaterThan = '>'\n\nvar expression = /\\s/\n\n// Wrap `url` in angle brackets when needed, or when\n// forced.\n// In links, images, and definitions, the URL part needs\n// to be enclosed when it:\n//\n// - has a length of `0`\n// - contains white-space\n// - has more or less opening than closing parentheses\nfunction enclose(uri, always) {\n  if (\n    always ||\n    uri.length === 0 ||\n    expression.test(uri) ||\n    count(uri, leftParenthesis) !== count(uri, rightParenthesis)\n  ) {\n    return lessThan + uri + greaterThan\n  }\n\n  return uri\n}\n"]},"metadata":{},"sourceType":"script"}