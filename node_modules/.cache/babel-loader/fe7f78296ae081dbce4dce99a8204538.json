{"ast":null,"code":"'use strict';\n\nvar repeat = require('repeat-string');\n\nmodule.exports = heading;\nvar lineFeed = '\\n';\nvar space = ' ';\nvar numberSign = '#';\nvar dash = '-';\nvar equalsTo = '='; // Stringify a heading.\n//\n// In `setext: true` mode and when `depth` is smaller than three, creates a\n// setext header:\n//\n// ```markdown\n// Foo\n// ===\n// ```\n//\n// Otherwise, an ATX header is generated:\n//\n// ```markdown\n// ### Foo\n// ```\n//\n// In `closeAtx: true` mode, the header is closed with hashes:\n//\n// ```markdown\n// ### Foo ###\n// ```\n\nfunction heading(node) {\n  var self = this;\n  var depth = node.depth;\n  var setext = self.options.setext;\n  var closeAtx = self.options.closeAtx;\n  var content = self.all(node).join('');\n  var prefix;\n\n  if (setext && depth < 3) {\n    return content + lineFeed + repeat(depth === 1 ? equalsTo : dash, content.length);\n  }\n\n  prefix = repeat(numberSign, node.depth);\n  return prefix + space + content + (closeAtx ? space + prefix : '');\n}","map":{"version":3,"sources":["/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/remark-stringify/lib/visitors/heading.js"],"names":["repeat","require","module","exports","heading","lineFeed","space","numberSign","dash","equalsTo","node","self","depth","setext","options","closeAtx","content","all","join","prefix","length"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AAEA,IAAIC,QAAQ,GAAG,IAAf;AACA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,UAAU,GAAG,GAAjB;AACA,IAAIC,IAAI,GAAG,GAAX;AACA,IAAIC,QAAQ,GAAG,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASL,OAAT,CAAiBM,IAAjB,EAAuB;AACrB,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;AACA,MAAIC,MAAM,GAAGF,IAAI,CAACG,OAAL,CAAaD,MAA1B;AACA,MAAIE,QAAQ,GAAGJ,IAAI,CAACG,OAAL,CAAaC,QAA5B;AACA,MAAIC,OAAO,GAAGL,IAAI,CAACM,GAAL,CAASP,IAAT,EAAeQ,IAAf,CAAoB,EAApB,CAAd;AACA,MAAIC,MAAJ;;AAEA,MAAIN,MAAM,IAAID,KAAK,GAAG,CAAtB,EAAyB;AACvB,WACEI,OAAO,GAAGX,QAAV,GAAqBL,MAAM,CAACY,KAAK,KAAK,CAAV,GAAcH,QAAd,GAAyBD,IAA1B,EAAgCQ,OAAO,CAACI,MAAxC,CAD7B;AAGD;;AAEDD,EAAAA,MAAM,GAAGnB,MAAM,CAACO,UAAD,EAAaG,IAAI,CAACE,KAAlB,CAAf;AAEA,SAAOO,MAAM,GAAGb,KAAT,GAAiBU,OAAjB,IAA4BD,QAAQ,GAAGT,KAAK,GAAGa,MAAX,GAAoB,EAAxD,CAAP;AACD","sourcesContent":["'use strict'\n\nvar repeat = require('repeat-string')\n\nmodule.exports = heading\n\nvar lineFeed = '\\n'\nvar space = ' '\nvar numberSign = '#'\nvar dash = '-'\nvar equalsTo = '='\n\n// Stringify a heading.\n//\n// In `setext: true` mode and when `depth` is smaller than three, creates a\n// setext header:\n//\n// ```markdown\n// Foo\n// ===\n// ```\n//\n// Otherwise, an ATX header is generated:\n//\n// ```markdown\n// ### Foo\n// ```\n//\n// In `closeAtx: true` mode, the header is closed with hashes:\n//\n// ```markdown\n// ### Foo ###\n// ```\nfunction heading(node) {\n  var self = this\n  var depth = node.depth\n  var setext = self.options.setext\n  var closeAtx = self.options.closeAtx\n  var content = self.all(node).join('')\n  var prefix\n\n  if (setext && depth < 3) {\n    return (\n      content + lineFeed + repeat(depth === 1 ? equalsTo : dash, content.length)\n    )\n  }\n\n  prefix = repeat(numberSign, node.depth)\n\n  return prefix + space + content + (closeAtx ? space + prefix : '')\n}\n"]},"metadata":{},"sourceType":"script"}