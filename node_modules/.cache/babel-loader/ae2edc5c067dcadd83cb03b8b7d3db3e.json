{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useTypingIndicatorVisible = useTypingIndicatorVisible;\nexports.default = void 0;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useActiveTyping = _botframeworkWebchatApi.hooks.useActiveTyping,\n    useRenderTypingIndicator = _botframeworkWebchatApi.hooks.useRenderTypingIndicator;\n\nfunction useTypingIndicatorVisible() {\n  var _useActiveTyping = useActiveTyping(),\n      _useActiveTyping2 = _slicedToArray(_useActiveTyping, 1),\n      activeTyping = _useActiveTyping2[0];\n\n  return [!!Object.values(activeTyping).filter(function (_ref) {\n    var role = _ref.role;\n    return role !== 'user';\n  }).length];\n}\n\nvar BasicTypingIndicator = function BasicTypingIndicator() {\n  var _useActiveTyping3 = useActiveTyping(),\n      _useActiveTyping4 = _slicedToArray(_useActiveTyping3, 1),\n      activeTyping = _useActiveTyping4[0];\n\n  var _useTypingIndicatorVi = useTypingIndicatorVisible(),\n      _useTypingIndicatorVi2 = _slicedToArray(_useTypingIndicatorVi, 1),\n      visible = _useTypingIndicatorVi2[0];\n\n  var _useActiveTyping5 = useActiveTyping(Infinity),\n      _useActiveTyping6 = _slicedToArray(_useActiveTyping5, 1),\n      typing = _useActiveTyping6[0];\n\n  var renderTypingIndicator = useRenderTypingIndicator();\n  return renderTypingIndicator({\n    activeTyping: activeTyping,\n    typing: typing,\n    visible: visible\n  });\n};\n\nvar _default = BasicTypingIndicator;\nexports.default = _default;","map":{"version":3,"sources":["../src/BasicTypingIndicator.js"],"names":["useActiveTyping","useRenderTypingIndicator","hooks","activeTyping","role","BasicTypingIndicator","visible","useTypingIndicatorVisible","typing","renderTypingIndicator"],"mappings":";;;;;;;;AAAA,IAAA,uBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEQA,e,GAA8CE,uBAAAA,CAAAA,KAAAA,CAA9CF,e;IAAiBC,wB,GAA6BC,uBAAAA,CAAAA,KAAAA,CAA7BD,wB;;AAEzB,SAAA,yBAAA,GAAqC;AAAA,MAAA,gBAAA,GACZD,eADY,EAAA;AAAA,MAAA,iBAAA,GAAA,cAAA,CAAA,gBAAA,EAAA,CAAA,CAAA;AAAA,MAC5BG,YAD4B,GAAA,iBAAA,CAAA,CAAA,CAAA;;AAGnC,SAAO,CAAC,CAAC,CAAC,MAAM,CAAN,MAAA,CAAA,YAAA,EAAA,MAAA,CAAmC,UAAA,IAAA,EAAA;AAAA,QAAGC,IAAH,GAAA,IAAA,CAAA,IAAA;AAAA,WAAcA,IAAI,KAAlB,MAAA;AAAnC,GAAA,EAAV,MAAO,CAAP;AACD;;AAED,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAAA,MAAA,iBAAA,GACVL,eADU,EAAA;AAAA,MAAA,iBAAA,GAAA,cAAA,CAAA,iBAAA,EAAA,CAAA,CAAA;AAAA,MAC1BG,YAD0B,GAAA,iBAAA,CAAA,CAAA,CAAA;;AAAA,MAAA,qBAAA,GAEfI,yBAFe,EAAA;AAAA,MAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA,EAAA,CAAA,CAAA;AAAA,MAE1BD,OAF0B,GAAA,sBAAA,CAAA,CAAA,CAAA;;AAAA,MAAA,iBAAA,GAGhBN,eAAe,CAHC,QAGD,CAHC;AAAA,MAAA,iBAAA,GAAA,cAAA,CAAA,iBAAA,EAAA,CAAA,CAAA;AAAA,MAG1BQ,MAH0B,GAAA,iBAAA,CAAA,CAAA,CAAA;;AAIjC,MAAMC,qBAAqB,GAAGR,wBAA9B,EAAA;AAEA,SAAOQ,qBAAqB,CAAC;AAAEN,IAAAA,YAAY,EAAd,YAAA;AAAgBK,IAAAA,MAAM,EAAtB,MAAA;AAAwBF,IAAAA,OAAO,EAAPA;AAAxB,GAAD,CAA5B;AANF,CAAA;;eASeD,oB","sourcesContent":["import { hooks } from 'botframework-webchat-api';\n\nconst { useActiveTyping, useRenderTypingIndicator } = hooks;\n\nfunction useTypingIndicatorVisible() {\n  const [activeTyping] = useActiveTyping();\n\n  return [!!Object.values(activeTyping).filter(({ role }) => role !== 'user').length];\n}\n\nconst BasicTypingIndicator = () => {\n  const [activeTyping] = useActiveTyping();\n  const [visible] = useTypingIndicatorVisible();\n  const [typing] = useActiveTyping(Infinity);\n  const renderTypingIndicator = useRenderTypingIndicator();\n\n  return renderTypingIndicator({ activeTyping, typing, visible });\n};\n\nexport default BasicTypingIndicator;\n\nexport { useTypingIndicatorVisible };\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}