{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ScreenReaderText = _interopRequireDefault(require(\"./ScreenReaderText\"));\n\nvar _useStyleSet3 = _interopRequireDefault(require(\"./hooks/useStyleSet\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer;\n\nvar ErrorBox = function ErrorBox(_ref) {\n  var error = _ref.error,\n      type = _ref.type;\n\n  var _useStyleSet = (0, _useStyleSet3.default)(),\n      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),\n      errorBoxStyleSet = _useStyleSet2[0].errorBox;\n\n  var localize = useLocalizer();\n  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {\n    text: localize('ACTIVITY_ERROR_BOX_TITLE')\n  }), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: errorBoxStyleSet\n  }, /*#__PURE__*/_react.default.createElement(\"div\", null, type), /*#__PURE__*/_react.default.createElement(\"details\", null, /*#__PURE__*/_react.default.createElement(\"summary\", null, error.message), /*#__PURE__*/_react.default.createElement(\"pre\", null, error.stack))));\n};\n\nErrorBox.defaultProps = {\n  children: undefined,\n  error: undefined,\n  type: ''\n};\nErrorBox.propTypes = {\n  children: _propTypes.default.any,\n  error: _propTypes.default.instanceOf(Error).isRequired,\n  type: _propTypes.default.string\n};\nvar _default = ErrorBox;\nexports.default = _default;","map":{"version":3,"sources":["../src/ErrorBox.js"],"names":["useLocalizer","hooks","ErrorBox","error","type","errorBoxStyleSet","localize","children","PropTypes","string"],"mappings":";;;;;;;AAEA,IAAA,uBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEQA,Y,GAAiBC,uBAAAA,CAAAA,KAAAA,CAAjBD,Y;;AAER,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAA,IAAA,EAAqB;AAAA,MAAlBC,KAAkB,GAAA,IAAA,CAAlBA,KAAkB;AAAA,MAAXC,IAAW,GAAA,IAAA,CAAXA,IAAW;;AAAA,MAAA,YAAA,GACK,CAAA,GAAA,aAAA,CADL,OACK,GADL;AAAA,MAAA,aAAA,GAAA,cAAA,CAAA,YAAA,EAAA,CAAA,CAAA;AAAA,MACjBC,gBADiB,GAAA,aAAA,CAAA,CAAA,CAAA,CAAA,QAAA;;AAEpC,MAAMC,QAAQ,GAAGN,YAAjB,EAAA;AAEA,SAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,MAAA,CAAD,OAAC,CAAD,QAAA,EAAA,IAAA,EAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,iBAAA,CAAD,OAAA,EAAA;AAAkB,IAAA,IAAI,EAAEM,QAAQ,CAAA,0BAAA;AAAhC,GAAA,CADF,EAAA,aAEE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAED;AAAhB,GAAA,EAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EADF,IACE,CADF,EAAA,aAGE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,SAAA,EAAA,IAAA,EAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,SAAA,EAAA,IAAA,EAAUF,KAAK,CADjB,OACE,CADF,EAAA,aAEE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAMA,KAAK,CARnB,KAQQ,CAFF,CAHF,CAFF,CADF;AAJF,CAAA;;AAmBAD,QAAQ,CAARA,YAAAA,GAAwB;AACtBK,EAAAA,QAAQ,EADc,SAAA;AAEtBJ,EAAAA,KAAK,EAFiB,SAAA;AAGtBC,EAAAA,IAAI,EAAE;AAHgB,CAAxBF;AAMAA,QAAQ,CAARA,SAAAA,GAAqB;AACnBK,EAAAA,QAAQ,EAAEC,UAAAA,CAAAA,OAAAA,CADS,GAAA;AAEnBL,EAAAA,KAAK,EAAEK,UAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAAA,KAAAA,EAFY,UAAA;AAGnBJ,EAAAA,IAAI,EAAEI,UAAAA,CAAAA,OAAAA,CAAUC;AAHG,CAArBP;eAMeA,Q","sourcesContent":["/* eslint no-console: \"off\" */\n\nimport { hooks } from 'botframework-webchat-api';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport ScreenReaderText from './ScreenReaderText';\nimport useStyleSet from './hooks/useStyleSet';\n\nconst { useLocalizer } = hooks;\n\nconst ErrorBox = ({ error, type }) => {\n  const [{ errorBox: errorBoxStyleSet }] = useStyleSet();\n  const localize = useLocalizer();\n\n  return (\n    <React.Fragment>\n      <ScreenReaderText text={localize('ACTIVITY_ERROR_BOX_TITLE')} />\n      <div className={errorBoxStyleSet}>\n        <div>{type}</div>\n        {/* The callstack between production and development are different, thus, we should hide it for visual regression test */}\n        <details>\n          <summary>{error.message}</summary>\n          <pre>{error.stack}</pre>\n        </details>\n      </div>\n    </React.Fragment>\n  );\n};\n\nErrorBox.defaultProps = {\n  children: undefined,\n  error: undefined,\n  type: ''\n};\n\nErrorBox.propTypes = {\n  children: PropTypes.any,\n  error: PropTypes.instanceOf(Error).isRequired,\n  type: PropTypes.string\n};\n\nexport default ErrorBox;\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}