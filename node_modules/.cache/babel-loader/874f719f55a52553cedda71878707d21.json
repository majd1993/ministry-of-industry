{"ast":null,"code":"import _regeneratorRuntime from \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/src/MinimizableWebChat.js\",\n    _s = $RefreshSig$();\n\nimport classNames from 'classnames';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { createStore, createStyleSet } from 'botframework-webchat';\nimport WebChat from './WebChat';\nimport './fabric-icons-inline.css';\nimport './MinimizableWebChat.css';\n\nvar MinimizableWebChat = function MinimizableWebChat(props) {\n  _s();\n\n  var store = useMemo(function () {\n    return createStore({}, function (_ref) {\n      var dispatch = _ref.dispatch;\n      return function (next) {\n        return function (action) {\n          if (action.type === 'DIRECT_LINE/CONNECT_FULFILLED') {\n            dispatch({\n              type: 'WEB_CHAT/SEND_EVENT',\n              payload: {\n                name: 'webchat/join',\n                value: {\n                  language: window.navigator.language\n                }\n              }\n            });\n          } else if (action.type === 'DIRECT_LINE/INCOMING_ACTIVITY') {\n            if (action.payload.activity.from.role === 'bot') {\n              setNewMessage(true);\n            }\n          }\n\n          return next(action);\n        };\n      };\n    });\n  }, []);\n  var styleSet = useMemo(function () {\n    return createStyleSet({\n      backgroundColor: 'Transparent'\n    });\n  }, []);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      minimized = _useState4[0],\n      setMinimized = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newMessage = _useState6[0],\n      setNewMessage = _useState6[1];\n\n  var _useState7 = useState('right'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      side = _useState8[0],\n      setSide = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      token = _useState10[0],\n      setToken = _useState10[1]; // To learn about reconnecting to a conversation, see the following documentation:\n  // https://docs.microsoft.com/en-us/azure/bot-service/rest-api/bot-framework-rest-direct-line-3-0-reconnect-to-conversation?view=azure-bot-service-4.0\n\n\n  var handleFetchToken = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, _token;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (token) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 3;\n            return fetch('https://webchat.botframework.com/api/tokens', {\n              method: 'GET',\n              headers: {\n                'Authorization': 'BotConnector y9fwHmxuNj0.eF11NQzywccCKhSCk-5zJDsn-YtYlRkqoZ6iZ4Nf7js' //signup\n                //'Authorization': 'BotConnector CGxDt2v_6B4.mYfZwJxDayYUyID046_L3UiinqgOFSkvdhoU-Wn4I7s'   //login \n\n              }\n            });\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.text();\n\n          case 6:\n            _token = _context.sent;\n            //console.log(\"roula\")\n            //console.log(token)\n            // token =\"ew0KICAiYWxnIjogIlJTMjU2IiwNCiAgImtpZCI6ICJsY0oxTXFpNkdKYXdCZEw5Y0dieEt5S1R6OE0iLA0KICAieDV0IjogImxjSjFNcWk2R0phd0JkTDljR2J4S3lLVHo4TSIsDQogICJ0eXAiOiAiSldUIg0KfQ.ew0KICAiYm90IjogIkUtQ291bmNpbEhSIiwNCiAgInNpdGUiOiAiWXVnTDlnb3A4WmsiLA0KICAiY29udiI6ICJJTnExemJBVllTQUM1QzVHQVJuaHBNLWEiLA0KICAibmJmIjogMTYxMzU2MDgyMSwNCiAgImV4cCI6IDE2MTM1NjQ0MjEsDQogICJpc3MiOiAiaHR0cHM6Ly93ZWJjaGF0LmJvdGZyYW1ld29yay5jb20vIiwNCiAgImF1ZCI6ICJodHRwczovL3dlYmNoYXQuYm90ZnJhbWV3b3JrLmNvbS8iDQp9.zRjR7eP_7lMg77fafDYcC0EaWQHQ_Yr9Jvia5oEm5c972_GvQyS6MZYOJuGGl6yykIGPVEhvvSpwjEDQwowiJnBPe-MJO8XHGjq5PJne099QU_UFi4FKvKeCWEKgvBQkq3e9rfXCNBkLy76w_2UpnyPmzPjvrnMCn_59KrQwrODZyK9UZN28ciZ8g7kmM6JrvTMcRqKu7vfzyLT0wl_gvjznVzo6aj60TWiKUsTJMM7TUFAdVorJnfpOq-S4MDBr1l2RII51ZqYmjMTo9AGK45iABEbRQHYFD-cdEr75cc7qcuY3k-iXQOtWIc939lrrh8axJKo_B48pxNi2ikndEg\"\n            setToken(_token.substring(1, _token.length - 1));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [setToken, token]);\n  var handleMaximizeButtonClick = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setLoaded(true);\n            setMinimized(false);\n            setNewMessage(false);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [setMinimized, setNewMessage]);\n  var handleMinimizeButtonClick = useCallback(function () {\n    setMinimized(true);\n    setNewMessage(false);\n  }, [setMinimized, setNewMessage]);\n  var handleSwitchButtonClick = useCallback(function () {\n    setSide(side === 'left' ? 'right' : 'left');\n  }, [setSide, side]); // TODO: [P2] Currently, we cannot unmount Web Chat from DOM when it is minimized.\n  //       Today, if we unmount it, Web Chat will call disconnect on DirectLineJS object.\n  //       When minimized, we still want to maintain that connection while the UI is gone.\n  //       This is related to https://github.com/microsoft/BotFramework-WebChat/issues/2750.\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"minimizable-web-chat\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, minimized && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"maximize\",\n    onClick: handleMaximizeButtonClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: token ? 'ms-Icon ms-Icon--MessageFill' : 'ms-Icon ms-Icon--Message',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), newMessage && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ms-Icon ms-Icon--CircleShapeSolid red-dot\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 26\n    }\n  })), loaded && /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(side === 'left' ? 'chat-box left' : 'chat-box right', minimized ? 'hide' : ''),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filler\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"switch\",\n    onClick: handleSwitchButtonClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ms-Icon ms-Icon--Switch\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"minimize\",\n    onClick: handleMinimizeButtonClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ms-Icon ms-Icon--ChromeMinimize\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(WebChat, {\n    className: \"react-web-chat\",\n    onFetchToken: handleFetchToken,\n    store: store,\n    styleSet: styleSet,\n    token: token //handleFormDialogOpen={props.handleFormDialogOpen}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(MinimizableWebChat, \"Ib6m+FzPmRK6ggRgsWT6mQAAXM4=\");\n\n_c = MinimizableWebChat;\nexport default MinimizableWebChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"MinimizableWebChat\");","map":{"version":3,"sources":["/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/src/MinimizableWebChat.js"],"names":["classNames","React","useCallback","useMemo","useState","createStore","createStyleSet","WebChat","MinimizableWebChat","props","store","dispatch","next","action","type","payload","name","value","language","window","navigator","activity","from","role","setNewMessage","styleSet","backgroundColor","loaded","setLoaded","minimized","setMinimized","newMessage","side","setSide","token","setToken","handleFetchToken","fetch","method","headers","res","text","substring","length","handleMaximizeButtonClick","handleMinimizeButtonClick","handleSwitchButtonClick"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { createStore, createStyleSet } from 'botframework-webchat';\n\nimport WebChat from './WebChat';\n\nimport './fabric-icons-inline.css';\nimport './MinimizableWebChat.css';\n\nconst MinimizableWebChat = (props) => {\n\n  const store = useMemo(\n    () =>\n      createStore({}, ({ dispatch }) => next => action => {\n        if (action.type === 'DIRECT_LINE/CONNECT_FULFILLED') {\n          dispatch({\n            type: 'WEB_CHAT/SEND_EVENT',\n            payload: {\n              name: 'webchat/join',\n              value: {\n                language: window.navigator.language\n              }\n            }\n          });\n        } else if (action.type === 'DIRECT_LINE/INCOMING_ACTIVITY') {\n          if (action.payload.activity.from.role === 'bot') {\n            setNewMessage(true);\n          }\n        }\n\n        return next(action);\n      }),\n    []\n  );\n\n  const styleSet = useMemo(\n    () =>\n      createStyleSet({\n        backgroundColor: 'Transparent'\n      }),\n    []\n  );\n\n  const [loaded, setLoaded] = useState(false);\n  const [minimized, setMinimized] = useState(true);\n  const [newMessage, setNewMessage] = useState(false);\n  const [side, setSide] = useState('right');\n  const [token, setToken] = useState();\n\n  // To learn about reconnecting to a conversation, see the following documentation:\n  // https://docs.microsoft.com/en-us/azure/bot-service/rest-api/bot-framework-rest-direct-line-3-0-reconnect-to-conversation?view=azure-bot-service-4.0\n\n  const handleFetchToken = useCallback(async () => {\n    if (!token) {\n      // const res = await fetch('https://e-councilhr.azurewebsites.net/directline/token', { method: 'POST' }, { mode: 'no-cors'});\n      const res = await fetch(\n        'https://webchat.botframework.com/api/tokens',\n        {\n          method: 'GET',\n          headers: {\n            'Authorization': 'BotConnector y9fwHmxuNj0.eF11NQzywccCKhSCk-5zJDsn-YtYlRkqoZ6iZ4Nf7js' //signup\n            //'Authorization': 'BotConnector CGxDt2v_6B4.mYfZwJxDayYUyID046_L3UiinqgOFSkvdhoU-Wn4I7s'   //login \n          }\n        });\n      // 'Authorization', 'BotConnector ' + 'YugL9gop8Zk.SJVwc4Jheg5HadjeRyHDBfbVI8P19s_V3S5qzeUoMoM'\n      let token = await res.text();\n      //console.log(\"roula\")\n      //console.log(token)\n      // token =\"ew0KICAiYWxnIjogIlJTMjU2IiwNCiAgImtpZCI6ICJsY0oxTXFpNkdKYXdCZEw5Y0dieEt5S1R6OE0iLA0KICAieDV0IjogImxjSjFNcWk2R0phd0JkTDljR2J4S3lLVHo4TSIsDQogICJ0eXAiOiAiSldUIg0KfQ.ew0KICAiYm90IjogIkUtQ291bmNpbEhSIiwNCiAgInNpdGUiOiAiWXVnTDlnb3A4WmsiLA0KICAiY29udiI6ICJJTnExemJBVllTQUM1QzVHQVJuaHBNLWEiLA0KICAibmJmIjogMTYxMzU2MDgyMSwNCiAgImV4cCI6IDE2MTM1NjQ0MjEsDQogICJpc3MiOiAiaHR0cHM6Ly93ZWJjaGF0LmJvdGZyYW1ld29yay5jb20vIiwNCiAgImF1ZCI6ICJodHRwczovL3dlYmNoYXQuYm90ZnJhbWV3b3JrLmNvbS8iDQp9.zRjR7eP_7lMg77fafDYcC0EaWQHQ_Yr9Jvia5oEm5c972_GvQyS6MZYOJuGGl6yykIGPVEhvvSpwjEDQwowiJnBPe-MJO8XHGjq5PJne099QU_UFi4FKvKeCWEKgvBQkq3e9rfXCNBkLy76w_2UpnyPmzPjvrnMCn_59KrQwrODZyK9UZN28ciZ8g7kmM6JrvTMcRqKu7vfzyLT0wl_gvjznVzo6aj60TWiKUsTJMM7TUFAdVorJnfpOq-S4MDBr1l2RII51ZqYmjMTo9AGK45iABEbRQHYFD-cdEr75cc7qcuY3k-iXQOtWIc939lrrh8axJKo_B48pxNi2ikndEg\"\n      setToken(token.substring(1, token.length - 1));\n    }\n  }, [setToken, token]);\n\n  const handleMaximizeButtonClick = useCallback(async () => {\n    setLoaded(true);\n    setMinimized(false);\n    setNewMessage(false);\n  }, [setMinimized, setNewMessage]);\n\n  const handleMinimizeButtonClick = useCallback(() => {\n    setMinimized(true);\n    setNewMessage(false);\n  }, [setMinimized, setNewMessage]);\n\n  const handleSwitchButtonClick = useCallback(() => {\n    setSide(side === 'left' ? 'right' : 'left');\n  }, [setSide, side]);\n\n  // TODO: [P2] Currently, we cannot unmount Web Chat from DOM when it is minimized.\n  //       Today, if we unmount it, Web Chat will call disconnect on DirectLineJS object.\n  //       When minimized, we still want to maintain that connection while the UI is gone.\n  //       This is related to https://github.com/microsoft/BotFramework-WebChat/issues/2750.\n\n  return (\n    <div className=\"minimizable-web-chat\">\n      {minimized && (\n        <button className=\"maximize\" onClick={handleMaximizeButtonClick}>\n          <span className={token ? 'ms-Icon ms-Icon--MessageFill' : 'ms-Icon ms-Icon--Message'} />\n          {newMessage && <span className=\"ms-Icon ms-Icon--CircleShapeSolid red-dot\" />}\n        </button>\n      )}\n      {loaded && (\n        <div className={classNames(side === 'left' ? 'chat-box left' : 'chat-box right', minimized ? 'hide' : '')}>\n          <header>\n            <div className=\"filler\" />\n            <button className=\"switch\" onClick={handleSwitchButtonClick}>\n              <span className=\"ms-Icon ms-Icon--Switch\" />\n            </button>\n            <button className=\"minimize\" onClick={handleMinimizeButtonClick}>\n              <span className=\"ms-Icon ms-Icon--ChromeMinimize\" />\n            </button>\n          </header>\n          <WebChat\n            className=\"react-web-chat\"\n            onFetchToken={handleFetchToken}\n            store={store}\n            styleSet={styleSet}\n            token={token}\n            //handleFormDialogOpen={props.handleFormDialogOpen}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MinimizableWebChat;\n"]},"metadata":{},"sourceType":"module"}