{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connectStackedLayout = exports.default = void 0;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Bubble = _interopRequireDefault(require(\"./Bubble\"));\n\nvar _connectToWebChat = _interopRequireDefault(require(\"../connectToWebChat\"));\n\nvar _isZeroOrPositive = _interopRequireDefault(require(\"../Utils/isZeroOrPositive\"));\n\nvar _ScreenReaderText = _interopRequireDefault(require(\"../ScreenReaderText\"));\n\nvar _textFormatToContentType = _interopRequireDefault(require(\"../Utils/textFormatToContentType\"));\n\nvar _useStyleSet3 = _interopRequireDefault(require(\"../hooks/useStyleSet\"));\n\nvar _useStyleToEmotionObject = _interopRequireDefault(require(\"../hooks/internal/useStyleToEmotionObject\"));\n\nvar _useUniqueId = _interopRequireDefault(require(\"../hooks/internal/useUniqueId\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useAvatarForBot = _botframeworkWebchatApi.hooks.useAvatarForBot,\n    useAvatarForUser = _botframeworkWebchatApi.hooks.useAvatarForUser,\n    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer,\n    useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;\nvar ROOT_STYLE = {\n  '&.webchat__stacked-layout': {\n    position: 'relative',\n    // This is to keep screen reader text in the destinated area.\n    '& .webchat__stacked-layout__attachment-row, & .webchat__stacked-layout__main, & .webchat__stacked-layout__message-row, & .webchat__stacked-layout__status': {\n      display: 'flex'\n    },\n    '& .webchat__stacked-layout__alignment-pad': {\n      flexShrink: 0\n    },\n    '& .webchat__stacked-layout__attachment': {\n      width: '100%'\n    },\n    '& .webchat__stacked-layout__avatar-gutter': {\n      display: 'flex',\n      flexDirection: 'column',\n      flexShrink: 0\n    },\n    '&.webchat__stacked-layout--from-user': {\n      '& .webchat__stacked-layout__attachment-row, & .webchat__stacked-layout__main, & .webchat__stacked-layout__message-row, & .webchat__stacked-layout__status': {\n        flexDirection: 'row-reverse'\n      }\n    },\n    '& .webchat__stacked-layout__content': {\n      flex: 1,\n      // This is for bottom aligning an avatar with a message bubble shorter than the avatar.\n      // Related to the test at activityGrouping.avatarMiddleware.atBottom.js.\n      display: 'flex',\n      flexDirection: 'column',\n      // This \"overflow: hidden\" is to make sure text overflow we get clipped correctly.\n      // Related to the test at basic.js \"long URLs with keep-all\".\n      overflow: 'hidden'\n    },\n    '& .webchat__stacked-layout__nub-pad': {\n      flexShrink: 0\n    }\n  }\n};\n\nvar connectStackedLayout = function connectStackedLayout() {\n  for (var _len = arguments.length, selectors = new Array(_len), _key = 0; _key < _len; _key++) {\n    selectors[_key] = arguments[_key];\n  }\n\n  return _connectToWebChat.default.apply(void 0, [function (_ref, _ref2) {\n    var language = _ref.language,\n        _ref$styleSet$options = _ref.styleSet.options,\n        botAvatarInitials = _ref$styleSet$options.botAvatarInitials,\n        userAvatarInitials = _ref$styleSet$options.userAvatarInitials;\n    var _ref2$activity = _ref2.activity;\n    _ref2$activity = _ref2$activity === void 0 ? {} : _ref2$activity;\n    var _ref2$activity$from = _ref2$activity.from;\n    _ref2$activity$from = _ref2$activity$from === void 0 ? {} : _ref2$activity$from;\n    var role = _ref2$activity$from.role;\n    return {\n      avatarInitials: role === 'user' ? userAvatarInitials : botAvatarInitials,\n      language: language,\n      // TODO: [P4] We want to deprecate botAvatarInitials/userAvatarInitials because they are not as helpful as avatarInitials\n      botAvatarInitials: botAvatarInitials,\n      userAvatarInitials: userAvatarInitials\n    };\n  }].concat(selectors));\n};\n\nexports.connectStackedLayout = connectStackedLayout;\n\nvar StackedLayout = function StackedLayout(_ref3) {\n  var activity = _ref3.activity,\n      hideTimestamp = _ref3.hideTimestamp,\n      renderActivityStatus = _ref3.renderActivityStatus,\n      renderAttachment = _ref3.renderAttachment,\n      renderAvatar = _ref3.renderAvatar,\n      showCallout = _ref3.showCallout;\n\n  var _useStyleOptions = useStyleOptions(),\n      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),\n      _useStyleOptions2$ = _useStyleOptions2[0],\n      bubbleNubOffset = _useStyleOptions2$.bubbleNubOffset,\n      bubbleNubSize = _useStyleOptions2$.bubbleNubSize,\n      bubbleFromUserNubOffset = _useStyleOptions2$.bubbleFromUserNubOffset,\n      bubbleFromUserNubSize = _useStyleOptions2$.bubbleFromUserNubSize;\n\n  var _useAvatarForBot = useAvatarForBot(),\n      _useAvatarForBot2 = _slicedToArray(_useAvatarForBot, 1),\n      botInitials = _useAvatarForBot2[0].initials;\n\n  var _useAvatarForUser = useAvatarForUser(),\n      _useAvatarForUser2 = _slicedToArray(_useAvatarForUser, 1),\n      userInitials = _useAvatarForUser2[0].initials;\n\n  var _useStyleSet = (0, _useStyleSet3.default)(),\n      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),\n      stackedLayoutStyleSet = _useStyleSet2[0].stackedLayout;\n\n  var ariaLabelId = (0, _useUniqueId.default)('webchat__stacked-layout__id');\n  var localize = useLocalizer();\n  var rootClassName = (0, _useStyleToEmotionObject.default)()(ROOT_STYLE) + '';\n  var showActivityStatus = typeof renderActivityStatus === 'function';\n  var _activity$attachments = activity.attachments,\n      attachments = _activity$attachments === void 0 ? [] : _activity$attachments,\n      _activity$channelData = activity.channelData;\n  _activity$channelData = _activity$channelData === void 0 ? {} : _activity$channelData;\n  var _activity$channelData2 = _activity$channelData.messageBack;\n  _activity$channelData2 = _activity$channelData2 === void 0 ? {} : _activity$channelData2;\n  var messageBackDisplayText = _activity$channelData2.displayText,\n      _activity$from = activity.from;\n  _activity$from = _activity$from === void 0 ? {} : _activity$from;\n  var role = _activity$from.role,\n      text = activity.text,\n      textFormat = activity.textFormat;\n  var activityDisplayText = messageBackDisplayText || text;\n  var fromUser = role === 'user';\n  var attachedAlt = localize(fromUser ? 'ACTIVITY_YOU_ATTACHED_ALT' : 'ACTIVITY_BOT_ATTACHED_ALT');\n  var greetingAlt = (fromUser ? localize('ACTIVITY_YOU_SAID_ALT') : localize('ACTIVITY_BOT_SAID_ALT', botInitials || '')).replace(/[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]{2,}/g, ' ');\n  var initials = fromUser ? userInitials : botInitials;\n  var nubOffset = fromUser ? bubbleFromUserNubOffset : bubbleNubOffset;\n  var nubSize = fromUser ? bubbleFromUserNubSize : bubbleNubSize;\n  var otherInitials = fromUser ? botInitials : userInitials;\n  var otherNubSize = fromUser ? bubbleNubSize : bubbleFromUserNubSize;\n  var hasAvatar = initials || typeof initials === 'string';\n  var hasOtherAvatar = otherInitials || typeof otherInitials === 'string';\n  var hasNub = typeof nubSize === 'number';\n  var hasOtherNub = typeof otherNubSize === 'number';\n  var topAlignedCallout = (0, _isZeroOrPositive.default)(nubOffset);\n  var extraTrailing = !hasOtherAvatar && hasOtherNub; // This is for bot message with user nub and no user avatar. And vice versa.\n\n  var showAvatar = showCallout && hasAvatar && !!renderAvatar;\n  var showNub = showCallout && hasNub && (topAlignedCallout || !attachments.length);\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"aria-labelledby\": ariaLabelId,\n    \"aria-roledescription\": \"activity\",\n    className: (0, _classnames.default)('webchat__stacked-layout', rootClassName, stackedLayoutStyleSet + '', {\n      'webchat__stacked-layout--extra-trailing': extraTrailing,\n      'webchat__stacked-layout--from-user': fromUser,\n      'webchat__stacked-layout--hide-avatar': hasAvatar && !showAvatar,\n      'webchat__stacked-layout--hide-nub': hasNub && !showNub,\n      'webchat__stacked-layout--no-message': !activityDisplayText,\n      'webchat__stacked-layout--show-avatar': showAvatar,\n      'webchat__stacked-layout--show-nub': showNub,\n      'webchat__stacked-layout--top-callout': topAlignedCallout\n    }),\n    role: \"group\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__stacked-layout__main\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__stacked-layout__avatar-gutter\"\n  }, showAvatar && renderAvatar({\n    activity: activity\n  })), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__stacked-layout__content\"\n  }, !!activityDisplayText && /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"aria-roledescription\": \"message\",\n    className: \"webchat__stacked-layout__message-row\" // Disable \"Prop `id` is forbidden on DOM Nodes\" rule because we are using the ID prop for accessibility.\n\n    /* eslint-disable-next-line react/forbid-dom-props */\n    ,\n    id: ariaLabelId,\n    role: \"group\"\n  }, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {\n    text: greetingAlt\n  }), /*#__PURE__*/_react.default.createElement(_Bubble.default, {\n    className: \"webchat__stacked-layout__message\",\n    fromUser: fromUser,\n    nub: showNub || (hasAvatar || hasNub) && 'hidden'\n  }, renderAttachment({\n    activity: activity,\n    attachment: {\n      content: activityDisplayText,\n      contentType: (0, _textFormatToContentType.default)(textFormat)\n    }\n  }))), attachments.map(function (attachment, index) {\n    return /*#__PURE__*/_react.default.createElement(\"div\", {\n      \"aria-roledescription\": \"attachment\",\n      className: (0, _classnames.default)('webchat__stacked-layout__attachment-row', {\n        'webchat__stacked-layout__attachment-row--first': !index\n      })\n      /* attachments do not have an ID, it is always indexed by number */\n\n      /* eslint-disable-next-line react/no-array-index-key */\n      ,\n      key: index,\n      role: \"group\"\n    }, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {\n      text: attachedAlt\n    }), /*#__PURE__*/_react.default.createElement(_Bubble.default, {\n      className: \"webchat__stacked-layout__attachment\",\n      fromUser: fromUser\n      /* eslint-disable-next-line react/no-array-index-key */\n      ,\n      key: index,\n      nub: (hasAvatar || hasNub) && 'hidden'\n    }, renderAttachment({\n      activity: activity,\n      attachment: attachment\n    })));\n  })), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__stacked-layout__alignment-pad\"\n  })), showActivityStatus && /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__stacked-layout__status\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__stacked-layout__avatar-gutter\"\n  }), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__stacked-layout__nub-pad\"\n  }), renderActivityStatus({\n    hideTimestamp: hideTimestamp\n  }), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"webchat__stacked-layout__alignment-pad\"\n  })));\n};\n\nStackedLayout.defaultProps = {\n  hideTimestamp: false,\n  renderActivityStatus: false,\n  renderAvatar: false,\n  showCallout: true\n};\nStackedLayout.propTypes = {\n  activity: _propTypes.default.shape({\n    attachments: _propTypes.default.array,\n    channelData: _propTypes.default.shape({\n      messageBack: _propTypes.default.shape({\n        displayText: _propTypes.default.string\n      })\n    }),\n    from: _propTypes.default.shape({\n      role: _propTypes.default.string.isRequired\n    }).isRequired,\n    text: _propTypes.default.string,\n    textFormat: _propTypes.default.string,\n    timestamp: _propTypes.default.string,\n    type: _propTypes.default.string.isRequired\n  }).isRequired,\n  hideTimestamp: _propTypes.default.bool,\n  renderActivityStatus: _propTypes.default.oneOfType([_propTypes.default.oneOf([false]), _propTypes.default.func]),\n  renderAttachment: _propTypes.default.func.isRequired,\n  renderAvatar: _propTypes.default.oneOfType([_propTypes.default.oneOf([false]), _propTypes.default.func]),\n  showCallout: _propTypes.default.bool\n};\nvar _default = StackedLayout;\nexports.default = _default;","map":{"version":3,"sources":["../../src/Activity/StackedLayout.js"],"names":["useAvatarForBot","useAvatarForUser","useLocalizer","useStyleOptions","hooks","ROOT_STYLE","position","display","flexShrink","width","flexDirection","flex","overflow","connectStackedLayout","selectors","language","botAvatarInitials","userAvatarInitials","role","avatarInitials","StackedLayout","activity","hideTimestamp","renderActivityStatus","renderAttachment","renderAvatar","showCallout","bubbleNubOffset","bubbleNubSize","bubbleFromUserNubOffset","bubbleFromUserNubSize","botInitials","userInitials","stackedLayoutStyleSet","ariaLabelId","localize","rootClassName","showActivityStatus","attachments","messageBackDisplayText","text","textFormat","activityDisplayText","fromUser","attachedAlt","greetingAlt","initials","nubOffset","nubSize","otherInitials","otherNubSize","hasAvatar","hasOtherAvatar","hasNub","hasOtherNub","topAlignedCallout","extraTrailing","showAvatar","showNub","attachment","content","contentType","index","PropTypes","channelData","messageBack","displayText","string","from","isRequired","timestamp","type","bool"],"mappings":"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","sourcesContent":["/* eslint complexity: [\"error\", 30] */\n\nimport { hooks } from 'botframework-webchat-api';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Bubble from './Bubble';\nimport connectToWebChat from '../connectToWebChat';\nimport isZeroOrPositive from '../Utils/isZeroOrPositive';\nimport ScreenReaderText from '../ScreenReaderText';\nimport textFormatToContentType from '../Utils/textFormatToContentType';\nimport useStyleSet from '../hooks/useStyleSet';\nimport useStyleToEmotionObject from '../hooks/internal/useStyleToEmotionObject';\n\nimport useUniqueId from '../hooks/internal/useUniqueId';\n\nconst { useAvatarForBot, useAvatarForUser, useLocalizer, useStyleOptions } = hooks;\n\nconst ROOT_STYLE = {\n  '&.webchat__stacked-layout': {\n    position: 'relative', // This is to keep screen reader text in the destinated area.\n\n    '& .webchat__stacked-layout__attachment-row, & .webchat__stacked-layout__main, & .webchat__stacked-layout__message-row, & .webchat__stacked-layout__status': {\n      display: 'flex'\n    },\n\n    '& .webchat__stacked-layout__alignment-pad': {\n      flexShrink: 0\n    },\n\n    '& .webchat__stacked-layout__attachment': {\n      width: '100%'\n    },\n\n    '& .webchat__stacked-layout__avatar-gutter': {\n      display: 'flex',\n      flexDirection: 'column',\n      flexShrink: 0\n    },\n\n    '&.webchat__stacked-layout--from-user': {\n      '& .webchat__stacked-layout__attachment-row, & .webchat__stacked-layout__main, & .webchat__stacked-layout__message-row, & .webchat__stacked-layout__status': {\n        flexDirection: 'row-reverse'\n      }\n    },\n\n    '& .webchat__stacked-layout__content': {\n      flex: 1,\n\n      // This is for bottom aligning an avatar with a message bubble shorter than the avatar.\n      // Related to the test at activityGrouping.avatarMiddleware.atBottom.js.\n      display: 'flex',\n      flexDirection: 'column',\n\n      // This \"overflow: hidden\" is to make sure text overflow we get clipped correctly.\n      // Related to the test at basic.js \"long URLs with keep-all\".\n      overflow: 'hidden'\n    },\n\n    '& .webchat__stacked-layout__nub-pad': {\n      flexShrink: 0\n    }\n  }\n};\n\nconst connectStackedLayout = (...selectors) =>\n  connectToWebChat(\n    (\n      {\n        language,\n        styleSet: {\n          options: { botAvatarInitials, userAvatarInitials }\n        }\n      },\n      { activity: { from: { role } = {} } = {} }\n    ) => ({\n      avatarInitials: role === 'user' ? userAvatarInitials : botAvatarInitials,\n      language,\n\n      // TODO: [P4] We want to deprecate botAvatarInitials/userAvatarInitials because they are not as helpful as avatarInitials\n      botAvatarInitials,\n      userAvatarInitials\n    }),\n    ...selectors\n  );\n\nconst StackedLayout = ({\n  activity,\n  hideTimestamp,\n  renderActivityStatus,\n  renderAttachment,\n  renderAvatar,\n  showCallout\n}) => {\n  const [{ bubbleNubOffset, bubbleNubSize, bubbleFromUserNubOffset, bubbleFromUserNubSize }] = useStyleOptions();\n  const [{ initials: botInitials }] = useAvatarForBot();\n  const [{ initials: userInitials }] = useAvatarForUser();\n  const [{ stackedLayout: stackedLayoutStyleSet }] = useStyleSet();\n  const ariaLabelId = useUniqueId('webchat__stacked-layout__id');\n  const localize = useLocalizer();\n  const rootClassName = useStyleToEmotionObject()(ROOT_STYLE) + '';\n  const showActivityStatus = typeof renderActivityStatus === 'function';\n\n  const {\n    attachments = [],\n    channelData: { messageBack: { displayText: messageBackDisplayText } = {} } = {},\n    from: { role } = {},\n    text,\n    textFormat\n  } = activity;\n\n  const activityDisplayText = messageBackDisplayText || text;\n  const fromUser = role === 'user';\n\n  const attachedAlt = localize(fromUser ? 'ACTIVITY_YOU_ATTACHED_ALT' : 'ACTIVITY_BOT_ATTACHED_ALT');\n  const greetingAlt = (fromUser\n    ? localize('ACTIVITY_YOU_SAID_ALT')\n    : localize('ACTIVITY_BOT_SAID_ALT', botInitials || '')\n  ).replace(/\\s{2,}/gu, ' ');\n\n  const initials = fromUser ? userInitials : botInitials;\n  const nubOffset = fromUser ? bubbleFromUserNubOffset : bubbleNubOffset;\n  const nubSize = fromUser ? bubbleFromUserNubSize : bubbleNubSize;\n  const otherInitials = fromUser ? botInitials : userInitials;\n  const otherNubSize = fromUser ? bubbleNubSize : bubbleFromUserNubSize;\n\n  const hasAvatar = initials || typeof initials === 'string';\n  const hasOtherAvatar = otherInitials || typeof otherInitials === 'string';\n  const hasNub = typeof nubSize === 'number';\n  const hasOtherNub = typeof otherNubSize === 'number';\n  const topAlignedCallout = isZeroOrPositive(nubOffset);\n\n  const extraTrailing = !hasOtherAvatar && hasOtherNub; // This is for bot message with user nub and no user avatar. And vice versa.\n\n  const showAvatar = showCallout && hasAvatar && !!renderAvatar;\n  const showNub = showCallout && hasNub && (topAlignedCallout || !attachments.length);\n\n  return (\n    <div\n      aria-labelledby={ariaLabelId}\n      aria-roledescription=\"activity\"\n      className={classNames('webchat__stacked-layout', rootClassName, stackedLayoutStyleSet + '', {\n        'webchat__stacked-layout--extra-trailing': extraTrailing,\n        'webchat__stacked-layout--from-user': fromUser,\n        'webchat__stacked-layout--hide-avatar': hasAvatar && !showAvatar,\n        'webchat__stacked-layout--hide-nub': hasNub && !showNub,\n        'webchat__stacked-layout--no-message': !activityDisplayText,\n        'webchat__stacked-layout--show-avatar': showAvatar,\n        'webchat__stacked-layout--show-nub': showNub,\n        'webchat__stacked-layout--top-callout': topAlignedCallout\n      })}\n      role=\"group\"\n    >\n      <div className=\"webchat__stacked-layout__main\">\n        <div className=\"webchat__stacked-layout__avatar-gutter\">{showAvatar && renderAvatar({ activity })}</div>\n        <div className=\"webchat__stacked-layout__content\">\n          {!!activityDisplayText && (\n            <div\n              aria-roledescription=\"message\"\n              className=\"webchat__stacked-layout__message-row\"\n              // Disable \"Prop `id` is forbidden on DOM Nodes\" rule because we are using the ID prop for accessibility.\n              /* eslint-disable-next-line react/forbid-dom-props */\n              id={ariaLabelId}\n              role=\"group\"\n            >\n              <ScreenReaderText text={greetingAlt} />\n              <Bubble\n                className=\"webchat__stacked-layout__message\"\n                fromUser={fromUser}\n                nub={showNub || ((hasAvatar || hasNub) && 'hidden')}\n              >\n                {renderAttachment({\n                  activity,\n                  attachment: {\n                    content: activityDisplayText,\n                    contentType: textFormatToContentType(textFormat)\n                  }\n                })}\n              </Bubble>\n            </div>\n          )}\n          {attachments.map((attachment, index) => (\n            <div\n              aria-roledescription=\"attachment\"\n              className={classNames('webchat__stacked-layout__attachment-row', {\n                'webchat__stacked-layout__attachment-row--first': !index\n              })}\n              /* attachments do not have an ID, it is always indexed by number */\n              /* eslint-disable-next-line react/no-array-index-key */\n              key={index}\n              role=\"group\"\n            >\n              <ScreenReaderText text={attachedAlt} />\n              <Bubble\n                className=\"webchat__stacked-layout__attachment\"\n                fromUser={fromUser}\n                /* eslint-disable-next-line react/no-array-index-key */\n                key={index}\n                nub={(hasAvatar || hasNub) && 'hidden'}\n              >\n                {renderAttachment({ activity, attachment })}\n              </Bubble>\n            </div>\n          ))}\n        </div>\n        <div className=\"webchat__stacked-layout__alignment-pad\" />\n      </div>\n      {showActivityStatus && (\n        <div className=\"webchat__stacked-layout__status\">\n          <div className=\"webchat__stacked-layout__avatar-gutter\" />\n          <div className=\"webchat__stacked-layout__nub-pad\" />\n          {renderActivityStatus({ hideTimestamp })}\n          <div className=\"webchat__stacked-layout__alignment-pad\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nStackedLayout.defaultProps = {\n  hideTimestamp: false,\n  renderActivityStatus: false,\n  renderAvatar: false,\n  showCallout: true\n};\n\nStackedLayout.propTypes = {\n  activity: PropTypes.shape({\n    attachments: PropTypes.array,\n    channelData: PropTypes.shape({\n      messageBack: PropTypes.shape({\n        displayText: PropTypes.string\n      })\n    }),\n    from: PropTypes.shape({\n      role: PropTypes.string.isRequired\n    }).isRequired,\n    text: PropTypes.string,\n    textFormat: PropTypes.string,\n    timestamp: PropTypes.string,\n    type: PropTypes.string.isRequired\n  }).isRequired,\n  hideTimestamp: PropTypes.bool,\n  renderActivityStatus: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.func]),\n  renderAttachment: PropTypes.func.isRequired,\n  renderAvatar: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.func]),\n  showCallout: PropTypes.bool\n};\n\nexport default StackedLayout;\n\nexport { connectStackedLayout };\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}