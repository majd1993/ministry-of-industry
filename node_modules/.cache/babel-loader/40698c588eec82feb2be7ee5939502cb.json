{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Contracts_1 = require(\"./Contracts\");\n\nvar Exports_1 = require(\"./Exports\");\n/**\n * Defines SpeakerIdentificationModel class for Speaker Recognition\n * Model contains a set of profiles against which to identify speaker(s)\n * @class SpeakerIdentificationModel\n */\n\n\nvar SpeakerIdentificationModel =\n/** @class */\nfunction () {\n  function SpeakerIdentificationModel(profiles) {\n    var _this = this;\n\n    this.privVoiceProfiles = [];\n    Contracts_1.Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\n\n    if (profiles.length === 0) {\n      throw new Error(\"Empty Voice Profiles array\");\n    }\n\n    profiles.forEach(function (profile) {\n      if (profile.profileType !== Exports_1.VoiceProfileType.TextIndependentIdentification) {\n        throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\n      }\n\n      _this.privVoiceProfiles.push(profile);\n    });\n  }\n\n  SpeakerIdentificationModel.fromProfiles = function (profiles) {\n    return new SpeakerIdentificationModel(profiles);\n  };\n\n  Object.defineProperty(SpeakerIdentificationModel.prototype, \"voiceProfileIds\", {\n    get: function get() {\n      return this.privVoiceProfiles.map(function (profile) {\n        return profile.profileId;\n      }).join(\",\");\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return SpeakerIdentificationModel;\n}();\n\nexports.SpeakerIdentificationModel = SpeakerIdentificationModel;","map":{"version":3,"sources":["src/sdk/SpeakerIdentificationModel.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;AAKA;;;;AAIG;;;AACH,IAAA,0BAAA;AAAA;AAAA,YAAA;AAGI,WAAA,0BAAA,CAAoB,QAApB,EAA4C;AAA5C,QAAA,KAAA,GAAA,IAAA;;AAFQ,SAAA,iBAAA,GAAoC,EAApC;AAGJ,IAAA,WAAA,CAAA,SAAA,CAAU,sBAAV,CAAiC,QAAjC,EAA2C,eAA3C;;AACA,QAAI,QAAQ,CAAC,MAAT,KAAoB,CAAxB,EAA2B;AACvB,YAAM,IAAI,KAAJ,CAAU,4BAAV,CAAN;AACH;;AACD,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAC,OAAD,EAAsB;AACnC,UAAI,OAAO,CAAC,WAAR,KAAwB,SAAA,CAAA,gBAAA,CAAiB,6BAA7C,EAA4E;AACxE,cAAM,IAAI,KAAJ,CAAU,2EAA2E,OAAO,CAAC,SAA7F,CAAN;AACH;;AACD,MAAA,KAAI,CAAC,iBAAL,CAAuB,IAAvB,CAA4B,OAA5B;AACH,KALD;AAMH;;AACa,EAAA,0BAAA,CAAA,YAAA,GAAd,UAA2B,QAA3B,EAAmD;AAC/C,WAAO,IAAI,0BAAJ,CAA+B,QAA/B,CAAP;AACH,GAFa;;AAId,EAAA,MAAA,CAAA,cAAA,CAAW,0BAAA,CAAA,SAAX,EAAW,iBAAX,EAA0B;SAA1B,eAAA;AACI,aAAO,KAAK,iBAAL,CAAuB,GAAvB,CAA2B,UAAC,OAAD,EAAsB;AAAK,eAAA,OAAO,CAAP,SAAA;AAAiB,OAAvE,EAAyE,IAAzE,CAA8E,GAA9E,CAAP;AACH,KAFyB;oBAAA;;AAAA,GAA1B;AAIJ,SAAA,0BAAA;AAAC,CAvBD,EAAA;;AAAa,OAAA,CAAA,0BAAA,GAAA,0BAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    VoiceProfile,\r\n    VoiceProfileType,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Defines SpeakerIdentificationModel class for Speaker Recognition\r\n * Model contains a set of profiles against which to identify speaker(s)\r\n * @class SpeakerIdentificationModel\r\n */\r\nexport class SpeakerIdentificationModel {\r\n    private privVoiceProfiles: VoiceProfile[] = [];\r\n\r\n    private constructor(profiles: VoiceProfile[]) {\r\n        Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\r\n        if (profiles.length === 0) {\r\n            throw new Error(\"Empty Voice Profiles array\");\r\n        }\r\n        profiles.forEach((profile: VoiceProfile) => {\r\n            if (profile.profileType !== VoiceProfileType.TextIndependentIdentification) {\r\n                throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\r\n            }\r\n            this.privVoiceProfiles.push(profile);\r\n        });\r\n    }\r\n    public static fromProfiles(profiles: VoiceProfile[]): SpeakerIdentificationModel {\r\n        return new SpeakerIdentificationModel(profiles);\r\n    }\r\n\r\n    public get voiceProfileIds(): string {\r\n        return this.privVoiceProfiles.map((profile: VoiceProfile) => profile.profileId).join(\",\");\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"script"}