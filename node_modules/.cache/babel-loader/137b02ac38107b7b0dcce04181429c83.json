{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Contracts_1 = require(\"./Contracts\");\n/**\n * Output format\n * @class AutoDetectSourceLanguageResult\n */\n\n\nvar AutoDetectSourceLanguageResult =\n/** @class */\nfunction () {\n  function AutoDetectSourceLanguageResult(language, languageDetectionConfidence) {\n    Contracts_1.Contracts.throwIfNullOrUndefined(language, \"language\");\n    Contracts_1.Contracts.throwIfNullOrUndefined(languageDetectionConfidence, \"languageDetectionConfidence\");\n    this.privLanguage = language;\n    this.privLanguageDetectionConfidence = languageDetectionConfidence;\n  }\n  /**\n   * Creates an instance of AutoDetectSourceLanguageResult object from a SpeechRecognitionResult instance.\n   * @member AutoDetectSourceLanguageResult.fromResult\n   * @function\n   * @public\n   * @param {SpeechRecognitionResult} result - The recognition result.\n   * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\n   */\n\n\n  AutoDetectSourceLanguageResult.fromResult = function (result) {\n    return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\n  };\n\n  Object.defineProperty(AutoDetectSourceLanguageResult.prototype, \"language\", {\n    get: function get() {\n      return this.privLanguage;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AutoDetectSourceLanguageResult.prototype, \"languageDetectionConfidence\", {\n    get: function get() {\n      return this.privLanguageDetectionConfidence;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return AutoDetectSourceLanguageResult;\n}();\n\nexports.AutoDetectSourceLanguageResult = AutoDetectSourceLanguageResult;","map":{"version":3,"sources":["src/sdk/AutoDetectSourceLanguageResult.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAKA;;;AAGG;;;AACH,IAAA,8BAAA;AAAA;AAAA,YAAA;AAKI,WAAA,8BAAA,CAAoB,QAApB,EAAsC,2BAAtC,EAAyE;AACrE,IAAA,WAAA,CAAA,SAAA,CAAU,sBAAV,CAAiC,QAAjC,EAA2C,UAA3C;AACA,IAAA,WAAA,CAAA,SAAA,CAAU,sBAAV,CAAiC,2BAAjC,EAA8D,6BAA9D;AACA,SAAK,YAAL,GAAoB,QAApB;AACA,SAAK,+BAAL,GAAuC,2BAAvC;AACH;AAED;;;;;;;AAOG;;;AACW,EAAA,8BAAA,CAAA,UAAA,GAAd,UAAyB,MAAzB,EAAwD;AACpD,WAAO,IAAI,8BAAJ,CAAmC,MAAM,CAAC,QAA1C,EAAoD,MAAM,CAAC,2BAA3D,CAAP;AACH,GAFa;;AAId,EAAA,MAAA,CAAA,cAAA,CAAW,8BAAA,CAAA,SAAX,EAAW,UAAX,EAAmB;SAAnB,eAAA;AACI,aAAO,KAAK,YAAZ;AACH,KAFkB;oBAAA;;AAAA,GAAnB;AAIA,EAAA,MAAA,CAAA,cAAA,CAAW,8BAAA,CAAA,SAAX,EAAW,6BAAX,EAAsC;SAAtC,eAAA;AACI,aAAO,KAAK,+BAAZ;AACH,KAFqC;oBAAA;;AAAA,GAAtC;AAGJ,SAAA,8BAAA;AAAC,CA/BD,EAAA;;AAAa,OAAA,CAAA,8BAAA,GAAA,8BAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    SpeechRecognitionResult,\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Output format\r\n * @class AutoDetectSourceLanguageResult\r\n */\r\nexport class AutoDetectSourceLanguageResult {\r\n\r\n    private privLanguage: string;\r\n    private privLanguageDetectionConfidence: string;\r\n\r\n    private constructor(language: string, languageDetectionConfidence: string) {\r\n        Contracts.throwIfNullOrUndefined(language, \"language\");\r\n        Contracts.throwIfNullOrUndefined(languageDetectionConfidence, \"languageDetectionConfidence\");\r\n        this.privLanguage = language;\r\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of AutoDetectSourceLanguageResult object from a SpeechRecognitionResult instance.\r\n     * @member AutoDetectSourceLanguageResult.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeechRecognitionResult} result - The recognition result.\r\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\r\n     */\r\n    public static fromResult(result: SpeechRecognitionResult): AutoDetectSourceLanguageResult {\r\n        return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    public get languageDetectionConfidence(): string {\r\n        return this.privLanguageDetectionConfidence;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}