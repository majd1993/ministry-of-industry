{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _pDeferEs = _interopRequireDefault(require(\"p-defer-es5\"));\n\nfunction _default() {\n  var shiftDeferred;\n  var queue = [];\n\n  var push = function push(value) {\n    if (shiftDeferred) {\n      var _shiftDeferred = shiftDeferred,\n          resolve = _shiftDeferred.resolve;\n      shiftDeferred = null;\n      resolve(value);\n    } else {\n      queue.push(value);\n    }\n  };\n\n  var shift = function shift() {\n    if (queue.length) {\n      return Promise.resolve(queue.shift());\n    }\n\n    return (shiftDeferred || (shiftDeferred = (0, _pDeferEs.default)())).promise;\n  };\n\n  return {\n    push: push,\n    shift: shift\n  };\n}","map":{"version":3,"sources":["../../src/Util/createPromiseQueue.js"],"names":["queue","push","resolve","shiftDeferred","shift","Promise"],"mappings":";;;;;;;;;AAAA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AAEe,SAAA,QAAA,GAAW;AACxB,MAAA,aAAA;AACA,MAAMA,KAAK,GAAX,EAAA;;AAEA,MAAMC,IAAI,GAAG,SAAPA,IAAO,CAAA,KAAA,EAAS;AACpB,QAAA,aAAA,EAAmB;AAAA,UAAA,cAAA,GAAA,aAAA;AAAA,UACTC,OADS,GAAA,cAAA,CAAA,OAAA;AAGjBC,MAAAA,aAAa,GAAbA,IAAAA;AACAD,MAAAA,OAAO,CAAPA,KAAO,CAAPA;AAJF,KAAA,MAKO;AACLF,MAAAA,KAAK,CAALA,IAAAA,CAAAA,KAAAA;AACD;AARH,GAAA;;AAWA,MAAMI,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,QAAIJ,KAAK,CAAT,MAAA,EAAkB;AAChB,aAAOK,OAAO,CAAPA,OAAAA,CAAgBL,KAAK,CAA5B,KAAuBA,EAAhBK,CAAP;AACD;;AAED,WAAO,CAACF,aAAa,KAAKA,aAAa,GAAG,CAAA,GAAA,SAAA,CAAnC,OAAmC,GAArB,CAAd,EAAP,OAAA;AALF,GAAA;;AAQA,SAAO;AACLF,IAAAA,IAAI,EADC,IAAA;AAELG,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID","sourcesContent":["import createDeferred from 'p-defer-es5';\n\nexport default function() {\n  let shiftDeferred;\n  const queue = [];\n\n  const push = value => {\n    if (shiftDeferred) {\n      const { resolve } = shiftDeferred;\n\n      shiftDeferred = null;\n      resolve(value);\n    } else {\n      queue.push(value);\n    }\n  };\n\n  const shift = () => {\n    if (queue.length) {\n      return Promise.resolve(queue.shift());\n    }\n\n    return (shiftDeferred || (shiftDeferred = createDeferred())).promise;\n  };\n\n  return {\n    push,\n    shift\n  };\n}\n"]},"metadata":{},"sourceType":"script"}