{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createCustomEvent;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nfunction createCustomEvent(name) {\n  var eventInitDict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (name === 'error') {\n    if (typeof ErrorEvent === 'function') {\n      return new ErrorEvent(name, eventInitDict);\n    }\n  } else if (typeof CustomEvent === 'function') {\n    return new CustomEvent(name, eventInitDict);\n  }\n\n  var event = document.createEvent('Event');\n  event.initEvent(name, true, true);\n  Object.entries(eventInitDict).forEach(function (_ref) {\n    var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n        name = _ref2[0],\n        value = _ref2[1];\n\n    event[name] = value;\n  });\n  return event;\n}","map":{"version":3,"sources":["../src/createCustomEvent.js"],"names":["eventInitDict","name","event","document","Object","value"],"mappings":";;;;;;;;;;;AAAe,SAAA,iBAAA,CAAA,IAAA,EAAqD;AAAA,MAApBA,aAAoB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;;AAClE,MAAIC,IAAI,KAAR,OAAA,EAAsB;AACpB,QAAI,OAAA,UAAA,KAAJ,UAAA,EAAsC;AACpC,aAAO,IAAA,UAAA,CAAA,IAAA,EAAP,aAAO,CAAP;AACD;AAHH,GAAA,MAIO,IAAI,OAAA,WAAA,KAAJ,UAAA,EAAuC;AAC5C,WAAO,IAAA,WAAA,CAAA,IAAA,EAAP,aAAO,CAAP;AACD;;AAED,MAAMC,KAAK,GAAGC,QAAQ,CAARA,WAAAA,CAAd,OAAcA,CAAd;AAEAD,EAAAA,KAAK,CAALA,SAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,IAAAA;AAEAE,EAAAA,MAAM,CAANA,OAAAA,CAAAA,aAAAA,EAAAA,OAAAA,CAAsC,UAAA,IAAA,EAAmB;AAAA,QAAA,KAAA,GAAA,CAAA,GAAA,eAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,CAAA;AAAA,QAAjBH,IAAiB,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,QAAXI,KAAW,GAAA,KAAA,CAAA,CAAA,CAAA;;AACvDH,IAAAA,KAAK,CAALA,IAAK,CAALA,GAAAA,KAAAA;AADFE,GAAAA;AAIA,SAAA,KAAA;AACD","sourcesContent":["export default function createCustomEvent(name, eventInitDict = {}) {\n  if (name === 'error') {\n    if (typeof ErrorEvent === 'function') {\n      return new ErrorEvent(name, eventInitDict);\n    }\n  } else if (typeof CustomEvent === 'function') {\n    return new CustomEvent(name, eventInitDict);\n  }\n\n  const event = document.createEvent('Event');\n\n  event.initEvent(name, true, true);\n\n  Object.entries(eventInitDict).forEach(([name, value]) => {\n    event[name] = value;\n  });\n\n  return event;\n}\n"],"sourceRoot":"directlinespeech:///"},"metadata":{},"sourceType":"script"}