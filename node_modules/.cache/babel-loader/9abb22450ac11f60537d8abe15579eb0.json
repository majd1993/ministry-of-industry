{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/src/WebChat.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useMemo } from 'react';\nimport ReactWebChat, { createDirectLine, createStyleSet } from 'botframework-webchat';\nimport React, {\n/* useState,  */\nuseEffect, useMemo } from \"react\"; //import socketIOClient from \"socket.io-client\";\n\nimport './WebChat.css';\nimport './custom.css'; //import * as adaptiveCardsPackage from 'adaptivecards';\n\n/* adaptiveCardsPackage.AdaptiveCard.onParseElement = element => {\n\n  console.log('element ', element)\n  if (element.id && element.id === 'first_password') {\n    console.log('changed')\n  }\n}; */\n\n/* adaptiveCardsPackage.AdaptiveCard.onParseAction = action => {\n  // const card = action.getActionById(\"openurl\")\n  // card.on\n  console.log('action ', action)\n  if (action.id && action.id === 'openurl') {\n    //action.addEventListener(\"click\", (console.log('kkk')));\n    console.log(' clickkked 2')\n    //action.onExecute(console.log(' clickkked 3'))\n  }\n}; */\n//const ENDPOINT = \"https://e-councilhr.azurewebsites.net\"\n\nvar WebChat = function WebChat(_ref) {\n  _s();\n\n  var className = _ref.className,\n      onFetchToken = _ref.onFetchToken,\n      store = _ref.store,\n      token = _ref.token;\n  var directLine = useMemo(function () {\n    return createDirectLine({\n      token: token\n    });\n  }, [token]); // We are adding a new middleware to handle card action\n\n  /* const cardActionMiddleware = () => next => async ({ cardAction, getSignInUrl }) => {\n    const { type, value } = cardAction;\n     console.log('cardAction', cardAction)\n    console.log('getSignInUrl', getSignInUrl)\n     if (type === 'postBack' && value.url) {\n      //console.log('openUrl: ', type)\n      //console.log('supportteam: ', value)\n       handleFormDialogOpen(value.url)\n    }\n    else {\n      return next({ cardAction, getSignInUrl });\n    }\n  } */\n  //const [language, setLanguage] = useState(\"\"); \n  //.webchat--css-iyfsm-rctxl4.webchat__stacked-layout.webchat__stacked-layout--from-user .webchat__stacked-layout__message-row\n  //.webchat--css-iyfsm-rctxl4.webchat__stacked-layout .webchat__stacked-layout__message-row\n\n  var styleSet = useMemo(function () {\n    return createStyleSet({\n      userAvatarBackgroundColor: 'rgb(105,105,105)',\n      botAvatarBackgroundColor: 'rgba(193, 52, 52, 0.93)',\n      bubbleBackground: '#282E3E',\n      bubbleFromUserBackground: '#d4b678',\n      botAvatarInitials: 'Bot',\n      userAvatarInitials: 'User',\n      backgroundColor: '#ffffff',\n      bubbleFromUserBorderRadius: \"8px\",\n      bubbleBorderRadius: \"8px\",\n      bubbleTextColor: 'white',\n      bubbleFromUserTextColor: \"white\",\n      suggestedActionBorderColor: '#d4b678',\n      suggestedActionBorderRadius: \"8px\",\n      suggestedActionBackground: '#d4b678',\n      suggestedActionDisabledTextColor: 'white',\n      suggestedActionTextColor: \"#ffffff\",\n      sendBoxTextColor: 'black',\n      avatarSize: 40\n    });\n  }, []);\n  /* const [response, setResponse] = useState(\"\");\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT);\n    socket.on(\"language\", data => {\n      console.log(\"wessel\")\n      console.log(data)\n      setResponse(data);\n      //if else\n    });\n  }, []); */\n\n  useEffect(function () {\n    onFetchToken();\n  }, [onFetchToken]);\n  return token ?\n  /*#__PURE__*/\n  //<ReactWebChat className={`${className || ''} web-chat ${response.language!=='English'?'roula':''}`} directLine={directLine} store={store} styleSet={styleSet} /> // left to right\n  React.createElement(ReactWebChat, {\n    className: \"\".concat(className || '', \" web-chat \"),\n    directLine: directLine,\n    store: store,\n    styleSet: styleSet //adaptiveCardsPackage={adaptiveCardsPackage}\n    //cardActionMiddleware={cardActionMiddleware}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(className || '', \" connect-spinner\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ms-Icon ms-Icon--Robot\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"Please wait while we are connecting.\")));\n};\n\n_s(WebChat, \"OArSf2im7+hmYHUC5k/9HH0d9o0=\");\n\n_c = WebChat;\nexport default WebChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebChat\");","map":{"version":3,"sources":["/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/src/WebChat.js"],"names":["ReactWebChat","createDirectLine","createStyleSet","React","useEffect","useMemo","WebChat","className","onFetchToken","store","token","directLine","styleSet","userAvatarBackgroundColor","botAvatarBackgroundColor","bubbleBackground","bubbleFromUserBackground","botAvatarInitials","userAvatarInitials","backgroundColor","bubbleFromUserBorderRadius","bubbleBorderRadius","bubbleTextColor","bubbleFromUserTextColor","suggestedActionBorderColor","suggestedActionBorderRadius","suggestedActionBackground","suggestedActionDisabledTextColor","suggestedActionTextColor","sendBoxTextColor","avatarSize"],"mappings":"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","sourcesContent":["// import React, { useEffect, useMemo } from 'react';\nimport ReactWebChat, { createDirectLine, createStyleSet } from 'botframework-webchat';\nimport React, { /* useState,  */useEffect, useMemo } from \"react\";\n//import socketIOClient from \"socket.io-client\";\nimport './WebChat.css';\nimport './custom.css'\n\n//import * as adaptiveCardsPackage from 'adaptivecards';\n\n/* adaptiveCardsPackage.AdaptiveCard.onParseElement = element => {\n\n  console.log('element ', element)\n  if (element.id && element.id === 'first_password') {\n    console.log('changed')\n  }\n}; */\n\n/* adaptiveCardsPackage.AdaptiveCard.onParseAction = action => {\n  // const card = action.getActionById(\"openurl\")\n  // card.on\n  console.log('action ', action)\n  if (action.id && action.id === 'openurl') {\n    //action.addEventListener(\"click\", (console.log('kkk')));\n    console.log(' clickkked 2')\n    //action.onExecute(console.log(' clickkked 3'))\n  }\n}; */\n\n//const ENDPOINT = \"https://e-councilhr.azurewebsites.net\"\n\nconst WebChat = ({ className, onFetchToken, store, token, /* handleFormDialogOpen */ }) => {\n\n  const directLine = useMemo(() => createDirectLine({ token }), [token]);\n  // We are adding a new middleware to handle card action\n  /* const cardActionMiddleware = () => next => async ({ cardAction, getSignInUrl }) => {\n    const { type, value } = cardAction;\n\n    console.log('cardAction', cardAction)\n    console.log('getSignInUrl', getSignInUrl)\n\n    if (type === 'postBack' && value.url) {\n      //console.log('openUrl: ', type)\n      //console.log('supportteam: ', value)\n\n      handleFormDialogOpen(value.url)\n    }\n    else {\n      return next({ cardAction, getSignInUrl });\n    }\n  } */\n  \n  //const [language, setLanguage] = useState(\"\"); \n  //.webchat--css-iyfsm-rctxl4.webchat__stacked-layout.webchat__stacked-layout--from-user .webchat__stacked-layout__message-row\n  //.webchat--css-iyfsm-rctxl4.webchat__stacked-layout .webchat__stacked-layout__message-row\n  \n  const styleSet = useMemo(\n    () =>\n      createStyleSet({\n        userAvatarBackgroundColor: 'rgb(105,105,105)',\n        botAvatarBackgroundColor: 'rgba(193, 52, 52, 0.93)',\n        bubbleBackground: '#282E3E',\n        bubbleFromUserBackground: '#d4b678',\n        botAvatarInitials: 'Bot',\n        userAvatarInitials: 'User',\n        backgroundColor: '#ffffff',\n        bubbleFromUserBorderRadius: \"8px\",\n        bubbleBorderRadius: \"8px\",\n        bubbleTextColor: 'white',\n        bubbleFromUserTextColor: \"white\",\n        suggestedActionBorderColor: '#d4b678',\n        suggestedActionBorderRadius: \"8px\",\n        suggestedActionBackground: '#d4b678',\n        suggestedActionDisabledTextColor: 'white',\n        suggestedActionTextColor: \"#ffffff\",\n        sendBoxTextColor: 'black',\n        avatarSize: 40,\n      }),\n    []\n  );\n  /* const [response, setResponse] = useState(\"\");\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT);\n    socket.on(\"language\", data => {\n      console.log(\"wessel\")\n      console.log(data)\n      setResponse(data);\n      //if else\n    });\n  }, []); */\n\n  useEffect(() => {\n    onFetchToken();\n  }, [onFetchToken]);\n\n  return token ? (\n    //<ReactWebChat className={`${className || ''} web-chat ${response.language!=='English'?'roula':''}`} directLine={directLine} store={store} styleSet={styleSet} /> // left to right\n    <ReactWebChat\n      className={`${className || ''} web-chat `}\n      directLine={directLine}\n      store={store}\n      styleSet={styleSet}\n      //adaptiveCardsPackage={adaptiveCardsPackage}\n      //cardActionMiddleware={cardActionMiddleware}\n    />\n  ) : (\n    <div className={`${className || ''} connect-spinner`}>\n      <div className=\"content\">\n        <div className=\"icon\">\n          <span className=\"ms-Icon ms-Icon--Robot\" />\n        </div>\n        <p>Please wait while we are connecting.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default WebChat;\n"]},"metadata":{},"sourceType":"module"}