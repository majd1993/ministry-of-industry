{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BrowserWebSocket =\n/** @class */\nfunction () {\n  /**\n   * Creates a new instance of the [BrowserWebSocket](xref:botframework-streaming.BrowserWebSocket) class.\n   *\n   * @param socket The socket object to build this connection on.\n   */\n  function BrowserWebSocket(socket) {\n    if (socket) {\n      this.webSocket = socket;\n    }\n  }\n  /**\n   * Connects to the supporting socket using WebSocket protocol.\n   *\n   * @param serverAddress The address the server is listening on.\n   */\n\n\n  BrowserWebSocket.prototype.connect = function (serverAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      var resolver, rejector;\n      return __generator(this, function (_a) {\n        if (!this.webSocket) {\n          this.webSocket = new WebSocket(serverAddress);\n        }\n\n        this.webSocket.onerror = function (e) {\n          rejector(e);\n        };\n\n        this.webSocket.onopen = function (e) {\n          resolver(e);\n        };\n\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          resolver = resolve;\n          rejector = reject;\n        })];\n      });\n    });\n  };\n\n  Object.defineProperty(BrowserWebSocket.prototype, \"isConnected\", {\n    /**\n     * True if the socket is currently connected.\n     */\n    get: function get() {\n      return this.webSocket.readyState === 1;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Writes a buffer to the socket and sends it.\n   *\n   * @param buffer The buffer of data to send across the connection.\n   */\n\n  BrowserWebSocket.prototype.write = function (buffer) {\n    this.webSocket.send(buffer);\n  };\n  /**\n   * Close the socket.\n   */\n\n\n  BrowserWebSocket.prototype.close = function () {\n    this.webSocket.close();\n  };\n  /**\n   * Set the handler for text and binary messages received on the socket.\n   */\n\n\n  BrowserWebSocket.prototype.setOnMessageHandler = function (handler) {\n    var bufferKey = 'buffer';\n    var packets = [];\n\n    this.webSocket.onmessage = function (evt) {\n      var fileReader = new FileReader();\n      var queueEntry = {\n        buffer: null\n      };\n      packets.push(queueEntry);\n\n      fileReader.onload = function (e) {\n        var t = e.target;\n        queueEntry[bufferKey] = t.result;\n\n        if (packets[0] === queueEntry) {\n          while (0 < packets.length && packets[0][bufferKey]) {\n            handler(packets[0][bufferKey]);\n            packets.splice(0, 1);\n          }\n        }\n      };\n\n      fileReader.readAsArrayBuffer(evt.data);\n    };\n  };\n  /**\n   * Set the callback to call when encountering errors.\n   */\n\n\n  BrowserWebSocket.prototype.setOnErrorHandler = function (handler) {\n    this.webSocket.onerror = function (error) {\n      if (error) {\n        handler(error);\n      }\n    };\n  };\n  /**\n   * Set the callback to call when encountering socket closures.\n   */\n\n\n  BrowserWebSocket.prototype.setOnCloseHandler = function (handler) {\n    this.webSocket.onclose = handler;\n  };\n\n  return BrowserWebSocket;\n}();\n\nexports.BrowserWebSocket = BrowserWebSocket;","map":{"version":3,"sources":["../../src/webSocket/browserWebSocket.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrowserWebSocket = /** @class */ (function () {\n    /**\n     * Creates a new instance of the [BrowserWebSocket](xref:botframework-streaming.BrowserWebSocket) class.\n     *\n     * @param socket The socket object to build this connection on.\n     */\n    function BrowserWebSocket(socket) {\n        if (socket) {\n            this.webSocket = socket;\n        }\n    }\n    /**\n     * Connects to the supporting socket using WebSocket protocol.\n     *\n     * @param serverAddress The address the server is listening on.\n     */\n    BrowserWebSocket.prototype.connect = function (serverAddress) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolver, rejector;\n            return __generator(this, function (_a) {\n                if (!this.webSocket) {\n                    this.webSocket = new WebSocket(serverAddress);\n                }\n                this.webSocket.onerror = function (e) {\n                    rejector(e);\n                };\n                this.webSocket.onopen = function (e) {\n                    resolver(e);\n                };\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        resolver = resolve;\n                        rejector = reject;\n                    })];\n            });\n        });\n    };\n    Object.defineProperty(BrowserWebSocket.prototype, \"isConnected\", {\n        /**\n         * True if the socket is currently connected.\n         */\n        get: function () {\n            return this.webSocket.readyState === 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes a buffer to the socket and sends it.\n     *\n     * @param buffer The buffer of data to send across the connection.\n     */\n    BrowserWebSocket.prototype.write = function (buffer) {\n        this.webSocket.send(buffer);\n    };\n    /**\n     * Close the socket.\n     */\n    BrowserWebSocket.prototype.close = function () {\n        this.webSocket.close();\n    };\n    /**\n     * Set the handler for text and binary messages received on the socket.\n     */\n    BrowserWebSocket.prototype.setOnMessageHandler = function (handler) {\n        var bufferKey = 'buffer';\n        var packets = [];\n        this.webSocket.onmessage = function (evt) {\n            var fileReader = new FileReader();\n            var queueEntry = { buffer: null };\n            packets.push(queueEntry);\n            fileReader.onload = function (e) {\n                var t = e.target;\n                queueEntry[bufferKey] = t.result;\n                if (packets[0] === queueEntry) {\n                    while (0 < packets.length && packets[0][bufferKey]) {\n                        handler(packets[0][bufferKey]);\n                        packets.splice(0, 1);\n                    }\n                }\n            };\n            fileReader.readAsArrayBuffer(evt.data);\n        };\n    };\n    /**\n     * Set the callback to call when encountering errors.\n     */\n    BrowserWebSocket.prototype.setOnErrorHandler = function (handler) {\n        this.webSocket.onerror = function (error) { if (error) {\n            handler(error);\n        } };\n    };\n    /**\n     * Set the callback to call when encountering socket closures.\n     */\n    BrowserWebSocket.prototype.setOnCloseHandler = function (handler) {\n        this.webSocket.onclose = handler;\n    };\n    return BrowserWebSocket;\n}());\nexports.BrowserWebSocket = BrowserWebSocket;\n//# sourceMappingURL=browserWebSocket.js.map"]},"metadata":{},"sourceType":"script"}