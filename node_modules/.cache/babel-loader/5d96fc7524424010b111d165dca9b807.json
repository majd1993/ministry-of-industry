{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = parseFilename;\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nfunction parseFilename(filename) {\n  if (!filename) {\n    return {\n      extname: '',\n      name: ''\n    };\n  } else if (~filename.indexOf('.')) {\n    var _filename$split$rever = filename.split('.').reverse(),\n        _filename$split$rever2 = (0, _toArray2[\"default\"])(_filename$split$rever),\n        extensionWithoutDot = _filename$split$rever2[0],\n        nameSegments = _filename$split$rever2.slice(1);\n\n    return {\n      extname: '.' + extensionWithoutDot,\n      name: nameSegments.reverse().join('.')\n    };\n  } else {\n    return {\n      extname: '',\n      name: filename\n    };\n  }\n}","map":{"version":3,"sources":["../src/parseFilename.js"],"names":["extname","name","filename","extensionWithoutDot","nameSegments"],"mappings":";;;;;;;;;;;AAAe,SAAA,aAAA,CAAA,QAAA,EAAiC;AAC5C,MAAI,CAAJ,QAAA,EAAe;AACX,WAAO;AACHA,MAAAA,OAAO,EADJ,EAAA;AAEHC,MAAAA,IAAI,EAAE;AAFH,KAAP;AADJ,GAAA,MAKO,IAAI,CAACC,QAAQ,CAARA,OAAAA,CAAL,GAAKA,CAAL,EAA4B;AAAA,QAAA,qBAAA,GACgBA,QAAQ,CAARA,KAAAA,CAAAA,GAAAA,EADhB,OACgBA,EADhB;AAAA,QAAA,sBAAA,GAAA,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,EAAA,qBAAA,CAAA;AAAA,QACxBC,mBADwB,GAAA,sBAAA,CAAA,CAAA,CAAA;AAAA,QACAC,YADA,GAAA,sBAAA,CAAA,KAAA,CAAA,CAAA,CAAA;;AAG/B,WAAO;AACHJ,MAAAA,OAAO,EAAE,MADN,mBAAA;AAEHC,MAAAA,IAAI,EAAEG,YAAY,CAAZA,OAAAA,GAAAA,IAAAA,CAAAA,GAAAA;AAFH,KAAP;AAHG,GAAA,MAOA;AACH,WAAO;AACHJ,MAAAA,OAAO,EADJ,EAAA;AAEHC,MAAAA,IAAI,EAAEC;AAFH,KAAP;AAIH;AACJ","sourcesContent":["export default function parseFilename(filename) {\n    if (!filename) {\n        return {\n            extname: '',\n            name: ''\n        };\n    } else if (~filename.indexOf('.')) {\n        const [extensionWithoutDot, ...nameSegments] = filename.split('.').reverse();\n\n        return {\n            extname: '.' + extensionWithoutDot,\n            name: nameSegments.reverse().join('.')\n        };\n    } else {\n        return {\n            extname: '',\n            name: filename\n        };\n    }\n}\n"]},"metadata":{},"sourceType":"script"}