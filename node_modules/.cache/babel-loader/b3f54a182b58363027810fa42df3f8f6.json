{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Observable_1 = require('../Observable');\n\nvar ScalarObservable_1 = require('./ScalarObservable');\n\nvar EmptyObservable_1 = require('./EmptyObservable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\n\n\nvar ArrayLikeObservable = function (_super) {\n  __extends(ArrayLikeObservable, _super);\n\n  function ArrayLikeObservable(arrayLike, scheduler) {\n    _super.call(this);\n\n    this.arrayLike = arrayLike;\n    this.scheduler = scheduler;\n\n    if (!scheduler && arrayLike.length === 1) {\n      this._isScalar = true;\n      this.value = arrayLike[0];\n    }\n  }\n\n  ArrayLikeObservable.create = function (arrayLike, scheduler) {\n    var length = arrayLike.length;\n\n    if (length === 0) {\n      return new EmptyObservable_1.EmptyObservable();\n    } else if (length === 1) {\n      return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);\n    } else {\n      return new ArrayLikeObservable(arrayLike, scheduler);\n    }\n  };\n\n  ArrayLikeObservable.dispatch = function (state) {\n    var arrayLike = state.arrayLike,\n        index = state.index,\n        length = state.length,\n        subscriber = state.subscriber;\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    if (index >= length) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(arrayLike[index]);\n    state.index = index + 1;\n    this.schedule(state);\n  };\n  /** @deprecated internal use only */\n\n\n  ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n    var index = 0;\n\n    var _a = this,\n        arrayLike = _a.arrayLike,\n        scheduler = _a.scheduler;\n\n    var length = arrayLike.length;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n        arrayLike: arrayLike,\n        index: index,\n        length: length,\n        subscriber: subscriber\n      });\n    } else {\n      for (var i = 0; i < length && !subscriber.closed; i++) {\n        subscriber.next(arrayLike[i]);\n      }\n\n      subscriber.complete();\n    }\n  };\n\n  return ArrayLikeObservable;\n}(Observable_1.Observable);\n\nexports.ArrayLikeObservable = ArrayLikeObservable;","map":{"version":3,"sources":["../../src/observable/ArrayLikeObservable.ts"],"names":[],"mappings":"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","sourcesContent":["import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayLikeObservable<T> extends Observable<T> {\n\n  static create<T>(arrayLike: ArrayLike<T>, scheduler?: IScheduler): Observable<T> {\n    const length = arrayLike.length;\n    if (length === 0) {\n      return new EmptyObservable<T>();\n    } else if (length === 1) {\n      return new ScalarObservable<T>(<any>arrayLike[0], scheduler);\n    } else {\n      return new ArrayLikeObservable(arrayLike, scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n    const { arrayLike, index, length, subscriber } = state;\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    if (index >= length) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(arrayLike[index]);\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  private value: any;\n\n  constructor(private arrayLike: ArrayLike<T>, private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && arrayLike.length === 1) {\n      this._isScalar = true;\n      this.value = arrayLike[0];\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const { arrayLike, scheduler } = this;\n    const length = arrayLike.length;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n        arrayLike, index, length, subscriber\n      });\n    } else {\n      for (let i = 0; i < length && !subscriber.closed; i++) {\n        subscriber.next(arrayLike[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}