{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useRenderActivity;\n\nvar _react = require(\"react\");\n\nvar _useCreateActivityRendererInternal = _interopRequireDefault(require(\"./internal/useCreateActivityRendererInternal\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // In the old days, the useRenderActivity() will be called like this:\n//\n// const renderActivity = useRenderActivity();\n// const element = renderActivity({ activity, nextVisibleActivity });\n// In the new days, the useCreateActivityRenderer() is a 3-pass function:\n//\n// const createActivityRenderer = useCreateActivityRenderer();\n// const renderActivity = createActivityRenderer({ activity, nextVisibleActivity });\n// const element = renderActivity && renderActivity(undefined, { renderActivityStatus, renderAvatar, showCallout });\n// Despite deprecation, useRenderActivity() can be retrofitted using useCreateActivityRenderer().\n\n\nvar showDeprecationNotes = true;\n\nfunction useRenderActivity(renderAttachment) {\n  if (showDeprecationNotes) {\n    console.warn('botframework-webchat: \"useRenderActivity\" is deprecated and will be removed on or after 2022-07-22. Please use \"useCreateActivityRenderer()\" instead.');\n    showDeprecationNotes = false;\n  }\n\n  if (typeof renderAttachment !== 'function') {\n    throw new Error('botframework-webchat: First argument passed to \"useRenderActivity\" must be a function.');\n  }\n\n  var createActivityRenderer = (0, _useCreateActivityRendererInternal.default)(renderAttachment);\n  return (0, _react.useMemo)(function () {\n    return function (renderActivityArg) {\n      var renderOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var _ref = renderActivityArg || {},\n          activity = _ref.activity;\n\n      if (!activity) {\n        throw new Error('botframework-webchat: First argument passed to the callback of useRenderActivity() must contain an \"activity\" property.');\n      }\n\n      var renderActivity = createActivityRenderer(renderActivityArg);\n      return !!renderActivity && renderActivity(renderOptions);\n    };\n  }, [createActivityRenderer]);\n}","map":{"version":3,"sources":["../../src/hooks/useRenderActivity.js"],"names":["showDeprecationNotes","console","createActivityRenderer","renderOptions","activity","renderActivityArg","renderActivity"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,kCAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,8CAAA,CAAA,CAAA;;;;;;EAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,IAAIA,oBAAoB,GAAxB,IAAA;;AAEe,SAAA,iBAAA,CAAA,gBAAA,EAA6C;AAC1D,MAAA,oBAAA,EAA0B;AACxBC,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,uJAAAA;AAIAD,IAAAA,oBAAoB,GAApBA,KAAAA;AACD;;AAED,MAAI,OAAA,gBAAA,KAAJ,UAAA,EAA4C;AAC1C,UAAM,IAAA,KAAA,CAAN,wFAAM,CAAN;AACD;;AAED,MAAME,sBAAsB,GAAG,CAAA,GAAA,kCAAA,CAAA,OAAA,EAA/B,gBAA+B,CAA/B;AAEA,SAAO,CAAA,GAAA,MAAA,CAAA,OAAA,EACL,YAAA;AAAA,WAAM,UAAA,iBAAA,EAA2C;AAAA,UAAvBC,aAAuB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAP,EAAO;;AAAA,UAAA,IAAA,GAC1BE,iBAAiB,IADS,EAAA;AAAA,UACvCD,QADuC,GAAA,IAAA,CAAA,QAAA;;AAG/C,UAAI,CAAJ,QAAA,EAAe;AACb,cAAM,IAAA,KAAA,CAAN,yHAAM,CAAN;AAGD;;AAED,UAAME,cAAc,GAAGJ,sBAAsB,CAA7C,iBAA6C,CAA7C;AAEA,aAAO,CAAC,CAAD,cAAA,IAAoBI,cAAc,CAAzC,aAAyC,CAAzC;AAXF,KAAA;AADK,GAAA,EAcL,CAdF,sBAcE,CAdK,CAAP;AAgBD","sourcesContent":["import { useMemo } from 'react';\n\nimport useCreateActivityRendererInternal from './internal/useCreateActivityRendererInternal';\n\n// In the old days, the useRenderActivity() will be called like this:\n//\n// const renderActivity = useRenderActivity();\n// const element = renderActivity({ activity, nextVisibleActivity });\n\n// In the new days, the useCreateActivityRenderer() is a 3-pass function:\n//\n// const createActivityRenderer = useCreateActivityRenderer();\n// const renderActivity = createActivityRenderer({ activity, nextVisibleActivity });\n// const element = renderActivity && renderActivity(undefined, { renderActivityStatus, renderAvatar, showCallout });\n\n// Despite deprecation, useRenderActivity() can be retrofitted using useCreateActivityRenderer().\n\nlet showDeprecationNotes = true;\n\nexport default function useRenderActivity(renderAttachment) {\n  if (showDeprecationNotes) {\n    console.warn(\n      'botframework-webchat: \"useRenderActivity\" is deprecated and will be removed on or after 2022-07-22. Please use \"useCreateActivityRenderer()\" instead.'\n    );\n\n    showDeprecationNotes = false;\n  }\n\n  if (typeof renderAttachment !== 'function') {\n    throw new Error('botframework-webchat: First argument passed to \"useRenderActivity\" must be a function.');\n  }\n\n  const createActivityRenderer = useCreateActivityRendererInternal(renderAttachment);\n\n  return useMemo(\n    () => (renderActivityArg, renderOptions = {}) => {\n      const { activity } = renderActivityArg || {};\n\n      if (!activity) {\n        throw new Error(\n          'botframework-webchat: First argument passed to the callback of useRenderActivity() must contain an \"activity\" property.'\n        );\n      }\n\n      const renderActivity = createActivityRenderer(renderActivityArg);\n\n      return !!renderActivity && renderActivity(renderOptions);\n    },\n    [createActivityRenderer]\n  );\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}