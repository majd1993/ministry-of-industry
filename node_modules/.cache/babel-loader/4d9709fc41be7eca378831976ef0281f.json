{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Error_1 = require(\"../common/Error\");\n\nvar DialogServiceTurnState_1 = require(\"./DialogServiceTurnState\");\n\nvar DialogServiceTurnStateManager =\n/** @class */\nfunction () {\n  function DialogServiceTurnStateManager() {\n    this.privTurnMap = new Map();\n    return;\n  }\n\n  DialogServiceTurnStateManager.prototype.StartTurn = function (id) {\n    if (this.privTurnMap.has(id)) {\n      throw new Error_1.InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\n    }\n\n    var turnState = new DialogServiceTurnState_1.DialogServiceTurnState(this, id);\n    this.privTurnMap.set(id, turnState);\n    return this.privTurnMap.get(id);\n  };\n\n  DialogServiceTurnStateManager.prototype.GetTurn = function (id) {\n    return this.privTurnMap.get(id);\n  };\n\n  DialogServiceTurnStateManager.prototype.CompleteTurn = function (id) {\n    if (!this.privTurnMap.has(id)) {\n      throw new Error_1.InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\n    }\n\n    var turnState = this.privTurnMap.get(id);\n    turnState.complete();\n    this.privTurnMap.delete(id);\n    return turnState;\n  };\n\n  return DialogServiceTurnStateManager;\n}();\n\nexports.DialogServiceTurnStateManager = DialogServiceTurnStateManager;","map":{"version":3,"sources":["src/common.speech/DialogServiceTurnStateManager.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,IAAA,wBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AAGA,IAAA,6BAAA;AAAA;AAAA,YAAA;AAGI,WAAA,6BAAA,GAAA;AACI,SAAK,WAAL,GAAmB,IAAI,GAAJ,EAAnB;AACA;AACH;;AAEM,EAAA,6BAAA,CAAA,SAAA,CAAA,SAAA,GAAP,UAAiB,EAAjB,EAA2B;AACvB,QAAI,KAAK,WAAL,CAAiB,GAAjB,CAAqB,EAArB,CAAJ,EAA8B;AAC1B,YAAM,IAAI,OAAA,CAAA,qBAAJ,CAA0B,oDAAoD,EAA9E,CAAN;AACH;;AACD,QAAM,SAAS,GAA2B,IAAI,wBAAA,CAAA,sBAAJ,CAA2B,IAA3B,EAAiC,EAAjC,CAA1C;AACA,SAAK,WAAL,CAAiB,GAAjB,CAAqB,EAArB,EAAyB,SAAzB;AACA,WAAO,KAAK,WAAL,CAAiB,GAAjB,CAAqB,EAArB,CAAP;AACH,GAPM;;AASA,EAAA,6BAAA,CAAA,SAAA,CAAA,OAAA,GAAP,UAAe,EAAf,EAAyB;AACrB,WAAO,KAAK,WAAL,CAAiB,GAAjB,CAAqB,EAArB,CAAP;AACH,GAFM;;AAIA,EAAA,6BAAA,CAAA,SAAA,CAAA,YAAA,GAAP,UAAoB,EAApB,EAA8B;AAC1B,QAAI,CAAC,KAAK,WAAL,CAAiB,GAAjB,CAAqB,EAArB,CAAL,EAA+B;AAC3B,YAAM,IAAI,OAAA,CAAA,qBAAJ,CAA0B,6DAA6D,EAAvF,CAAN;AACH;;AACD,QAAM,SAAS,GAAG,KAAK,WAAL,CAAiB,GAAjB,CAAqB,EAArB,CAAlB;AACA,IAAA,SAAS,CAAC,QAAV;AACA,SAAK,WAAL,CAAiB,MAAjB,CAAwB,EAAxB;AACA,WAAO,SAAP;AACH,GARM;;AASX,SAAA,6BAAA;AAAC,CA9BD,EAAA;;AAAa,OAAA,CAAA,6BAAA,GAAA,6BAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"../common/Error\";\r\nimport { AudioOutputStream, PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\r\nimport { DialogServiceTurnState } from \"./DialogServiceTurnState\";\r\nimport { ActivityPayloadResponse } from \"./ServiceMessages/ActivityResponsePayload\";\r\n\r\nexport class DialogServiceTurnStateManager {\r\n    private privTurnMap: Map<string, DialogServiceTurnState>;\r\n\r\n    constructor() {\r\n        this.privTurnMap = new Map<string, DialogServiceTurnState>();\r\n        return;\r\n    }\r\n\r\n    public StartTurn(id: string): DialogServiceTurnState {\r\n        if (this.privTurnMap.has(id)) {\r\n            throw new InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\r\n        }\r\n        const turnState: DialogServiceTurnState = new DialogServiceTurnState(this, id);\r\n        this.privTurnMap.set(id, turnState);\r\n        return this.privTurnMap.get(id);\r\n    }\r\n\r\n    public GetTurn(id: string): DialogServiceTurnState {\r\n        return this.privTurnMap.get(id);\r\n    }\r\n\r\n    public CompleteTurn(id: string): DialogServiceTurnState {\r\n        if (!this.privTurnMap.has(id)) {\r\n            throw new InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\r\n        }\r\n        const turnState = this.privTurnMap.get(id);\r\n        turnState.complete();\r\n        this.privTurnMap.delete(id);\r\n        return turnState;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}