{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createCoreMiddleware;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _TypingAnimation = _interopRequireDefault(require(\"../../Assets/TypingAnimation\"));\n\nvar _useStyleSet3 = _interopRequireDefault(require(\"../../hooks/useStyleSet\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useDirection = _botframeworkWebchatApi.hooks.useDirection,\n    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer;\n\nvar DotIndicator = function DotIndicator() {\n  var _useStyleSet = (0, _useStyleSet3.default)(),\n      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),\n      typingIndicatorStyleSet = _useStyleSet2[0].typingIndicator;\n\n  var _useDirection = useDirection(),\n      _useDirection2 = _slicedToArray(_useDirection, 1),\n      direction = _useDirection2[0];\n\n  var localize = useLocalizer();\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: (0, _classnames.default)(typingIndicatorStyleSet + '', direction === 'rtl' && 'webchat__typingIndicator--rtl')\n  }, /*#__PURE__*/_react.default.createElement(_TypingAnimation.default, {\n    \"aria-label\": localize('TYPING_INDICATOR_ALT')\n  }));\n}; // TODO: [P4] Rename this file or the whole middleware, it looks either too simple or too comprehensive now\n\n\nfunction createCoreMiddleware() {\n  return [function () {\n    return function () {\n      return function (_ref) {\n        var visible = _ref.visible;\n        return visible && /*#__PURE__*/_react.default.createElement(DotIndicator, null);\n      };\n    };\n  }];\n}","map":{"version":3,"sources":["../../../src/Middleware/TypingIndicator/createCoreMiddleware.js"],"names":["useDirection","useLocalizer","hooks","DotIndicator","typingIndicatorStyleSet","direction","localize","visible"],"mappings":";;;;;;;AAEA,IAAA,uBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,8BAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEQA,Y,GAA+BE,uBAAAA,CAAAA,KAAAA,CAA/BF,Y;IAAcC,Y,GAAiBC,uBAAAA,CAAAA,KAAAA,CAAjBD,Y;;AAEtB,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,MAAA,YAAA,GAC8B,CAAA,GAAA,aAAA,CAD9B,OAC8B,GAD9B;AAAA,MAAA,aAAA,GAAA,cAAA,CAAA,YAAA,EAAA,CAAA,CAAA;AAAA,MACCC,uBADD,GAAA,aAAA,CAAA,CAAA,CAAA,CAAA,eAAA;;AAAA,MAAA,aAAA,GAELJ,YAFK,EAAA;AAAA,MAAA,cAAA,GAAA,cAAA,CAAA,aAAA,EAAA,CAAA,CAAA;AAAA,MAElBK,SAFkB,GAAA,cAAA,CAAA,CAAA,CAAA;;AAGzB,MAAMC,QAAQ,GAAGL,YAAjB,EAAA;AAEA,SAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,CAAA,GAAA,WAAA,CAAA,OAAA,EAAWG,uBAAuB,GAAlC,EAAA,EAAyCC,SAAS,KAATA,KAAAA,IAAzC,+BAAA;AAAhB,GAAA,EAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,gBAAA,CAAD,OAAA,EAAA;AAAiB,kBAAYC,QAAQ,CAAA,sBAAA;AAArC,GAAA,CADF,CADF;AALF,CAAA,C,CAYA;;;AACe,SAAA,oBAAA,GAAgC;AAC7C,SAAO,CAAC,YAAA;AAAA,WAAM,YAAA;AAAA,aAAM,UAAA,IAAA,EAAA;AAAA,YAAGC,OAAH,GAAA,IAAA,CAAA,OAAA;AAAA,eAAiBA,OAAO,IAAA,aAAI,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,YAAA,EAA5B,IAA4B,CAA5B;AAAN,OAAA;AAAN,KAAA;AAAR,GAAO,CAAP;AACD","sourcesContent":["/* eslint react/prop-types: \"off\"*/\n\nimport { hooks } from 'botframework-webchat-api';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport TypingAnimation from '../../Assets/TypingAnimation';\nimport useStyleSet from '../../hooks/useStyleSet';\n\nconst { useDirection, useLocalizer } = hooks;\n\nconst DotIndicator = () => {\n  const [{ typingIndicator: typingIndicatorStyleSet }] = useStyleSet();\n  const [direction] = useDirection();\n  const localize = useLocalizer();\n\n  return (\n    <div className={classNames(typingIndicatorStyleSet + '', direction === 'rtl' && 'webchat__typingIndicator--rtl')}>\n      <TypingAnimation aria-label={localize('TYPING_INDICATOR_ALT')} />\n    </div>\n  );\n};\n\n// TODO: [P4] Rename this file or the whole middleware, it looks either too simple or too comprehensive now\nexport default function createCoreMiddleware() {\n  return [() => () => ({ visible }) => visible && <DotIndicator />];\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}