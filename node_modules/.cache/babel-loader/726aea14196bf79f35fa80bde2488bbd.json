{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Allows additions of new phrases to improve speech recognition.\n *\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\n * to the speech service.\n */\n\nvar PhraseListGrammar =\n/** @class */\nfunction () {\n  function PhraseListGrammar(recogBase) {\n    this.privGrammerBuilder = recogBase.dynamicGrammar;\n  }\n  /**\n   * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\n   * @param recognizer The recognizer to add phrase lists to.\n   */\n\n\n  PhraseListGrammar.fromRecognizer = function (recognizer) {\n    var recoBase = recognizer.internalData;\n    return new PhraseListGrammar(recoBase);\n  };\n  /**\n   * Adds a single phrase to the current recognizer.\n   * @param phrase Phrase to add.\n   */\n\n\n  PhraseListGrammar.prototype.addPhrase = function (phrase) {\n    this.privGrammerBuilder.addPhrase(phrase);\n  };\n  /**\n   * Adds multiple phrases to the current recognizer.\n   * @param phrases Array of phrases to add.\n   */\n\n\n  PhraseListGrammar.prototype.addPhrases = function (phrases) {\n    this.privGrammerBuilder.addPhrase(phrases);\n  };\n  /**\n   * Clears all phrases added to the current recognizer.\n   */\n\n\n  PhraseListGrammar.prototype.clear = function () {\n    this.privGrammerBuilder.clearPhrases();\n  };\n\n  return PhraseListGrammar;\n}();\n\nexports.PhraseListGrammar = PhraseListGrammar;","map":{"version":3,"sources":["src/sdk/PhraseListGrammar.ts"],"names":[],"mappings":"cAAA;AACA;;;;;AAQA;;;;;AAKG;;AACH,IAAA,iBAAA;AAAA;AAAA,YAAA;AAGI,WAAA,iBAAA,CAAoB,SAApB,EAAoD;AAChD,SAAK,kBAAL,GAA0B,SAAS,CAAC,cAApC;AACH;AAED;;;AAGG;;;AACW,EAAA,iBAAA,CAAA,cAAA,GAAd,UAA6B,UAA7B,EAAmD;AAC/C,QAAM,QAAQ,GAA0B,UAAU,CAAC,YAAnD;AAEA,WAAO,IAAI,iBAAJ,CAAsB,QAAtB,CAAP;AACH,GAJa;AAMd;;;AAGG;;;AACI,EAAA,iBAAA,CAAA,SAAA,CAAA,SAAA,GAAP,UAAiB,MAAjB,EAA+B;AAC3B,SAAK,kBAAL,CAAwB,SAAxB,CAAkC,MAAlC;AACH,GAFM;AAIP;;;AAGG;;;AACI,EAAA,iBAAA,CAAA,SAAA,CAAA,UAAA,GAAP,UAAkB,OAAlB,EAAmC;AAC/B,SAAK,kBAAL,CAAwB,SAAxB,CAAkC,OAAlC;AACH,GAFM;AAIP;;AAEG;;;AACI,EAAA,iBAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACI,SAAK,kBAAL,CAAwB,YAAxB;AACH,GAFM;;AAGX,SAAA,iBAAA;AAAC,CAvCD,EAAA;;AAAa,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n    ServiceRecognizerBase,\r\n} from \"../common.speech/Exports\";\r\nimport { Recognizer } from \"./Exports\";\r\n\r\n/**\r\n * Allows additions of new phrases to improve speech recognition.\r\n *\r\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\r\n * to the speech service.\r\n */\r\nexport class PhraseListGrammar {\r\n    private privGrammerBuilder: DynamicGrammarBuilder;\r\n\r\n    private constructor(recogBase: ServiceRecognizerBase) {\r\n        this.privGrammerBuilder = recogBase.dynamicGrammar;\r\n    }\r\n\r\n    /**\r\n     * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\r\n     * @param recognizer The recognizer to add phrase lists to.\r\n     */\r\n    public static fromRecognizer(recognizer: Recognizer): PhraseListGrammar {\r\n        const recoBase: ServiceRecognizerBase = recognizer.internalData as ServiceRecognizerBase;\r\n\r\n        return new PhraseListGrammar(recoBase);\r\n    }\r\n\r\n    /**\r\n     * Adds a single phrase to the current recognizer.\r\n     * @param phrase Phrase to add.\r\n     */\r\n    public addPhrase(phrase: string): void {\r\n        this.privGrammerBuilder.addPhrase(phrase);\r\n    }\r\n\r\n    /**\r\n     * Adds multiple phrases to the current recognizer.\r\n     * @param phrases Array of phrases to add.\r\n     */\r\n    public addPhrases(phrases: string[]): void {\r\n        this.privGrammerBuilder.addPhrase(phrases);\r\n    }\r\n\r\n    /**\r\n     * Clears all phrases added to the current recognizer.\r\n     */\r\n    public clear(): void {\r\n        this.privGrammerBuilder.clearPhrases();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}