{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar SubjectSubscription = function (_super) {\n  __extends(SubjectSubscription, _super);\n\n  function SubjectSubscription(subject, subscriber) {\n    _super.call(this);\n\n    this.subject = subject;\n    this.subscriber = subscriber;\n    this.closed = false;\n  }\n\n  SubjectSubscription.prototype.unsubscribe = function () {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n    var subject = this.subject;\n    var observers = subject.observers;\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    var subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  };\n\n  return SubjectSubscription;\n}(Subscription_1.Subscription);\n\nexports.SubjectSubscription = SubjectSubscription;","map":{"version":3,"sources":["../src/SubjectSubscription.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA,IAAA,cAAA,GAAA,OAAA,CAA6B,gBAA7B,CAAA;AAEA;;;;AAIG;;;AACH,IAAA,mBAAA,GAAA,UAAA,MAAA,EAAA;AAA4C,EAAA,SAAA,CAAA,mBAAA,EAAA,MAAA,CAAA;;AAG1C,WAAA,mBAAA,CAAmB,OAAnB,EAA+C,UAA/C,EAAsE;AACpE,IAAA,MAAA,CAAA,IAAA,CAAA,IAAA;;AADiB,SAAA,OAAA,GAAA,OAAA;AAA4B,SAAA,UAAA,GAAA,UAAA;AAF/C,SAAA,MAAA,GAAkB,KAAlB;AAIC;;AAED,EAAA,mBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACE,QAAI,KAAK,MAAT,EAAiB;AACf;AACD;;AAED,SAAK,MAAL,GAAc,IAAd;AAEA,QAAM,OAAO,GAAG,KAAK,OAArB;AACA,QAAM,SAAS,GAAG,OAAO,CAAC,SAA1B;AAEA,SAAK,OAAL,GAAe,IAAf;;AAEA,QAAI,CAAC,SAAD,IAAc,SAAS,CAAC,MAAV,KAAqB,CAAnC,IAAwC,OAAO,CAAC,SAAhD,IAA6D,OAAO,CAAC,MAAzE,EAAiF;AAC/E;AACD;;AAED,QAAM,eAAe,GAAG,SAAS,CAAC,OAAV,CAAkB,KAAK,UAAvB,CAAxB;;AAEA,QAAI,eAAe,KAAK,CAAC,CAAzB,EAA4B;AAC1B,MAAA,SAAS,CAAC,MAAV,CAAiB,eAAjB,EAAkC,CAAlC;AACD;AACF,GArBD;;AAsBF,SAAA,mBAAA;AAAC,CA7BD,CAA4C,cAAA,CAAA,YAA5C,CAAA;;AAAa,OAAA,CAAA,mBAAA,GAAmB,mBAAnB","sourcesContent":["import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}