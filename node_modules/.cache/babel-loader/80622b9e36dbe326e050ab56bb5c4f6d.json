{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTimestampMiddleware;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _AbsoluteTime = _interopRequireDefault(require(\"./AbsoluteTime\"));\n\nvar _Timestamp = _interopRequireDefault(require(\"./Timestamp\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction createTimestampMiddleware() {\n  return function () {\n    return function () {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var _args$ = args[0],\n            activity = _args$.activity,\n            hideTimestamp = _args$.hideTimestamp;\n\n        if (hideTimestamp) {\n          // If \"hideTimestamp\" is set, we will not render the visual timestamp. But continue to render the screen reader only version.\n          return /*#__PURE__*/_react.default.createElement(_AbsoluteTime.default, {\n            hide: true,\n            value: activity.timestamp\n          });\n        }\n\n        return /*#__PURE__*/_react.default.createElement(_Timestamp.default, {\n          activity: activity\n        });\n      };\n    };\n  };\n}","map":{"version":3,"sources":["../../../src/Middleware/ActivityStatus/createTimestampMiddleware.js"],"names":["args","activity","hideTimestamp","timestamp"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;;;;;;;AAEe,SAAA,yBAAA,GAAqC;AAClD,SAAO,YAAA;AAAA,WAAM,YAAA;AAAA,aAAM,YAAa;AAAA,aAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAATA,IAAS,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAATA,UAAAA,IAAS,CAAA,IAAA,CAATA,GAAS,SAAA,CAAA,IAAA,CAATA;AAAS;;AAAA,YAAA,MAAA,GACQA,IADR,CAAA,CAAA,CAAA;AAAA,YACrBC,QADqB,GAAA,MAAA,CAAA,QAAA;AAAA,YACXC,aADW,GAAA,MAAA,CAAA,aAAA;;AAG9B,YAAA,aAAA,EAAmB;AACjB;AACA,iBAAA,aAAO,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,aAAA,CAAD,OAAA,EAAA;AAAc,YAAA,IAAI,EAAlB,IAAA;AAA0B,YAAA,KAAK,EAAED,QAAQ,CAACE;AAA1C,WAAA,CAAP;AACD;;AAED,eAAA,aAAO,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,UAAA,CAAD,OAAA,EAAA;AAAW,UAAA,QAAQ,EAAEF;AAArB,SAAA,CAAP;AARW,OAAA;AAAN,KAAA;AAAP,GAAA;AAUD","sourcesContent":["import React from 'react';\n\nimport AbsoluteTime from './AbsoluteTime';\nimport Timestamp from './Timestamp';\n\nexport default function createTimestampMiddleware() {\n  return () => () => (...args) => {\n    const [{ activity, hideTimestamp }] = args;\n\n    if (hideTimestamp) {\n      // If \"hideTimestamp\" is set, we will not render the visual timestamp. But continue to render the screen reader only version.\n      return <AbsoluteTime hide={true} value={activity.timestamp} />;\n    }\n\n    return <Timestamp activity={activity} />;\n  };\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}