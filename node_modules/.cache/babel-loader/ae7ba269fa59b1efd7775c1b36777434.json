{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar RestConfigBase_1 = require(\"../../common.browser/RestConfigBase\");\n/**\n * Config settings for Conversation Translator\n */\n\n/**\n * Helpers for sending / receiving HTTPS requests / responses.\n * @param params\n */\n\n\nfunction queryParams(params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return Object.keys(params).map(function (k) {\n    return encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k]);\n  }).join(\"&\");\n}\n\nfunction withQuery(url, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  var queryString = queryParams(params);\n  return queryString ? url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + queryString : url;\n}\n\nfunction parseXHRResult(xhr) {\n  return {\n    data: xhr.responseText,\n    headers: xhr.getAllResponseHeaders(),\n    json: function json() {\n      return JSON.parse(xhr.responseText);\n    },\n    ok: xhr.status >= 200 && xhr.status < 300,\n    status: xhr.status,\n    statusText: xhr.statusText\n  };\n}\n\nfunction errorResponse(xhr, message) {\n  if (message === void 0) {\n    message = null;\n  }\n\n  return {\n    data: message || xhr.statusText,\n    headers: xhr.getAllResponseHeaders(),\n    json: function json() {\n      return JSON.parse(message || \"\\\"\" + xhr.statusText + \"\\\"\");\n    },\n    ok: false,\n    status: xhr.status,\n    statusText: xhr.statusText\n  };\n}\n\nfunction extractHeaderValue(headerKey, headers) {\n  var headerValue = \"\";\n\n  try {\n    var arr = headers.trim().split(/[\\r\\n]+/);\n    var headerMap_1 = {};\n    arr.forEach(function (line) {\n      var parts = line.split(\": \");\n      var header = parts.shift().toLowerCase();\n      var value = parts.join(\": \");\n      headerMap_1[header] = value;\n    });\n    headerValue = headerMap_1[headerKey.toLowerCase()];\n  } catch (e) {// ignore the error\n  }\n\n  return headerValue;\n}\n\nexports.extractHeaderValue = extractHeaderValue;\n\nfunction request(method, url, queryParams, body, options, callback) {\n  if (queryParams === void 0) {\n    queryParams = {};\n  }\n\n  if (body === void 0) {\n    body = null;\n  }\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var defaultRequestOptions = RestConfigBase_1.RestConfigBase.requestOptions;\n  var ignoreCache = options.ignoreCache || defaultRequestOptions.ignoreCache;\n  var headers = options.headers || defaultRequestOptions.headers;\n  var timeout = options.timeout || defaultRequestOptions.timeout;\n  var xhr = new XMLHttpRequest();\n  xhr.open(method, withQuery(url, queryParams), true);\n\n  if (headers) {\n    Object.keys(headers).forEach(function (key) {\n      return xhr.setRequestHeader(key, headers[key]);\n    });\n  }\n\n  if (ignoreCache) {\n    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n  }\n\n  xhr.timeout = timeout;\n\n  xhr.onload = function (evt) {\n    callback(parseXHRResult(xhr));\n  };\n\n  xhr.onerror = function (evt) {\n    callback(errorResponse(xhr, \"Failed to make request.\"));\n  };\n\n  xhr.ontimeout = function (evt) {\n    callback(errorResponse(xhr, \"Request took longer than expected.\"));\n  };\n\n  if (method === \"post\" && body) {\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.send(JSON.stringify(body));\n  } else {\n    xhr.send();\n  }\n}\n\nexports.request = request;\n\nfunction PromiseToEmptyCallback(promise, cb, err) {\n  if (!!promise) {\n    promise.continueWith(function (antecedent) {\n      try {\n        if (antecedent.isError) {\n          if (!!err) {\n            err(antecedent.error);\n          }\n        } else {\n          if (!!cb) {\n            cb();\n          }\n        }\n      } catch (e) {\n        if (!!err) {\n          err(\"'Unhandled error on promise callback: \" + e + \". InnerError: \" + antecedent.error + \"'\");\n        }\n      }\n    });\n  } else {\n    if (!!err) {\n      err(\"Null promise\");\n    }\n  }\n}\n\nexports.PromiseToEmptyCallback = PromiseToEmptyCallback;","map":{"version":3,"sources":["src/common.speech/Transcription/ConversationUtils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IRequestOptions, RestConfigBase } from \"../../common.browser/RestConfigBase\";\r\nimport { Promise, PromiseResult } from \"../../common/Promise\";\r\nimport { Callback } from \"../../sdk/Transcription/IConversation\";\r\nimport { IResponse } from \"./ConversationTranslatorInterfaces\";\r\n\r\n/**\r\n * Config settings for Conversation Translator\r\n */\r\n/**\r\n * Helpers for sending / receiving HTTPS requests / responses.\r\n * @param params\r\n */\r\nfunction queryParams(params: any = {}): any {\r\n    return Object.keys(params)\r\n        .map((k: any) => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k]))\r\n        .join(\"&\");\r\n}\r\n\r\nfunction withQuery(url: string, params: any = {}): any {\r\n    const queryString = queryParams(params);\r\n    return queryString ? url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + queryString : url;\r\n}\r\n\r\nfunction parseXHRResult(xhr: XMLHttpRequest): IResponse {\r\n    return {\r\n        data: xhr.responseText,\r\n        headers: xhr.getAllResponseHeaders(),\r\n        json: <T>() => JSON.parse(xhr.responseText) as T,\r\n        ok: xhr.status >= 200 && xhr.status < 300,\r\n        status: xhr.status,\r\n        statusText: xhr.statusText,\r\n    };\r\n}\r\n\r\nfunction errorResponse(xhr: XMLHttpRequest, message: string | null = null): IResponse {\r\n    return {\r\n        data: message || xhr.statusText,\r\n        headers: xhr.getAllResponseHeaders(),\r\n        json: <T>() => JSON.parse(message || (\"\\\"\" + xhr.statusText + \"\\\"\")) as T,\r\n      ok: false,\r\n      status: xhr.status,\r\n      statusText: xhr.statusText,\r\n    };\r\n}\r\n\r\nexport function extractHeaderValue(headerKey: string, headers: string): string {\r\n\r\n    let headerValue: string = \"\";\r\n\r\n    try {\r\n      const arr = headers.trim().split(/[\\r\\n]+/);\r\n      const headerMap: any = {};\r\n      arr.forEach((line: any) => {\r\n        const parts = line.split(\": \");\r\n        const header = parts.shift().toLowerCase();\r\n        const value = parts.join(\": \");\r\n        headerMap[header] = value;\r\n      });\r\n\r\n      headerValue = headerMap[headerKey.toLowerCase()];\r\n    } catch (e) {\r\n      // ignore the error\r\n    }\r\n\r\n    return headerValue;\r\n}\r\n\r\nexport function request(method: \"get\" | \"post\" | \"delete\",\r\n                        url: string,\r\n                        queryParams: any = {},\r\n                        body: any = null,\r\n                        options: IRequestOptions = {},\r\n                        callback: any): any {\r\n\r\n    const defaultRequestOptions = RestConfigBase.requestOptions;\r\n\r\n    const ignoreCache = options.ignoreCache || defaultRequestOptions.ignoreCache;\r\n    const headers = options.headers || defaultRequestOptions.headers;\r\n    const timeout = options.timeout || defaultRequestOptions.timeout;\r\n\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(method, withQuery(url, queryParams), true);\r\n\r\n    if (headers) {\r\n        Object.keys(headers).forEach((key: any) => xhr.setRequestHeader(key, headers[key]));\r\n    }\r\n\r\n    if (ignoreCache) {\r\n        xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\r\n    }\r\n\r\n    xhr.timeout = timeout;\r\n\r\n    xhr.onload = (evt: any) => {\r\n        callback(parseXHRResult(xhr));\r\n    };\r\n\r\n    xhr.onerror = (evt: any) => {\r\n        callback(errorResponse(xhr, \"Failed to make request.\"));\r\n    };\r\n\r\n    xhr.ontimeout = (evt: any) => {\r\n        callback(errorResponse(xhr, \"Request took longer than expected.\"));\r\n    };\r\n\r\n    if (method === \"post\" && body) {\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xhr.send(JSON.stringify(body));\r\n    } else {\r\n        xhr.send();\r\n    }\r\n}\r\n\r\nexport function PromiseToEmptyCallback<T>(promise: Promise<T>, cb?: Callback, err?: Callback): void {\r\n    if (!!promise) {\r\n        promise.continueWith((antecedent: PromiseResult<T>): void => {\r\n            try {\r\n                if (antecedent.isError) {\r\n                    if (!!err) {\r\n                        err(antecedent.error);\r\n                    }\r\n                } else {\r\n                    if (!!cb) {\r\n                        cb();\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                if (!!err) {\r\n                    err(`'Unhandled error on promise callback: ${e}. InnerError: ${antecedent.error}'`);\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        if (!!err) {\r\n            err(\"Null promise\");\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}