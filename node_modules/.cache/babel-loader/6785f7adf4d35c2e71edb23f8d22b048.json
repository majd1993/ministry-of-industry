{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Surface = _interopRequireDefault(require(\"./Utils/AccessKeySink/Surface\"));\n\nvar _BasicConnectivityStatus = _interopRequireDefault(require(\"./BasicConnectivityStatus\"));\n\nvar _BasicSendBox = _interopRequireDefault(require(\"./BasicSendBox\"));\n\nvar _BasicToaster = _interopRequireDefault(require(\"./BasicToaster\"));\n\nvar _BasicTranscript = _interopRequireDefault(require(\"./BasicTranscript\"));\n\nvar _TypeFocusSink = _interopRequireDefault(require(\"./Utils/TypeFocusSink\"));\n\nvar _useSendBoxFocusRef3 = _interopRequireDefault(require(\"./hooks/internal/useSendBoxFocusRef\"));\n\nvar _useStyleSet3 = _interopRequireDefault(require(\"./hooks/useStyleSet\"));\n\nvar _useStyleToEmotionObject = _interopRequireDefault(require(\"./hooks/internal/useStyleToEmotionObject\"));\n\nvar _useTranscriptFocusRef = _interopRequireDefault(require(\"./hooks/internal/useTranscriptFocusRef\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useDisabled = _botframeworkWebchatApi.hooks.useDisabled,\n    useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;\nvar ROOT_STYLE = {\n  display: 'flex',\n  flexDirection: 'column'\n};\nvar SINK_STYLE = {\n  display: 'flex',\n  flex: 1,\n  flexDirection: 'column',\n  overflow: 'hidden'\n};\nvar CONNECTIVITY_STATUS_STYLE = {\n  flexShrink: 0\n};\nvar SEND_BOX_CSS = {\n  flexShrink: 0\n};\nvar TOASTER_STYLE = {\n  flexShrink: 0\n};\nvar TRANSCRIPT_STYLE = {\n  flex: 1\n};\n\nvar BasicWebChat = function BasicWebChat(_ref) {\n  var className = _ref.className;\n\n  var _useStyleSet = (0, _useStyleSet3.default)(),\n      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),\n      rootStyleSet = _useStyleSet2[0].root;\n\n  var _useDisabled = useDisabled(),\n      _useDisabled2 = _slicedToArray(_useDisabled, 1),\n      disabled = _useDisabled2[0];\n\n  var _useStyleOptions = useStyleOptions(),\n      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),\n      options = _useStyleOptions2[0];\n\n  var _useSendBoxFocusRef = (0, _useSendBoxFocusRef3.default)(),\n      _useSendBoxFocusRef2 = _slicedToArray(_useSendBoxFocusRef, 1),\n      sendBoxFocusRef = _useSendBoxFocusRef2[0];\n\n  var _useTranscriptFocusRe = (0, _useTranscriptFocusRef.default)(),\n      _useTranscriptFocusRe2 = _slicedToArray(_useTranscriptFocusRe, 1),\n      transcriptFocusRef = _useTranscriptFocusRe2[0];\n\n  var styleToEmotionObject = (0, _useStyleToEmotionObject.default)();\n  var connectivityStatusClassName = styleToEmotionObject(CONNECTIVITY_STATUS_STYLE) + '';\n  var rootClassName = styleToEmotionObject(ROOT_STYLE) + '';\n  var sendBoxClassName = styleToEmotionObject(SEND_BOX_CSS) + '';\n  var sinkClassName = styleToEmotionObject(SINK_STYLE) + '';\n  var toasterClassName = styleToEmotionObject(TOASTER_STYLE) + '';\n  var transcriptClassName = styleToEmotionObject(TRANSCRIPT_STYLE) + '';\n  return /*#__PURE__*/_react.default.createElement(_Surface.default, {\n    className: (0, _classnames.default)(rootClassName, rootStyleSet + '', (className || '') + '')\n  }, /*#__PURE__*/_react.default.createElement(_TypeFocusSink.default, {\n    className: sinkClassName,\n    disabled: disabled,\n    ref: transcriptFocusRef,\n    role: \"complementary\",\n    sendFocusRef: sendBoxFocusRef\n  }, !options.hideToaster && /*#__PURE__*/_react.default.createElement(_BasicToaster.default, {\n    className: toasterClassName\n  }), /*#__PURE__*/_react.default.createElement(_BasicTranscript.default, {\n    className: transcriptClassName\n  }), /*#__PURE__*/_react.default.createElement(_BasicConnectivityStatus.default, {\n    className: connectivityStatusClassName\n  }), !options.hideSendBox && /*#__PURE__*/_react.default.createElement(_BasicSendBox.default, {\n    className: sendBoxClassName\n  })));\n};\n\nvar _default = BasicWebChat;\nexports.default = _default;\nBasicWebChat.defaultProps = {\n  className: ''\n};\nBasicWebChat.propTypes = {\n  className: _propTypes.default.string\n};","map":{"version":3,"sources":["../src/BasicWebChat.js"],"names":["useDisabled","useStyleOptions","hooks","ROOT_STYLE","display","flexDirection","SINK_STYLE","flex","overflow","CONNECTIVITY_STATUS_STYLE","flexShrink","SEND_BOX_CSS","TOASTER_STYLE","TRANSCRIPT_STYLE","BasicWebChat","className","rootStyleSet","disabled","options","sendBoxFocusRef","transcriptFocusRef","styleToEmotionObject","connectivityStatusClassName","rootClassName","sendBoxClassName","sinkClassName","toasterClassName","transcriptClassName","PropTypes","string"],"mappings":"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","sourcesContent":["/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 2] }] */\n/* eslint react/no-unsafe: off */\n\nimport { hooks } from 'botframework-webchat-api';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport AccessKeySinkSurface from './Utils/AccessKeySink/Surface';\nimport BasicConnectivityStatus from './BasicConnectivityStatus';\nimport BasicSendBox from './BasicSendBox';\nimport BasicToaster from './BasicToaster';\nimport BasicTranscript from './BasicTranscript';\nimport TypeFocusSinkBox from './Utils/TypeFocusSink';\nimport useSendBoxFocusRef from './hooks/internal/useSendBoxFocusRef';\nimport useStyleSet from './hooks/useStyleSet';\nimport useStyleToEmotionObject from './hooks/internal/useStyleToEmotionObject';\nimport useTranscriptFocusRef from './hooks/internal/useTranscriptFocusRef';\n\nconst { useDisabled, useStyleOptions } = hooks;\n\nconst ROOT_STYLE = {\n  display: 'flex',\n  flexDirection: 'column'\n};\n\nconst SINK_STYLE = {\n  display: 'flex',\n  flex: 1,\n  flexDirection: 'column',\n  overflow: 'hidden'\n};\n\nconst CONNECTIVITY_STATUS_STYLE = {\n  flexShrink: 0\n};\n\nconst SEND_BOX_CSS = {\n  flexShrink: 0\n};\n\nconst TOASTER_STYLE = {\n  flexShrink: 0\n};\n\nconst TRANSCRIPT_STYLE = {\n  flex: 1\n};\n\nconst BasicWebChat = ({ className }) => {\n  const [{ root: rootStyleSet }] = useStyleSet();\n  const [disabled] = useDisabled();\n  const [options] = useStyleOptions();\n  const [sendBoxFocusRef] = useSendBoxFocusRef();\n  const [transcriptFocusRef] = useTranscriptFocusRef();\n  const styleToEmotionObject = useStyleToEmotionObject();\n\n  const connectivityStatusClassName = styleToEmotionObject(CONNECTIVITY_STATUS_STYLE) + '';\n  const rootClassName = styleToEmotionObject(ROOT_STYLE) + '';\n  const sendBoxClassName = styleToEmotionObject(SEND_BOX_CSS) + '';\n  const sinkClassName = styleToEmotionObject(SINK_STYLE) + '';\n  const toasterClassName = styleToEmotionObject(TOASTER_STYLE) + '';\n  const transcriptClassName = styleToEmotionObject(TRANSCRIPT_STYLE) + '';\n\n  return (\n    <AccessKeySinkSurface className={classNames(rootClassName, rootStyleSet + '', (className || '') + '')}>\n      <TypeFocusSinkBox\n        className={sinkClassName}\n        disabled={disabled}\n        ref={transcriptFocusRef}\n        role=\"complementary\"\n        sendFocusRef={sendBoxFocusRef}\n      >\n        {!options.hideToaster && <BasicToaster className={toasterClassName} />}\n        <BasicTranscript className={transcriptClassName} />\n        <BasicConnectivityStatus className={connectivityStatusClassName} />\n        {!options.hideSendBox && <BasicSendBox className={sendBoxClassName} />}\n      </TypeFocusSinkBox>\n    </AccessKeySinkSurface>\n  );\n};\n\nexport default BasicWebChat;\n\nBasicWebChat.defaultProps = {\n  className: ''\n};\n\nBasicWebChat.propTypes = {\n  className: PropTypes.string\n};\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}