{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ImageContent = _interopRequireDefault(require(\"./ImageContent\"));\n\nvar _readDataURIToBlob = _interopRequireDefault(require(\"../Utils/readDataURIToBlob\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar ImageAttachment = function ImageAttachment(_ref) {\n  var attachment = _ref.attachment;\n  var imageURL = attachment.thumbnailUrl || attachment.contentUrl; // To support Content Security Policy, data URI cannot be used.\n  // We need to parse the data URI into a blob: URL.\n\n  var blob = (0, _readDataURIToBlob.default)(imageURL);\n\n  if (blob) {\n    imageURL = URL.createObjectURL(blob);\n  }\n\n  return /*#__PURE__*/_react.default.createElement(_ImageContent.default, {\n    alt: attachment.name,\n    src: imageURL\n  });\n};\n\nImageAttachment.propTypes = {\n  // Either attachment.contentUrl or attachment.thumbnailUrl must be specified.\n  attachment: _propTypes.default.oneOfType([_propTypes.default.shape({\n    contentUrl: _propTypes.default.string.isRequired,\n    name: _propTypes.default.string,\n    thumbnailUrl: _propTypes.default.string\n  }), _propTypes.default.shape({\n    contentUrl: _propTypes.default.string,\n    name: _propTypes.default.string,\n    thumbnailUrl: _propTypes.default.string.isRequired\n  })]).isRequired\n};\nvar _default = ImageAttachment;\nexports.default = _default;","map":{"version":3,"sources":["../../src/Attachment/ImageAttachment.js"],"names":["ImageAttachment","attachment","imageURL","blob","URL","contentUrl","PropTypes","name","thumbnailUrl","string","isRequired"],"mappings":";;;;;;;AAAA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AACA,IAAA,kBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,4BAAA,CAAA,CAAA;;;;;;;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAA,IAAA,EAAoB;AAAA,MAAjBC,UAAiB,GAAA,IAAA,CAAjBA,UAAiB;AAC1C,MAAIC,QAAQ,GAAGD,UAAU,CAAVA,YAAAA,IAA2BA,UAAU,CADV,UAC1C,CAD0C,CAG1C;AACA;;AACA,MAAME,IAAI,GAAG,CAAA,GAAA,kBAAA,CAAA,OAAA,EAAb,QAAa,CAAb;;AAEA,MAAA,IAAA,EAAU;AACRD,IAAAA,QAAQ,GAAGE,GAAG,CAAHA,eAAAA,CAAXF,IAAWE,CAAXF;AACD;;AAED,SAAA,aAAO,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,aAAA,CAAD,OAAA,EAAA;AAAc,IAAA,GAAG,EAAED,UAAU,CAA7B,IAAA;AAAoC,IAAA,GAAG,EAAEC;AAAzC,GAAA,CAAP;AAXF,CAAA;;AAcAF,eAAe,CAAfA,SAAAA,GAA4B;AAC1B;AACAC,EAAAA,UAAU,EAAE,UAAA,CAAA,OAAA,CAAA,SAAA,CAAoB,CAC9B,UAAA,CAAA,OAAA,CAAA,KAAA,CAAgB;AACdI,IAAAA,UAAU,EAAEC,UAAAA,CAAAA,OAAAA,CAAAA,MAAAA,CADE,UAAA;AAEdC,IAAAA,IAAI,EAAED,UAAAA,CAAAA,OAAAA,CAFQ,MAAA;AAGdE,IAAAA,YAAY,EAAEF,UAAAA,CAAAA,OAAAA,CAAUG;AAHV,GAAhB,CAD8B,EAM9B,UAAA,CAAA,OAAA,CAAA,KAAA,CAAgB;AACdJ,IAAAA,UAAU,EAAEC,UAAAA,CAAAA,OAAAA,CADE,MAAA;AAEdC,IAAAA,IAAI,EAAED,UAAAA,CAAAA,OAAAA,CAFQ,MAAA;AAGdE,IAAAA,YAAY,EAAEF,UAAAA,CAAAA,OAAAA,CAAAA,MAAAA,CAAiBI;AAHjB,GAAhB,CAN8B,CAApB,EAWTA;AAbuB,CAA5BV;eAgBeA,e","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport ImageContent from './ImageContent';\nimport readDataURIToBlob from '../Utils/readDataURIToBlob';\n\nconst ImageAttachment = ({ attachment }) => {\n  let imageURL = attachment.thumbnailUrl || attachment.contentUrl;\n\n  // To support Content Security Policy, data URI cannot be used.\n  // We need to parse the data URI into a blob: URL.\n  const blob = readDataURIToBlob(imageURL);\n\n  if (blob) {\n    imageURL = URL.createObjectURL(blob);\n  }\n\n  return <ImageContent alt={attachment.name} src={imageURL} />;\n};\n\nImageAttachment.propTypes = {\n  // Either attachment.contentUrl or attachment.thumbnailUrl must be specified.\n  attachment: PropTypes.oneOfType([\n    PropTypes.shape({\n      contentUrl: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      thumbnailUrl: PropTypes.string\n    }),\n    PropTypes.shape({\n      contentUrl: PropTypes.string,\n      name: PropTypes.string,\n      thumbnailUrl: PropTypes.string.isRequired\n    })\n  ]).isRequired\n};\n\nexport default ImageAttachment;\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}