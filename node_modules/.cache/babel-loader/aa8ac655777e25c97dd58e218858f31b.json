{"ast":null,"code":"import _classCallCheck from \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport var RestConfigBase = /*#__PURE__*/function () {\n  function RestConfigBase() {\n    _classCallCheck(this, RestConfigBase);\n  }\n\n  _createClass(RestConfigBase, null, [{\n    key: \"requestOptions\",\n    get: function get() {\n      return RestConfigBase.privDefaultRequestOptions;\n    }\n  }, {\n    key: \"configParams\",\n    get: function get() {\n      return RestConfigBase.privDefaultParams;\n    }\n  }, {\n    key: \"restErrors\",\n    get: function get() {\n      return RestConfigBase.privRestErrors;\n    }\n  }]);\n\n  return RestConfigBase;\n}();\nRestConfigBase.privDefaultRequestOptions = {\n  headers: {\n    Accept: \"application/json\"\n  },\n  ignoreCache: false,\n  timeout: 10000\n};\nRestConfigBase.privRestErrors = {\n  authInvalidSubscriptionKey: \"You must specify either an authentication token to use, or a Cognitive Speech subscription key.\",\n  authInvalidSubscriptionRegion: \"You must specify the Cognitive Speech region to use.\",\n  invalidArgs: \"Required input not found: {arg}.\",\n  invalidCreateJoinConversationResponse: \"Creating/Joining conversation failed with HTTP {status}.\",\n  invalidParticipantRequest: \"The requested participant was not found.\",\n  permissionDeniedConnect: \"Required credentials not found.\",\n  permissionDeniedConversation: \"Invalid operation: only the host can {command} the conversation.\",\n  permissionDeniedParticipant: \"Invalid operation: only the host can {command} a participant.\",\n  permissionDeniedSend: \"Invalid operation: the conversation is not in a connected state.\",\n  permissionDeniedStart: \"Invalid operation: there is already an active conversation.\"\n};\nRestConfigBase.privDefaultParams = {\n  apiVersion: \"api-version\",\n  authorization: \"Authorization\",\n  clientAppId: \"X-ClientAppId\",\n  contentTypeKey: \"Content-Type\",\n  correlationId: \"X-CorrelationId\",\n  languageCode: \"language\",\n  nickname: \"nickname\",\n  profanity: \"profanity\",\n  requestId: \"X-RequestId\",\n  roomId: \"roomid\",\n  sessionToken: \"token\",\n  subscriptionKey: \"Ocp-Apim-Subscription-Key\",\n  subscriptionRegion: \"Ocp-Apim-Subscription-Region\",\n  token: \"X-CapitoToken\"\n};","map":{"version":3,"sources":["src/common.browser/RestConfigBase.ts"],"names":[],"mappings":";;AAAA;AACA;AA6BA,WAAa,cAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,SAEW,eAAyB;AAC5B,aAAO,cAAc,CAAC,yBAAtB;AACH;AAJL;AAAA;AAAA,SAMW,eAAuB;AAC1B,aAAO,cAAc,CAAC,iBAAtB;AACH;AARL;AAAA;AAAA,SAUW,eAAqB;AACxB,aAAO,cAAc,CAAC,cAAtB;AACH;AAZL;;AAAA;AAAA;AAc4B,cAAA,CAAA,yBAAA,GAA6C;AACjE,EAAA,OAAO,EAAE;AACL,IAAA,MAAM,EAAE;AADH,GADwD;AAIjE,EAAA,WAAW,EAAE,KAJoD;AAKjE,EAAA,OAAO,EAAE;AALwD,CAA7C;AAQA,cAAA,CAAA,cAAA,GAAiC;AACrD,EAAA,0BAA0B,EAAE,iGADyB;AAErD,EAAA,6BAA6B,EAAE,sDAFsB;AAGrD,EAAA,WAAW,EAAE,kCAHwC;AAIrD,EAAA,qCAAqC,EAAE,0DAJc;AAKrD,EAAA,yBAAyB,EAAE,0CAL0B;AAMrD,EAAA,uBAAuB,EAAE,iCAN4B;AAOrD,EAAA,4BAA4B,EAAE,kEAPuB;AAQrD,EAAA,2BAA2B,EAAE,+DARwB;AASrD,EAAA,oBAAoB,EAAE,kEAT+B;AAUrD,EAAA,qBAAqB,EAAE;AAV8B,CAAjC;AAaA,cAAA,CAAA,iBAAA,GAAiC;AACrD,EAAA,UAAU,EAAE,aADyC;AAErD,EAAA,aAAa,EAAE,eAFsC;AAGrD,EAAA,WAAW,EAAE,eAHwC;AAIrD,EAAA,cAAc,EAAE,cAJqC;AAKrD,EAAA,aAAa,EAAE,iBALsC;AAMrD,EAAA,YAAY,EAAE,UANuC;AAOrD,EAAA,QAAQ,EAAE,UAP2C;AAQrD,EAAA,SAAS,EAAE,WAR0C;AASrD,EAAA,SAAS,EAAE,aAT0C;AAUrD,EAAA,MAAM,EAAE,QAV6C;AAWrD,EAAA,YAAY,EAAE,OAXuC;AAYrD,EAAA,eAAe,EAAE,2BAZoC;AAarD,EAAA,kBAAkB,EAAE,8BAbiC;AAcrD,EAAA,KAAK,EAAE;AAd8C,CAAjC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IErrorMessages } from \"../common/Exports\";\r\n/**\r\n * HTTP request helper\r\n */\r\nexport interface IRequestOptions {\r\n    headers?: {[key: string]: string};\r\n    ignoreCache?: boolean;\r\n    timeout?: number;\r\n}\r\n\r\nexport interface IRestParams {\r\n    apiVersion: string;\r\n    authorization: string;\r\n    clientAppId: string;\r\n    contentTypeKey: string;\r\n    correlationId: string;\r\n    languageCode: string;\r\n    nickname: string;\r\n    profanity: string;\r\n    requestId: string;\r\n    roomId: string;\r\n    sessionToken: string;\r\n    subscriptionKey: string;\r\n    subscriptionRegion: string;\r\n    token: string;\r\n}\r\n\r\nexport class RestConfigBase {\r\n\r\n    public static get requestOptions(): IRequestOptions {\r\n        return RestConfigBase.privDefaultRequestOptions;\r\n    }\r\n\r\n    public static get configParams(): IRestParams {\r\n        return RestConfigBase.privDefaultParams;\r\n    }\r\n\r\n    public static get restErrors(): IErrorMessages {\r\n        return RestConfigBase.privRestErrors;\r\n    }\r\n\r\n    private static readonly privDefaultRequestOptions: IRequestOptions = {\r\n        headers: {\r\n            Accept: \"application/json\",\r\n        },\r\n        ignoreCache: false,\r\n        timeout: 10000,\r\n    };\r\n\r\n    private static readonly privRestErrors: IErrorMessages = {\r\n        authInvalidSubscriptionKey: \"You must specify either an authentication token to use, or a Cognitive Speech subscription key.\",\r\n        authInvalidSubscriptionRegion: \"You must specify the Cognitive Speech region to use.\",\r\n        invalidArgs: \"Required input not found: {arg}.\",\r\n        invalidCreateJoinConversationResponse: \"Creating/Joining conversation failed with HTTP {status}.\",\r\n        invalidParticipantRequest: \"The requested participant was not found.\",\r\n        permissionDeniedConnect: \"Required credentials not found.\",\r\n        permissionDeniedConversation: \"Invalid operation: only the host can {command} the conversation.\",\r\n        permissionDeniedParticipant: \"Invalid operation: only the host can {command} a participant.\",\r\n        permissionDeniedSend: \"Invalid operation: the conversation is not in a connected state.\",\r\n        permissionDeniedStart: \"Invalid operation: there is already an active conversation.\",\r\n    };\r\n\r\n    private static readonly privDefaultParams: IRestParams = {\r\n        apiVersion: \"api-version\",\r\n        authorization: \"Authorization\",\r\n        clientAppId: \"X-ClientAppId\",\r\n        contentTypeKey: \"Content-Type\",\r\n        correlationId: \"X-CorrelationId\",\r\n        languageCode: \"language\",\r\n        nickname: \"nickname\",\r\n        profanity: \"profanity\",\r\n        requestId: \"X-RequestId\",\r\n        roomId: \"roomid\",\r\n        sessionToken: \"token\",\r\n        subscriptionKey: \"Ocp-Apim-Subscription-Key\",\r\n        subscriptionRegion: \"Ocp-Apim-Subscription-Region\",\r\n        token: \"X-CapitoToken\",\r\n    };\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}