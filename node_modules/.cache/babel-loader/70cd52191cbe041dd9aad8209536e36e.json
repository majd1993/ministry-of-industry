{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar RestConfigBase =\n/** @class */\nfunction () {\n  function RestConfigBase() {}\n\n  Object.defineProperty(RestConfigBase, \"requestOptions\", {\n    get: function get() {\n      return RestConfigBase.privDefaultRequestOptions;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RestConfigBase, \"configParams\", {\n    get: function get() {\n      return RestConfigBase.privDefaultParams;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RestConfigBase, \"restErrors\", {\n    get: function get() {\n      return RestConfigBase.privRestErrors;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  RestConfigBase.privDefaultRequestOptions = {\n    headers: {\n      Accept: \"application/json\"\n    },\n    ignoreCache: false,\n    timeout: 10000\n  };\n  RestConfigBase.privRestErrors = {\n    authInvalidSubscriptionKey: \"You must specify either an authentication token to use, or a Cognitive Speech subscription key.\",\n    authInvalidSubscriptionRegion: \"You must specify the Cognitive Speech region to use.\",\n    invalidArgs: \"Required input not found: {arg}.\",\n    invalidCreateJoinConversationResponse: \"Creating/Joining conversation failed with HTTP {status}.\",\n    invalidParticipantRequest: \"The requested participant was not found.\",\n    permissionDeniedConnect: \"Required credentials not found.\",\n    permissionDeniedConversation: \"Invalid operation: only the host can {command} the conversation.\",\n    permissionDeniedParticipant: \"Invalid operation: only the host can {command} a participant.\",\n    permissionDeniedSend: \"Invalid operation: the conversation is not in a connected state.\",\n    permissionDeniedStart: \"Invalid operation: there is already an active conversation.\"\n  };\n  RestConfigBase.privDefaultParams = {\n    apiVersion: \"api-version\",\n    authorization: \"Authorization\",\n    clientAppId: \"X-ClientAppId\",\n    contentTypeKey: \"Content-Type\",\n    correlationId: \"X-CorrelationId\",\n    languageCode: \"language\",\n    nickname: \"nickname\",\n    profanity: \"profanity\",\n    requestId: \"X-RequestId\",\n    roomId: \"roomid\",\n    sessionToken: \"token\",\n    subscriptionKey: \"Ocp-Apim-Subscription-Key\",\n    subscriptionRegion: \"Ocp-Apim-Subscription-Region\",\n    token: \"X-CapitoToken\"\n  };\n  return RestConfigBase;\n}();\n\nexports.RestConfigBase = RestConfigBase;","map":{"version":3,"sources":["src/common.browser/RestConfigBase.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AA6BA,IAAA,cAAA;AAAA;AAAA,YAAA;AAAA,WAAA,cAAA,GAAA,CAoDC;;AAlDG,EAAA,MAAA,CAAA,cAAA,CAAkB,cAAlB,EAAkB,gBAAlB,EAAgC;SAAhC,eAAA;AACI,aAAO,cAAc,CAAC,yBAAtB;AACH,KAF+B;oBAAA;;AAAA,GAAhC;AAIA,EAAA,MAAA,CAAA,cAAA,CAAkB,cAAlB,EAAkB,cAAlB,EAA8B;SAA9B,eAAA;AACI,aAAO,cAAc,CAAC,iBAAtB;AACH,KAF6B;oBAAA;;AAAA,GAA9B;AAIA,EAAA,MAAA,CAAA,cAAA,CAAkB,cAAlB,EAAkB,YAAlB,EAA4B;SAA5B,eAAA;AACI,aAAO,cAAc,CAAC,cAAtB;AACH,KAF2B;oBAAA;;AAAA,GAA5B;AAIwB,EAAA,cAAA,CAAA,yBAAA,GAA6C;AACjE,IAAA,OAAO,EAAE;AACL,MAAA,MAAM,EAAE;AADH,KADwD;AAIjE,IAAA,WAAW,EAAE,KAJoD;AAKjE,IAAA,OAAO,EAAE;AALwD,GAA7C;AAQA,EAAA,cAAA,CAAA,cAAA,GAAiC;AACrD,IAAA,0BAA0B,EAAE,iGADyB;AAErD,IAAA,6BAA6B,EAAE,sDAFsB;AAGrD,IAAA,WAAW,EAAE,kCAHwC;AAIrD,IAAA,qCAAqC,EAAE,0DAJc;AAKrD,IAAA,yBAAyB,EAAE,0CAL0B;AAMrD,IAAA,uBAAuB,EAAE,iCAN4B;AAOrD,IAAA,4BAA4B,EAAE,kEAPuB;AAQrD,IAAA,2BAA2B,EAAE,+DARwB;AASrD,IAAA,oBAAoB,EAAE,kEAT+B;AAUrD,IAAA,qBAAqB,EAAE;AAV8B,GAAjC;AAaA,EAAA,cAAA,CAAA,iBAAA,GAAiC;AACrD,IAAA,UAAU,EAAE,aADyC;AAErD,IAAA,aAAa,EAAE,eAFsC;AAGrD,IAAA,WAAW,EAAE,eAHwC;AAIrD,IAAA,cAAc,EAAE,cAJqC;AAKrD,IAAA,aAAa,EAAE,iBALsC;AAMrD,IAAA,YAAY,EAAE,UANuC;AAOrD,IAAA,QAAQ,EAAE,UAP2C;AAQrD,IAAA,SAAS,EAAE,WAR0C;AASrD,IAAA,SAAS,EAAE,aAT0C;AAUrD,IAAA,MAAM,EAAE,QAV6C;AAWrD,IAAA,YAAY,EAAE,OAXuC;AAYrD,IAAA,eAAe,EAAE,2BAZoC;AAarD,IAAA,kBAAkB,EAAE,8BAbiC;AAcrD,IAAA,KAAK,EAAE;AAd8C,GAAjC;AAiB5B,SAAA,cAAA;AAAC,CApDD,EAAA;;AAAa,OAAA,CAAA,cAAA,GAAA,cAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IErrorMessages } from \"../common/Exports\";\r\n/**\r\n * HTTP request helper\r\n */\r\nexport interface IRequestOptions {\r\n    headers?: {[key: string]: string};\r\n    ignoreCache?: boolean;\r\n    timeout?: number;\r\n}\r\n\r\nexport interface IRestParams {\r\n    apiVersion: string;\r\n    authorization: string;\r\n    clientAppId: string;\r\n    contentTypeKey: string;\r\n    correlationId: string;\r\n    languageCode: string;\r\n    nickname: string;\r\n    profanity: string;\r\n    requestId: string;\r\n    roomId: string;\r\n    sessionToken: string;\r\n    subscriptionKey: string;\r\n    subscriptionRegion: string;\r\n    token: string;\r\n}\r\n\r\nexport class RestConfigBase {\r\n\r\n    public static get requestOptions(): IRequestOptions {\r\n        return RestConfigBase.privDefaultRequestOptions;\r\n    }\r\n\r\n    public static get configParams(): IRestParams {\r\n        return RestConfigBase.privDefaultParams;\r\n    }\r\n\r\n    public static get restErrors(): IErrorMessages {\r\n        return RestConfigBase.privRestErrors;\r\n    }\r\n\r\n    private static readonly privDefaultRequestOptions: IRequestOptions = {\r\n        headers: {\r\n            Accept: \"application/json\",\r\n        },\r\n        ignoreCache: false,\r\n        timeout: 10000,\r\n    };\r\n\r\n    private static readonly privRestErrors: IErrorMessages = {\r\n        authInvalidSubscriptionKey: \"You must specify either an authentication token to use, or a Cognitive Speech subscription key.\",\r\n        authInvalidSubscriptionRegion: \"You must specify the Cognitive Speech region to use.\",\r\n        invalidArgs: \"Required input not found: {arg}.\",\r\n        invalidCreateJoinConversationResponse: \"Creating/Joining conversation failed with HTTP {status}.\",\r\n        invalidParticipantRequest: \"The requested participant was not found.\",\r\n        permissionDeniedConnect: \"Required credentials not found.\",\r\n        permissionDeniedConversation: \"Invalid operation: only the host can {command} the conversation.\",\r\n        permissionDeniedParticipant: \"Invalid operation: only the host can {command} a participant.\",\r\n        permissionDeniedSend: \"Invalid operation: the conversation is not in a connected state.\",\r\n        permissionDeniedStart: \"Invalid operation: there is already an active conversation.\",\r\n    };\r\n\r\n    private static readonly privDefaultParams: IRestParams = {\r\n        apiVersion: \"api-version\",\r\n        authorization: \"Authorization\",\r\n        clientAppId: \"X-ClientAppId\",\r\n        contentTypeKey: \"Content-Type\",\r\n        correlationId: \"X-CorrelationId\",\r\n        languageCode: \"language\",\r\n        nickname: \"nickname\",\r\n        profanity: \"profanity\",\r\n        requestId: \"X-RequestId\",\r\n        roomId: \"roomid\",\r\n        sessionToken: \"token\",\r\n        subscriptionKey: \"Ocp-Apim-Subscription-Key\",\r\n        subscriptionRegion: \"Ocp-Apim-Subscription-Region\",\r\n        token: \"X-CapitoToken\",\r\n    };\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"script"}