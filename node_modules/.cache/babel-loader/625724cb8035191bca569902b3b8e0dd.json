{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\n\n\nvar ArgumentOutOfRangeError = function (_super) {\n  __extends(ArgumentOutOfRangeError, _super);\n\n  function ArgumentOutOfRangeError() {\n    var err = _super.call(this, 'argument out of range');\n\n    this.name = err.name = 'ArgumentOutOfRangeError';\n    this.stack = err.stack;\n    this.message = err.message;\n  }\n\n  return ArgumentOutOfRangeError;\n}(Error);\n\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;","map":{"version":3,"sources":["../../src/util/ArgumentOutOfRangeError.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;AASG;;;AACH,IAAA,uBAAA,GAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,SAAA,CAAA,uBAAA,EAAA,MAAA,CAAA;;AAC3C,WAAA,uBAAA,GAAA;AACE,QAAM,GAAG,GAAQ,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,uBAAN,CAAjB;;AACO,SAAM,IAAN,GAAa,GAAG,CAAC,IAAJ,GAAW,yBAAxB;AACA,SAAM,KAAN,GAAc,GAAG,CAAC,KAAlB;AACA,SAAM,OAAN,GAAgB,GAAG,CAAC,OAApB;AACR;;AACH,SAAA,uBAAA;AAAC,CAPD,CAA6C,KAA7C,CAAA;;AAAa,OAAA,CAAA,uBAAA,GAAuB,uBAAvB","sourcesContent":["/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n  constructor() {\n    const err: any = super('argument out of range');\n    (<any> this).name = err.name = 'ArgumentOutOfRangeError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}