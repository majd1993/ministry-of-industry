{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exports_1 = require(\"./Exports\");\n/**\n * Intent recognition result.\n * @class\n */\n\n\nvar IntentRecognitionResult =\n/** @class */\nfunction (_super) {\n  __extends(IntentRecognitionResult, _super);\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param intentId - The intent id.\n   * @param resultId - The result id.\n   * @param reason - The reason.\n   * @param text - The recognized text.\n   * @param duration - The duration.\n   * @param offset - The offset into the stream.\n   * @param language - Primary Language detected, if provided.\n   * @param languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n   * @param errorDetails - Error details, if provided.\n   * @param json - Additional Json, if provided.\n   * @param properties - Additional properties, if provided.\n   */\n\n\n  function IntentRecognitionResult(intentId, resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties) {\n    var _this = _super.call(this, resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties) || this;\n\n    _this.privIntentId = intentId;\n    return _this;\n  }\n\n  Object.defineProperty(IntentRecognitionResult.prototype, \"intentId\", {\n    /**\n     * A String that represents the intent identifier being recognized.\n     * @member IntentRecognitionResult.prototype.intentId\n     * @function\n     * @public\n     * @returns {string} A String that represents the intent identifier being recognized.\n     */\n    get: function get() {\n      return this.privIntentId;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return IntentRecognitionResult;\n}(Exports_1.SpeechRecognitionResult);\n\nexports.IntentRecognitionResult = IntentRecognitionResult;","map":{"version":3,"sources":["src/sdk/IntentRecognitionResult.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;AAEA;;;AAGG;;;AACH,IAAA,uBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,SAAA,CAAA,uBAAA,EAAA,MAAA,CAAA;AAGzC;;;;;;;;;;;;;;AAcG;;;AACH,WAAA,uBAAA,CAAY,QAAZ,EAA+B,QAA/B,EAAkD,MAAlD,EAAyE,IAAzE,EACY,QADZ,EAC+B,MAD/B,EACgD,QADhD,EACmE,2BADnE,EAEY,YAFZ,EAEmC,IAFnC,EAEkD,UAFlD,EAEiF;AAFjF,QAAA,KAAA,GAGI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,QAAN,EAAgB,MAAhB,EAAwB,IAAxB,EAA8B,QAA9B,EAAwC,MAAxC,EAAgD,QAAhD,EAA0D,2BAA1D,EAAuF,YAAvF,EAAqG,IAArG,EAA2G,UAA3G,KAAsH,IAH1H;;AAKI,IAAA,KAAI,CAAC,YAAL,GAAoB,QAApB;;AACH;;AASD,EAAA,MAAA,CAAA,cAAA,CAAW,uBAAA,CAAA,SAAX,EAAW,UAAX,EAAmB;AAPnB;;;;;;AAMG;SACH,eAAA;AACI,aAAO,KAAK,YAAZ;AACH,KAFkB;oBAAA;;AAAA,GAAnB;AAGJ,SAAA,uBAAA;AAAC,CApCD,CAA6C,SAAA,CAAA,uBAA7C,CAAA;;AAAa,OAAA,CAAA,uBAAA,GAAA,uBAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason, SpeechRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Intent recognition result.\r\n * @class\r\n */\r\nexport class IntentRecognitionResult extends SpeechRecognitionResult {\r\n    private privIntentId: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param intentId - The intent id.\r\n     * @param resultId - The result id.\r\n     * @param reason - The reason.\r\n     * @param text - The recognized text.\r\n     * @param duration - The duration.\r\n     * @param offset - The offset into the stream.\r\n     * @param language - Primary Language detected, if provided.\r\n     * @param languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param errorDetails - Error details, if provided.\r\n     * @param json - Additional Json, if provided.\r\n     * @param properties - Additional properties, if provided.\r\n     */\r\n    constructor(intentId?: string, resultId?: string, reason?: ResultReason, text?: string,\r\n                duration?: number, offset?: number, language?: string, languageDetectionConfidence?: string,\r\n                errorDetails?: string, json?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties);\r\n\r\n        this.privIntentId = intentId;\r\n    }\r\n\r\n    /**\r\n     * A String that represents the intent identifier being recognized.\r\n     * @member IntentRecognitionResult.prototype.intentId\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the intent identifier being recognized.\r\n     */\r\n    public get intentId(): string {\r\n        return this.privIntentId;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}