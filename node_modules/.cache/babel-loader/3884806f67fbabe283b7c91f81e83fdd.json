{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSendBoxSpeechInterimsVisible = useSendBoxSpeechInterimsVisible;\nexports.default = void 0;\n\nvar _botframeworkWebchatCore = require(\"botframework-webchat-core\");\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _DictationInterims = _interopRequireDefault(require(\"./SendBox/DictationInterims\"));\n\nvar _MicrophoneButton = _interopRequireDefault(require(\"./SendBox/MicrophoneButton\"));\n\nvar _SendButton = _interopRequireDefault(require(\"./SendBox/SendButton\"));\n\nvar _SuggestedActions = _interopRequireDefault(require(\"./SendBox/SuggestedActions\"));\n\nvar _TextBox = _interopRequireDefault(require(\"./SendBox/TextBox\"));\n\nvar _UploadButton = _interopRequireDefault(require(\"./SendBox/UploadButton\"));\n\nvar _useStyleSet3 = _interopRequireDefault(require(\"./hooks/useStyleSet\"));\n\nvar _useStyleToEmotionObject = _interopRequireDefault(require(\"./hooks/internal/useStyleToEmotionObject\"));\n\nvar _useWebSpeechPonyfill4 = _interopRequireDefault(require(\"./hooks/useWebSpeechPonyfill\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar _Constants$DictateSta = _botframeworkWebchatCore.Constants.DictateState,\n    DICTATING = _Constants$DictateSta.DICTATING,\n    STARTING = _Constants$DictateSta.STARTING;\nvar useActivities = _botframeworkWebchatApi.hooks.useActivities,\n    useDirection = _botframeworkWebchatApi.hooks.useDirection,\n    useDictateState = _botframeworkWebchatApi.hooks.useDictateState,\n    useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;\nvar ROOT_STYLE = {\n  '& > .main': {\n    display: 'flex'\n  }\n};\nvar DICTATION_INTERIMS_STYLE = {\n  flex: 10000\n};\nvar MICROPHONE_BUTTON_STYLE = {\n  flex: 1\n};\nvar TEXT_BOX_STYLE = {\n  flex: 10000\n}; // TODO: [P3] We should consider exposing core/src/definitions and use it instead\n\nfunction activityIsSpeakingOrQueuedToSpeak(_ref) {\n  var _ref$channelData = _ref.channelData;\n  _ref$channelData = _ref$channelData === void 0 ? {} : _ref$channelData;\n  var speak = _ref$channelData.speak;\n  return !!speak;\n}\n\nfunction useSendBoxSpeechInterimsVisible() {\n  var _useActivities = useActivities(),\n      _useActivities2 = _slicedToArray(_useActivities, 1),\n      activities = _useActivities2[0];\n\n  var _useDictateState = useDictateState(),\n      _useDictateState2 = _slicedToArray(_useDictateState, 1),\n      dictateState = _useDictateState2[0];\n\n  return [(dictateState === STARTING || dictateState === DICTATING) && !activities.filter(activityIsSpeakingOrQueuedToSpeak).length];\n}\n\nvar BasicSendBox = function BasicSendBox(_ref2) {\n  var className = _ref2.className;\n\n  var _useStyleOptions = useStyleOptions(),\n      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),\n      hideUploadButton = _useStyleOptions2[0].hideUploadButton;\n\n  var _useStyleSet = (0, _useStyleSet3.default)(),\n      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),\n      sendBoxStyleSet = _useStyleSet2[0].sendBox;\n\n  var _useWebSpeechPonyfill = (0, _useWebSpeechPonyfill4.default)(),\n      _useWebSpeechPonyfill2 = _slicedToArray(_useWebSpeechPonyfill, 1),\n      _useWebSpeechPonyfill3 = _useWebSpeechPonyfill2[0];\n\n  _useWebSpeechPonyfill3 = _useWebSpeechPonyfill3 === void 0 ? {} : _useWebSpeechPonyfill3;\n  var SpeechRecognition = _useWebSpeechPonyfill3.SpeechRecognition;\n\n  var _useDirection = useDirection(),\n      _useDirection2 = _slicedToArray(_useDirection, 1),\n      direction = _useDirection2[0];\n\n  var _useSendBoxSpeechInte = useSendBoxSpeechInterimsVisible(),\n      _useSendBoxSpeechInte2 = _slicedToArray(_useSendBoxSpeechInte, 1),\n      speechInterimsVisible = _useSendBoxSpeechInte2[0];\n\n  var styleToEmotionObject = (0, _useStyleToEmotionObject.default)();\n  var dictationInterimsClassName = styleToEmotionObject(DICTATION_INTERIMS_STYLE) + '';\n  var microphoneButtonClassName = styleToEmotionObject(MICROPHONE_BUTTON_STYLE) + '';\n  var rootClassName = styleToEmotionObject(ROOT_STYLE) + '';\n  var textBoxClassName = styleToEmotionObject(TEXT_BOX_STYLE) + '';\n  var supportSpeechRecognition = !!SpeechRecognition;\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: (0, _classnames.default)(sendBoxStyleSet + '', rootClassName, (className || '') + ''),\n    dir: direction,\n    role: \"form\"\n  }, /*#__PURE__*/_react.default.createElement(_SuggestedActions.default, null), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"main\"\n  }, !hideUploadButton && /*#__PURE__*/_react.default.createElement(_UploadButton.default, null), speechInterimsVisible ? /*#__PURE__*/_react.default.createElement(_DictationInterims.default, {\n    className: dictationInterimsClassName\n  }) : /*#__PURE__*/_react.default.createElement(_TextBox.default, {\n    className: textBoxClassName\n  }), /*#__PURE__*/_react.default.createElement(\"div\", null, supportSpeechRecognition ? /*#__PURE__*/_react.default.createElement(_MicrophoneButton.default, {\n    className: microphoneButtonClassName\n  }) : /*#__PURE__*/_react.default.createElement(_SendButton.default, null))));\n};\n\nBasicSendBox.defaultProps = {\n  className: ''\n};\nBasicSendBox.propTypes = {\n  className: _propTypes.default.string\n};\nvar _default = BasicSendBox;\nexports.default = _default;","map":{"version":3,"sources":["../src/BasicSendBox.js"],"names":["DictateState","DICTATING","STARTING","Constants","useActivities","useDirection","useDictateState","useStyleOptions","hooks","ROOT_STYLE","display","DICTATION_INTERIMS_STYLE","flex","MICROPHONE_BUTTON_STYLE","TEXT_BOX_STYLE","channelData","speak","activities","dictateState","BasicSendBox","className","hideUploadButton","sendBoxStyleSet","SpeechRecognition","direction","speechInterimsVisible","useSendBoxSpeechInterimsVisible","styleToEmotionObject","dictationInterimsClassName","microphoneButtonClassName","rootClassName","textBoxClassName","supportSpeechRecognition","PropTypes","string"],"mappings":";;;;;;;;AAAA,IAAA,wBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,kBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,6BAAA,CAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,4BAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,4BAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,wBAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AACA,IAAA,wBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,0CAAA,CAAA,CAAA;;AACA,IAAA,sBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,8BAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BAIIG,wBAAAA,CAAAA,SAAAA,CADFH,Y;IAAgBC,S,yBAAAA,S;IAAWC,Q,yBAAAA,Q;IAGrBE,a,GAAkEI,uBAAAA,CAAAA,KAAAA,CAAlEJ,a;IAAeC,Y,GAAmDG,uBAAAA,CAAAA,KAAAA,CAAnDH,Y;IAAcC,e,GAAqCE,uBAAAA,CAAAA,KAAAA,CAArCF,e;IAAiBC,e,GAAoBC,uBAAAA,CAAAA,KAAAA,CAApBD,e;AAEtD,IAAME,UAAU,GAAG;AACjB,eAAa;AACXC,IAAAA,OAAO,EAAE;AADE;AADI,CAAnB;AAMA,IAAMC,wBAAwB,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAjC;AACA,IAAMC,uBAAuB,GAAG;AAAED,EAAAA,IAAI,EAAE;AAAR,CAAhC;AACA,IAAME,cAAc,GAAG;AAAEF,EAAAA,IAAI,EAAE;AAAR,CAAvB,C,CAEA;;AACA,SAAA,iCAAA,CAAA,IAAA,EAA4E;AAAA,MAAA,gBAAA,GAAA,IAAA,CAA/BG,WAA+B;AAAA,EAAA,gBAAA,GAAA,gBAAA,KAAA,KAAA,CAAA,GAAN,EAAM,GAAA,gBAAA;AAAA,MAAhBC,KAAgB,GAAA,gBAAA,CAAhBA,KAAgB;AAC1E,SAAO,CAAC,CAAR,KAAA;AACD;;AAED,SAAA,+BAAA,GAA2C;AAAA,MAAA,cAAA,GACpBZ,aADoB,EAAA;AAAA,MAAA,eAAA,GAAA,cAAA,CAAA,cAAA,EAAA,CAAA,CAAA;AAAA,MAClCa,UADkC,GAAA,eAAA,CAAA,CAAA,CAAA;;AAAA,MAAA,gBAAA,GAElBX,eAFkB,EAAA;AAAA,MAAA,iBAAA,GAAA,cAAA,CAAA,gBAAA,EAAA,CAAA,CAAA;AAAA,MAElCY,YAFkC,GAAA,iBAAA,CAAA,CAAA,CAAA;;AAIzC,SAAO,CACL,CAACA,YAAY,KAAZA,QAAAA,IAA6BA,YAAY,KAA1C,SAAA,KACE,CAACD,UAAU,CAAVA,MAAAA,CAAAA,iCAAAA,EAFL,MAAO,CAAP;AAID;;AAED,IAAME,YAAY,GAAG,SAAfA,YAAe,CAAA,KAAA,EAAmB;AAAA,MAAhBC,SAAgB,GAAA,KAAA,CAAhBA,SAAgB;;AAAA,MAAA,gBAAA,GACPb,eADO,EAAA;AAAA,MAAA,iBAAA,GAAA,cAAA,CAAA,gBAAA,EAAA,CAAA,CAAA;AAAA,MAC7Bc,gBAD6B,GAAA,iBAAA,CAAA,CAAA,CAAA,CAAA,gBAAA;;AAAA,MAAA,YAAA,GAEC,CAAA,GAAA,aAAA,CAFD,OAEC,GAFD;AAAA,MAAA,aAAA,GAAA,cAAA,CAAA,YAAA,EAAA,CAAA,CAAA;AAAA,MAEpBC,eAFoB,GAAA,aAAA,CAAA,CAAA,CAAA,CAAA,OAAA;;AAAA,MAAA,qBAAA,GAGD,CAAA,GAAA,sBAAA,CAHC,OAGD,GAHC;AAAA,MAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA,EAAA,CAAA,CAAA;AAAA,MAAA,sBAAA,GAAA,sBAAA,CAAA,CAAA,CAAA;;AAAA,EAAA,sBAAA,GAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,sBAAA;AAAA,MAG7BC,iBAH6B,GAAA,sBAAA,CAAA,iBAAA;;AAAA,MAAA,aAAA,GAIlBlB,YAJkB,EAAA;AAAA,MAAA,cAAA,GAAA,cAAA,CAAA,aAAA,EAAA,CAAA,CAAA;AAAA,MAI/BmB,SAJ+B,GAAA,cAAA,CAAA,CAAA,CAAA;;AAAA,MAAA,qBAAA,GAKNE,+BALM,EAAA;AAAA,MAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA,EAAA,CAAA,CAAA;AAAA,MAK/BD,qBAL+B,GAAA,sBAAA,CAAA,CAAA,CAAA;;AAMtC,MAAME,oBAAoB,GAAG,CAAA,GAAA,wBAAA,CAA7B,OAA6B,GAA7B;AAEA,MAAMC,0BAA0B,GAAGD,oBAAoB,CAApBA,wBAAoB,CAApBA,GAAnC,EAAA;AACA,MAAME,yBAAyB,GAAGF,oBAAoB,CAApBA,uBAAoB,CAApBA,GAAlC,EAAA;AACA,MAAMG,aAAa,GAAGH,oBAAoB,CAApBA,UAAoB,CAApBA,GAAtB,EAAA;AACA,MAAMI,gBAAgB,GAAGJ,oBAAoB,CAApBA,cAAoB,CAApBA,GAAzB,EAAA;AAEA,MAAMK,wBAAwB,GAAG,CAAC,CAAlC,iBAAA;AAEA,SAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAE,CAAA,GAAA,WAAA,CAAA,OAAA,EAAWV,eAAe,GAA1B,EAAA,EAAA,aAAA,EAAgD,CAACF,SAAS,IAAV,EAAA,IAD7D,EACa,CADb;AAEE,IAAA,GAAG,EAFL,SAAA;AAGE,IAAA,IAAI,EAAC;AAHP,GAAA,EAAA,aAKE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,iBAAA,CAAD,OAAA,EALF,IAKE,CALF,EAAA,aAME,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACG,CAAA,gBAAA,IAAA,aAAqB,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,aAAA,CAAD,OAAA,EADxB,IACwB,CADxB,EAEGK,qBAAqB,GAAA,aACpB,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,kBAAA,CAAD,OAAA,EAAA;AAAmB,IAAA,SAAS,EAAEG;AAA9B,GAAA,CADoB,GAAA,aAGpB,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,QAAA,CAAD,OAAA,EAAA;AAAS,IAAA,SAAS,EAAEG;AAApB,GAAA,CALJ,EAAA,aAOE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACGC,wBAAwB,GAAA,aAAG,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,iBAAA,CAAD,OAAA,EAAA;AAAkB,IAAA,SAAS,EAAEH;AAA7B,GAAA,CAAH,GAAA,aAAgE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,WAAA,CAAD,OAAA,EAfjG,IAeiG,CAD3F,CAPF,CANF,CADF;AAfF,CAAA;;AAqCAV,YAAY,CAAZA,YAAAA,GAA4B;AAC1BC,EAAAA,SAAS,EAAE;AADe,CAA5BD;AAIAA,YAAY,CAAZA,SAAAA,GAAyB;AACvBC,EAAAA,SAAS,EAAEa,UAAAA,CAAAA,OAAAA,CAAUC;AADE,CAAzBf;eAIeA,Y","sourcesContent":["import { Constants } from 'botframework-webchat-core';\nimport { hooks } from 'botframework-webchat-api';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport DictationInterims from './SendBox/DictationInterims';\nimport MicrophoneButton from './SendBox/MicrophoneButton';\nimport SendButton from './SendBox/SendButton';\nimport SuggestedActions from './SendBox/SuggestedActions';\nimport TextBox from './SendBox/TextBox';\nimport UploadButton from './SendBox/UploadButton';\nimport useStyleSet from './hooks/useStyleSet';\nimport useStyleToEmotionObject from './hooks/internal/useStyleToEmotionObject';\nimport useWebSpeechPonyfill from './hooks/useWebSpeechPonyfill';\n\nconst {\n  DictateState: { DICTATING, STARTING }\n} = Constants;\n\nconst { useActivities, useDirection, useDictateState, useStyleOptions } = hooks;\n\nconst ROOT_STYLE = {\n  '& > .main': {\n    display: 'flex'\n  }\n};\n\nconst DICTATION_INTERIMS_STYLE = { flex: 10000 };\nconst MICROPHONE_BUTTON_STYLE = { flex: 1 };\nconst TEXT_BOX_STYLE = { flex: 10000 };\n\n// TODO: [P3] We should consider exposing core/src/definitions and use it instead\nfunction activityIsSpeakingOrQueuedToSpeak({ channelData: { speak } = {} }) {\n  return !!speak;\n}\n\nfunction useSendBoxSpeechInterimsVisible() {\n  const [activities] = useActivities();\n  const [dictateState] = useDictateState();\n\n  return [\n    (dictateState === STARTING || dictateState === DICTATING) &&\n      !activities.filter(activityIsSpeakingOrQueuedToSpeak).length\n  ];\n}\n\nconst BasicSendBox = ({ className }) => {\n  const [{ hideUploadButton }] = useStyleOptions();\n  const [{ sendBox: sendBoxStyleSet }] = useStyleSet();\n  const [{ SpeechRecognition } = {}] = useWebSpeechPonyfill();\n  const [direction] = useDirection();\n  const [speechInterimsVisible] = useSendBoxSpeechInterimsVisible();\n  const styleToEmotionObject = useStyleToEmotionObject();\n\n  const dictationInterimsClassName = styleToEmotionObject(DICTATION_INTERIMS_STYLE) + '';\n  const microphoneButtonClassName = styleToEmotionObject(MICROPHONE_BUTTON_STYLE) + '';\n  const rootClassName = styleToEmotionObject(ROOT_STYLE) + '';\n  const textBoxClassName = styleToEmotionObject(TEXT_BOX_STYLE) + '';\n\n  const supportSpeechRecognition = !!SpeechRecognition;\n\n  return (\n    <div\n      className={classNames(sendBoxStyleSet + '', rootClassName, (className || '') + '')}\n      dir={direction}\n      role=\"form\"\n    >\n      <SuggestedActions />\n      <div className=\"main\">\n        {!hideUploadButton && <UploadButton />}\n        {speechInterimsVisible ? (\n          <DictationInterims className={dictationInterimsClassName} />\n        ) : (\n          <TextBox className={textBoxClassName} />\n        )}\n        <div>\n          {supportSpeechRecognition ? <MicrophoneButton className={microphoneButtonClassName} /> : <SendButton />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nBasicSendBox.defaultProps = {\n  className: ''\n};\n\nBasicSendBox.propTypes = {\n  className: PropTypes.string\n};\n\nexport default BasicSendBox;\n\nexport { useSendBoxSpeechInterimsVisible };\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}