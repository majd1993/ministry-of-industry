{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = sagas;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _clearSuggestedActionsOnPostActivitySaga = _interopRequireDefault(require(\"./sagas/clearSuggestedActionsOnPostActivitySaga\"));\n\nvar _connectionStatusToNotificationSaga = _interopRequireDefault(require(\"./sagas/connectionStatusToNotificationSaga\"));\n\nvar _connectionStatusUpdateSaga = _interopRequireDefault(require(\"./sagas/connectionStatusUpdateSaga\"));\n\nvar _connectSaga = _interopRequireDefault(require(\"./sagas/connectSaga\"));\n\nvar _detectSlowConnectionSaga = _interopRequireDefault(require(\"./sagas/detectSlowConnectionSaga\"));\n\nvar _emitTypingIndicatorToPostActivitySaga = _interopRequireDefault(require(\"./sagas/emitTypingIndicatorToPostActivitySaga\"));\n\nvar _markAllAsSpokenOnStopSpeakActivitySaga = _interopRequireDefault(require(\"./sagas/markAllAsSpokenOnStopSpeakActivitySaga\"));\n\nvar _observeActivitySaga = _interopRequireDefault(require(\"./sagas/observeActivitySaga\"));\n\nvar _postActivitySaga = _interopRequireDefault(require(\"./sagas/postActivitySaga\"));\n\nvar _queueIncomingActivitySaga = _interopRequireDefault(require(\"./sagas/queueIncomingActivitySaga\"));\n\nvar _sendEventToPostActivitySaga = _interopRequireDefault(require(\"./sagas/sendEventToPostActivitySaga\"));\n\nvar _sendFilesToPostActivitySaga = _interopRequireDefault(require(\"./sagas/sendFilesToPostActivitySaga\"));\n\nvar _sendMessageBackToPostActivitySaga = _interopRequireDefault(require(\"./sagas/sendMessageBackToPostActivitySaga\"));\n\nvar _sendMessageToPostActivitySaga = _interopRequireDefault(require(\"./sagas/sendMessageToPostActivitySaga\"));\n\nvar _sendPostBackToPostActivitySaga = _interopRequireDefault(require(\"./sagas/sendPostBackToPostActivitySaga\"));\n\nvar _sendTypingIndicatorOnSetSendBoxSaga = _interopRequireDefault(require(\"./sagas/sendTypingIndicatorOnSetSendBoxSaga\"));\n\nvar _speakActivityAndStartDictateOnIncomingActivityFromOthersSaga = _interopRequireDefault(require(\"./sagas/speakActivityAndStartDictateOnIncomingActivityFromOthersSaga\"));\n\nvar _startDictateOnSpeakCompleteSaga = _interopRequireDefault(require(\"./sagas/startDictateOnSpeakCompleteSaga\"));\n\nvar _startSpeakActivityOnPostActivitySaga = _interopRequireDefault(require(\"./sagas/startSpeakActivityOnPostActivitySaga\"));\n\nvar _stopDictateOnCardActionSaga = _interopRequireDefault(require(\"./sagas/stopDictateOnCardActionSaga\"));\n\nvar _stopSpeakingActivityOnInputSaga = _interopRequireDefault(require(\"./sagas/stopSpeakingActivityOnInputSaga\"));\n\nvar _submitSendBoxSaga = _interopRequireDefault(require(\"./sagas/submitSendBoxSaga\"));\n\nvar _marked = /*#__PURE__*/_regenerator[\"default\"].mark(sagas);\n\nfunction sagas() {\n  return _regenerator[\"default\"].wrap(function sagas$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _effects.fork)(_clearSuggestedActionsOnPostActivitySaga[\"default\"]);\n\n        case 2:\n          _context.next = 4;\n          return (0, _effects.fork)(_connectionStatusToNotificationSaga[\"default\"]);\n\n        case 4:\n          _context.next = 6;\n          return (0, _effects.fork)(_connectionStatusUpdateSaga[\"default\"]);\n\n        case 6:\n          _context.next = 8;\n          return (0, _effects.fork)(_connectSaga[\"default\"]);\n\n        case 8:\n          _context.next = 10;\n          return (0, _effects.fork)(_detectSlowConnectionSaga[\"default\"]);\n\n        case 10:\n          _context.next = 12;\n          return (0, _effects.fork)(_emitTypingIndicatorToPostActivitySaga[\"default\"]);\n\n        case 12:\n          _context.next = 14;\n          return (0, _effects.fork)(_markAllAsSpokenOnStopSpeakActivitySaga[\"default\"]);\n\n        case 14:\n          _context.next = 16;\n          return (0, _effects.fork)(_observeActivitySaga[\"default\"]);\n\n        case 16:\n          _context.next = 18;\n          return (0, _effects.fork)(_postActivitySaga[\"default\"]);\n\n        case 18:\n          _context.next = 20;\n          return (0, _effects.fork)(_queueIncomingActivitySaga[\"default\"]);\n\n        case 20:\n          _context.next = 22;\n          return (0, _effects.fork)(_sendEventToPostActivitySaga[\"default\"]);\n\n        case 22:\n          _context.next = 24;\n          return (0, _effects.fork)(_sendFilesToPostActivitySaga[\"default\"]);\n\n        case 24:\n          _context.next = 26;\n          return (0, _effects.fork)(_sendMessageBackToPostActivitySaga[\"default\"]);\n\n        case 26:\n          _context.next = 28;\n          return (0, _effects.fork)(_sendMessageToPostActivitySaga[\"default\"]);\n\n        case 28:\n          _context.next = 30;\n          return (0, _effects.fork)(_sendPostBackToPostActivitySaga[\"default\"]);\n\n        case 30:\n          _context.next = 32;\n          return (0, _effects.fork)(_sendTypingIndicatorOnSetSendBoxSaga[\"default\"]);\n\n        case 32:\n          _context.next = 34;\n          return (0, _effects.fork)(_speakActivityAndStartDictateOnIncomingActivityFromOthersSaga[\"default\"]);\n\n        case 34:\n          _context.next = 36;\n          return (0, _effects.fork)(_startDictateOnSpeakCompleteSaga[\"default\"]);\n\n        case 36:\n          _context.next = 38;\n          return (0, _effects.fork)(_startSpeakActivityOnPostActivitySaga[\"default\"]);\n\n        case 38:\n          _context.next = 40;\n          return (0, _effects.fork)(_stopDictateOnCardActionSaga[\"default\"]);\n\n        case 40:\n          _context.next = 42;\n          return (0, _effects.fork)(_stopSpeakingActivityOnInputSaga[\"default\"]);\n\n        case 42:\n          _context.next = 44;\n          return (0, _effects.fork)(_submitSendBoxSaga[\"default\"]);\n\n        case 44:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":{"version":3,"sources":["../src/sagas.js"],"names":["sagas","clearSuggestedActionsOnPostActivitySaga","connectionStatusToNotificationSaga","connectionStatusUpdateSaga","connectSaga","detectSlowConnectionSaga","emitTypingIndicatorToPostActivitySaga","markAllAsSpokenOnStopSpeakActivitySaga","observeActivitySaga","postActivitySaga","queueIncomingActivitySaga","sendEventToPostActivitySaga","sendFilesToPostActivitySaga","sendMessageBackToPostActivitySaga","sendMessageToPostActivitySaga","sendPostBackToPostActivitySaga","sendTypingIndicatorOnSetSendBoxSaga","speakActivityAndStartDictateOnIncomingActivityFromOthersSaga","startDictateOnSpeakCompleteSaga","startSpeakActivityOnPostActivitySaga","stopDictateOnCardActionSaga","stopSpeakingActivityOnInputSaga","submitSendBoxSaga"],"mappings":"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","sourcesContent":["import { fork } from 'redux-saga/effects';\n\nimport clearSuggestedActionsOnPostActivitySaga from './sagas/clearSuggestedActionsOnPostActivitySaga';\nimport connectionStatusToNotificationSaga from './sagas/connectionStatusToNotificationSaga';\nimport connectionStatusUpdateSaga from './sagas/connectionStatusUpdateSaga';\nimport connectSaga from './sagas/connectSaga';\nimport detectSlowConnectionSaga from './sagas/detectSlowConnectionSaga';\nimport emitTypingIndicatorToPostActivitySaga from './sagas/emitTypingIndicatorToPostActivitySaga';\nimport markAllAsSpokenOnStopSpeakActivitySaga from './sagas/markAllAsSpokenOnStopSpeakActivitySaga';\nimport observeActivitySaga from './sagas/observeActivitySaga';\nimport postActivitySaga from './sagas/postActivitySaga';\nimport queueIncomingActivitySaga from './sagas/queueIncomingActivitySaga';\nimport sendEventToPostActivitySaga from './sagas/sendEventToPostActivitySaga';\nimport sendFilesToPostActivitySaga from './sagas/sendFilesToPostActivitySaga';\nimport sendMessageBackToPostActivitySaga from './sagas/sendMessageBackToPostActivitySaga';\nimport sendMessageToPostActivitySaga from './sagas/sendMessageToPostActivitySaga';\nimport sendPostBackToPostActivitySaga from './sagas/sendPostBackToPostActivitySaga';\nimport sendTypingIndicatorOnSetSendBoxSaga from './sagas/sendTypingIndicatorOnSetSendBoxSaga';\nimport speakActivityAndStartDictateOnIncomingActivityFromOthersSaga from './sagas/speakActivityAndStartDictateOnIncomingActivityFromOthersSaga';\nimport startDictateOnSpeakCompleteSaga from './sagas/startDictateOnSpeakCompleteSaga';\nimport startSpeakActivityOnPostActivitySaga from './sagas/startSpeakActivityOnPostActivitySaga';\nimport stopDictateOnCardActionSaga from './sagas/stopDictateOnCardActionSaga';\nimport stopSpeakingActivityOnInputSaga from './sagas/stopSpeakingActivityOnInputSaga';\nimport submitSendBoxSaga from './sagas/submitSendBoxSaga';\n\nexport default function* sagas() {\n  // TODO: [P2] Since fork() silently catches all exceptions, we need to find a way to console.error them out.\n\n  yield fork(clearSuggestedActionsOnPostActivitySaga);\n  yield fork(connectionStatusToNotificationSaga);\n  yield fork(connectionStatusUpdateSaga);\n  yield fork(connectSaga);\n  yield fork(detectSlowConnectionSaga);\n  yield fork(emitTypingIndicatorToPostActivitySaga);\n  yield fork(markAllAsSpokenOnStopSpeakActivitySaga);\n  yield fork(observeActivitySaga);\n  yield fork(postActivitySaga);\n  yield fork(queueIncomingActivitySaga);\n  yield fork(sendEventToPostActivitySaga);\n  yield fork(sendFilesToPostActivitySaga);\n  yield fork(sendMessageBackToPostActivitySaga);\n  yield fork(sendMessageToPostActivitySaga);\n  yield fork(sendPostBackToPostActivitySaga);\n  yield fork(sendTypingIndicatorOnSetSendBoxSaga);\n  yield fork(speakActivityAndStartDictateOnIncomingActivityFromOthersSaga);\n  yield fork(startDictateOnSpeakCompleteSaga);\n  yield fork(startSpeakActivityOnPostActivitySaga);\n  yield fork(stopDictateOnCardActionSaga);\n  yield fork(stopSpeakingActivityOnInputSaga);\n  yield fork(submitSendBoxSaga);\n}\n"],"sourceRoot":"core:///"},"metadata":{},"sourceType":"script"}