{"ast":null,"code":"import _classCallCheck from \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { InvalidOperationError } from \"../common/Error\";\nimport { DialogServiceTurnState } from \"./DialogServiceTurnState\";\nexport var DialogServiceTurnStateManager = /*#__PURE__*/function () {\n  function DialogServiceTurnStateManager() {\n    _classCallCheck(this, DialogServiceTurnStateManager);\n\n    this.privTurnMap = new Map();\n    return;\n  }\n\n  _createClass(DialogServiceTurnStateManager, [{\n    key: \"StartTurn\",\n    value: function StartTurn(id) {\n      if (this.privTurnMap.has(id)) {\n        throw new InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\n      }\n\n      var turnState = new DialogServiceTurnState(this, id);\n      this.privTurnMap.set(id, turnState);\n      return this.privTurnMap.get(id);\n    }\n  }, {\n    key: \"GetTurn\",\n    value: function GetTurn(id) {\n      return this.privTurnMap.get(id);\n    }\n  }, {\n    key: \"CompleteTurn\",\n    value: function CompleteTurn(id) {\n      if (!this.privTurnMap.has(id)) {\n        throw new InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\n      }\n\n      var turnState = this.privTurnMap.get(id);\n      turnState.complete();\n      this.privTurnMap.delete(id);\n      return turnState;\n    }\n  }]);\n\n  return DialogServiceTurnStateManager;\n}();","map":{"version":3,"sources":["src/common.speech/DialogServiceTurnStateManager.ts"],"names":[],"mappings":";;AAAA;AACA;AAEA,SAAS,qBAAT,QAAsC,iBAAtC;AAEA,SAAS,sBAAT,QAAuC,0BAAvC;AAGA,WAAa,6BAAb;AAGI,2CAAA;AAAA;;AACI,SAAK,WAAL,GAAmB,IAAI,GAAJ,EAAnB;AACA;AACH;;AANL;AAAA;AAAA,WAQW,mBAAU,EAAV,EAAoB;AACvB,UAAI,KAAK,WAAL,CAAiB,GAAjB,CAAqB,EAArB,CAAJ,EAA8B;AAC1B,cAAM,IAAI,qBAAJ,CAA0B,oDAAoD,EAA9E,CAAN;AACH;;AACD,UAAM,SAAS,GAA2B,IAAI,sBAAJ,CAA2B,IAA3B,EAAiC,EAAjC,CAA1C;AACA,WAAK,WAAL,CAAiB,GAAjB,CAAqB,EAArB,EAAyB,SAAzB;AACA,aAAO,KAAK,WAAL,CAAiB,GAAjB,CAAqB,EAArB,CAAP;AACH;AAfL;AAAA;AAAA,WAiBW,iBAAQ,EAAR,EAAkB;AACrB,aAAO,KAAK,WAAL,CAAiB,GAAjB,CAAqB,EAArB,CAAP;AACH;AAnBL;AAAA;AAAA,WAqBW,sBAAa,EAAb,EAAuB;AAC1B,UAAI,CAAC,KAAK,WAAL,CAAiB,GAAjB,CAAqB,EAArB,CAAL,EAA+B;AAC3B,cAAM,IAAI,qBAAJ,CAA0B,6DAA6D,EAAvF,CAAN;AACH;;AACD,UAAM,SAAS,GAAG,KAAK,WAAL,CAAiB,GAAjB,CAAqB,EAArB,CAAlB;AACA,MAAA,SAAS,CAAC,QAAV;AACA,WAAK,WAAL,CAAiB,MAAjB,CAAwB,EAAxB;AACA,aAAO,SAAP;AACH;AA7BL;;AAAA;AAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"../common/Error\";\r\nimport { AudioOutputStream, PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\r\nimport { DialogServiceTurnState } from \"./DialogServiceTurnState\";\r\nimport { ActivityPayloadResponse } from \"./ServiceMessages/ActivityResponsePayload\";\r\n\r\nexport class DialogServiceTurnStateManager {\r\n    private privTurnMap: Map<string, DialogServiceTurnState>;\r\n\r\n    constructor() {\r\n        this.privTurnMap = new Map<string, DialogServiceTurnState>();\r\n        return;\r\n    }\r\n\r\n    public StartTurn(id: string): DialogServiceTurnState {\r\n        if (this.privTurnMap.has(id)) {\r\n            throw new InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\r\n        }\r\n        const turnState: DialogServiceTurnState = new DialogServiceTurnState(this, id);\r\n        this.privTurnMap.set(id, turnState);\r\n        return this.privTurnMap.get(id);\r\n    }\r\n\r\n    public GetTurn(id: string): DialogServiceTurnState {\r\n        return this.privTurnMap.get(id);\r\n    }\r\n\r\n    public CompleteTurn(id: string): DialogServiceTurnState {\r\n        if (!this.privTurnMap.has(id)) {\r\n            throw new InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\r\n        }\r\n        const turnState = this.privTurnMap.get(id);\r\n        turnState.complete();\r\n        this.privTurnMap.delete(id);\r\n        return turnState;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}