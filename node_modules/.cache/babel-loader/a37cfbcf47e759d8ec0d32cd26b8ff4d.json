{"ast":null,"code":"/**\n * Globalize Runtime v1.5.0\n *\n * http://github.com/jquery/globalize\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2020-03-25T12:19Z\n */\n\n/*!\n * Globalize Runtime v1.5.0 2020-03-25T12:19Z Released under the MIT license\n * http://git.io/TrdQbw\n */\n(function (root, factory) {\n  \"use strict\"; // UMD returnExports\n\n  if (typeof define === \"function\" && define.amd) {\n    // AMD\n    define([\"../globalize-runtime\"], factory);\n  } else if (typeof exports === \"object\") {\n    // Node, CommonJS\n    module.exports = factory(require(\"../globalize-runtime\"));\n  } else {\n    // Extend global\n    factory(root.Globalize);\n  }\n})(this, function (Globalize) {\n  var runtimeKey = Globalize._runtimeKey,\n      validateParameterPresence = Globalize._validateParameterPresence,\n      validateParameterType = Globalize._validateParameterType;\n\n  var validateParameterTypeNumber = function validateParameterTypeNumber(value, name) {\n    validateParameterType(value, name, value === undefined || typeof value === \"number\", \"Number\");\n  };\n\n  var pluralGeneratorFn = function pluralGeneratorFn(plural) {\n    return function pluralGenerator(value) {\n      validateParameterPresence(value, \"value\");\n      validateParameterTypeNumber(value, \"value\");\n      return plural(value);\n    };\n  };\n\n  Globalize._pluralGeneratorFn = pluralGeneratorFn;\n  Globalize._validateParameterTypeNumber = validateParameterTypeNumber;\n\n  Globalize.plural = Globalize.prototype.plural = function (value, options) {\n    validateParameterPresence(value, \"value\");\n    validateParameterTypeNumber(value, \"value\");\n    return this.pluralGenerator(options)(value);\n  };\n\n  Globalize.pluralGenerator = Globalize.prototype.pluralGenerator = function (options) {\n    options = options || {};\n    return Globalize[runtimeKey(\"pluralGenerator\", this._locale, [options])];\n  };\n\n  return Globalize;\n});","map":{"version":3,"sources":["/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/globalize/dist/globalize-runtime/plural.js"],"names":["root","factory","define","amd","exports","module","require","Globalize","runtimeKey","_runtimeKey","validateParameterPresence","_validateParameterPresence","validateParameterType","_validateParameterType","validateParameterTypeNumber","value","name","undefined","pluralGeneratorFn","plural","pluralGenerator","_pluralGeneratorFn","_validateParameterTypeNumber","prototype","options","_locale"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACC,WAAUA,IAAV,EAAgBC,OAAhB,EAA0B;AAE1B,eAF0B,CAI1B;;AACA,MAAK,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA5C,EAAkD;AAEjD;AACAD,IAAAA,MAAM,CAAC,CACN,sBADM,CAAD,EAEHD,OAFG,CAAN;AAGA,GAND,MAMO,IAAK,OAAOG,OAAP,KAAmB,QAAxB,EAAmC;AAEzC;AACAC,IAAAA,MAAM,CAACD,OAAP,GAAiBH,OAAO,CAAEK,OAAO,CAAE,sBAAF,CAAT,CAAxB;AACA,GAJM,MAIA;AAEN;AACAL,IAAAA,OAAO,CAAED,IAAI,CAACO,SAAP,CAAP;AACA;AACD,CApBA,EAoBC,IApBD,EAoBO,UAAUA,SAAV,EAAsB;AAI9B,MAAIC,UAAU,GAAGD,SAAS,CAACE,WAA3B;AAAA,MACCC,yBAAyB,GAAGH,SAAS,CAACI,0BADvC;AAAA,MAECC,qBAAqB,GAAGL,SAAS,CAACM,sBAFnC;;AAKA,MAAIC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAUC,KAAV,EAAiBC,IAAjB,EAAwB;AACzDJ,IAAAA,qBAAqB,CACpBG,KADoB,EAEpBC,IAFoB,EAGpBD,KAAK,KAAKE,SAAV,IAAuB,OAAOF,KAAP,KAAiB,QAHpB,EAIpB,QAJoB,CAArB;AAMA,GAPD;;AAYA,MAAIG,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUC,MAAV,EAAmB;AAC1C,WAAO,SAASC,eAAT,CAA0BL,KAA1B,EAAkC;AACxCL,MAAAA,yBAAyB,CAAEK,KAAF,EAAS,OAAT,CAAzB;AACAD,MAAAA,2BAA2B,CAAEC,KAAF,EAAS,OAAT,CAA3B;AAEA,aAAOI,MAAM,CAAEJ,KAAF,CAAb;AACA,KALD;AAMA,GAPD;;AAYAR,EAAAA,SAAS,CAACc,kBAAV,GAA+BH,iBAA/B;AACAX,EAAAA,SAAS,CAACe,4BAAV,GAAyCR,2BAAzC;;AAEAP,EAAAA,SAAS,CAACY,MAAV,GACAZ,SAAS,CAACgB,SAAV,CAAoBJ,MAApB,GAA6B,UAAUJ,KAAV,EAAiBS,OAAjB,EAA2B;AACvDd,IAAAA,yBAAyB,CAAEK,KAAF,EAAS,OAAT,CAAzB;AACAD,IAAAA,2BAA2B,CAAEC,KAAF,EAAS,OAAT,CAA3B;AACA,WAAO,KAAKK,eAAL,CAAsBI,OAAtB,EAAiCT,KAAjC,CAAP;AACA,GALD;;AAOAR,EAAAA,SAAS,CAACa,eAAV,GACAb,SAAS,CAACgB,SAAV,CAAoBH,eAApB,GAAsC,UAAUI,OAAV,EAAoB;AACzDA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,WAAOjB,SAAS,CAAEC,UAAU,CAAE,iBAAF,EAAqB,KAAKiB,OAA1B,EAAmC,CAAED,OAAF,CAAnC,CAAZ,CAAhB;AACA,GAJD;;AAMA,SAAOjB,SAAP;AAKC,CA1EA,CAAD","sourcesContent":["/**\n * Globalize Runtime v1.5.0\n *\n * http://github.com/jquery/globalize\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2020-03-25T12:19Z\n */\n/*!\n * Globalize Runtime v1.5.0 2020-03-25T12:19Z Released under the MIT license\n * http://git.io/TrdQbw\n */\n(function( root, factory ) {\n\n\t\"use strict\";\n\n\t// UMD returnExports\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD\n\t\tdefine([\n\t\t\t\"../globalize-runtime\"\n\t\t], factory );\n\t} else if ( typeof exports === \"object\" ) {\n\n\t\t// Node, CommonJS\n\t\tmodule.exports = factory( require( \"../globalize-runtime\" ) );\n\t} else {\n\n\t\t// Extend global\n\t\tfactory( root.Globalize );\n\t}\n}(this, function( Globalize ) {\n\n\n\nvar runtimeKey = Globalize._runtimeKey,\n\tvalidateParameterPresence = Globalize._validateParameterPresence,\n\tvalidateParameterType = Globalize._validateParameterType;\n\n\nvar validateParameterTypeNumber = function( value, name ) {\n\tvalidateParameterType(\n\t\tvalue,\n\t\tname,\n\t\tvalue === undefined || typeof value === \"number\",\n\t\t\"Number\"\n\t);\n};\n\n\n\n\nvar pluralGeneratorFn = function( plural ) {\n\treturn function pluralGenerator( value ) {\n\t\tvalidateParameterPresence( value, \"value\" );\n\t\tvalidateParameterTypeNumber( value, \"value\" );\n\n\t\treturn plural( value );\n\t};\n};\n\n\n\n\nGlobalize._pluralGeneratorFn = pluralGeneratorFn;\nGlobalize._validateParameterTypeNumber = validateParameterTypeNumber;\n\nGlobalize.plural =\nGlobalize.prototype.plural = function( value, options ) {\n\tvalidateParameterPresence( value, \"value\" );\n\tvalidateParameterTypeNumber( value, \"value\" );\n\treturn this.pluralGenerator( options )( value );\n};\n\nGlobalize.pluralGenerator =\nGlobalize.prototype.pluralGenerator = function( options ) {\n\toptions = options || {};\n\treturn Globalize[ runtimeKey( \"pluralGenerator\", this._locale, [ options ] ) ];\n};\n\nreturn Globalize;\n\n\n\n\n}));\n"]},"metadata":{},"sourceType":"script"}