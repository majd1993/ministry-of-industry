{"ast":null,"code":"\"use strict\"; //\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exports_1 = require(\"./Exports\");\n/**\n * Defines payload for any Service message event\n * Added in version 1.9.0\n */\n\n\nvar ServiceEventArgs =\n/** @class */\nfunction (_super) {\n  __extends(ServiceEventArgs, _super);\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {string} json - json payload of the USP message.\n   */\n\n\n  function ServiceEventArgs(json, name, sessionId) {\n    var _this = _super.call(this, sessionId) || this;\n\n    _this.privJsonResult = json;\n    _this.privEventName = name;\n    return _this;\n  }\n\n  Object.defineProperty(ServiceEventArgs.prototype, \"jsonString\", {\n    get: function get() {\n      return this.privJsonResult;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ServiceEventArgs.prototype, \"eventName\", {\n    get: function get() {\n      return this.privEventName;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ServiceEventArgs;\n}(Exports_1.SessionEventArgs);\n\nexports.ServiceEventArgs = ServiceEventArgs;","map":{"version":3,"sources":["src/sdk/ServiceEventArgs.ts"],"names":[],"mappings":"cAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;AAEA;;;AAGG;;;AAEH,IAAA,gBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsC,EAAA,SAAA,CAAA,gBAAA,EAAA,MAAA,CAAA;AAIlC;;;;AAIG;;;AACH,WAAA,gBAAA,CAAmB,IAAnB,EAAkC,IAAlC,EAAgD,SAAhD,EAAkE;AAAlE,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,SAAN,KAAgB,IADpB;;AAEI,IAAA,KAAI,CAAC,cAAL,GAAsB,IAAtB;AACA,IAAA,KAAI,CAAC,aAAL,GAAqB,IAArB;;AACH;;AAED,EAAA,MAAA,CAAA,cAAA,CAAW,gBAAA,CAAA,SAAX,EAAW,YAAX,EAAqB;SAArB,eAAA;AACI,aAAO,KAAK,cAAZ;AACH,KAFoB;oBAAA;;AAAA,GAArB;AAIA,EAAA,MAAA,CAAA,cAAA,CAAW,gBAAA,CAAA,SAAX,EAAW,WAAX,EAAoB;SAApB,eAAA;AACI,aAAO,KAAK,aAAZ;AACH,KAFmB;oBAAA;;AAAA,GAApB;AAGJ,SAAA,gBAAA;AAAC,CAtBD,CAAsC,SAAA,CAAA,gBAAtC,CAAA;;AAAa,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourcesContent":["//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport { SessionEventArgs } from \"./Exports\";\r\n\r\n/**\r\n * Defines payload for any Service message event\r\n * Added in version 1.9.0\r\n */\r\n\r\nexport class ServiceEventArgs extends SessionEventArgs {\r\n    private privJsonResult: string;\r\n    private privEventName: string;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} json - json payload of the USP message.\r\n     */\r\n    public constructor(json: string,  name: string, sessionId?: string) {\r\n        super(sessionId);\r\n        this.privJsonResult = json;\r\n        this.privEventName = name;\r\n    }\r\n\r\n    public get jsonString(): string {\r\n        return this.privJsonResult;\r\n    }\r\n\r\n    public get eventName(): string {\r\n        return this.privEventName;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}