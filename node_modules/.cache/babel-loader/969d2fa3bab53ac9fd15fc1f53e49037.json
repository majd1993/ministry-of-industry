{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createToastMiddleware = _interopRequireDefault(require(\"../../Toast/createToastMiddleware\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction createCoreMiddleware() {\n  return [function () {\n    return function (next) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var id = args[0].notification.id; // We are ignoring \"connectivitystatus\" notifications, we will render it using <BasicConnectivityStatus> instead.\n        // If devs want to render it, they can add a middleware.\n\n        return id !== 'connectivitystatus' && next.apply(void 0, args);\n      };\n    };\n  }, (0, _createToastMiddleware.default)()];\n}\n\nvar _default = createCoreMiddleware;\nexports.default = _default;","map":{"version":3,"sources":["../../../src/Middleware/Toast/createCoreMiddleware.js"],"names":["args","id","next","createCoreMiddleware"],"mappings":";;;;;;;AAAA,IAAA,sBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mCAAA,CAAA,CAAA;;;;;;;;AAEA,SAAA,oBAAA,GAAgC;AAC9B,SAAO,CACL,YAAA;AAAA,WAAM,UAAA,IAAA,EAAI;AAAA,aAAI,YAAa;AAAA,aAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAATA,IAAS,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAATA,UAAAA,IAAS,CAAA,IAAA,CAATA,GAAS,SAAA,CAAA,IAAA,CAATA;AAAS;;AAAA,YAGLC,EAHK,GAKrBD,IALqB,CAAA,CAAA,CAKrBA,CALqB,YAKrBA,CALqB,EAAA,CAAA,CAOzB;AACA;;AACA,eAAOC,EAAE,KAAFA,oBAAAA,IAA+BC,IAAI,CAAJA,KAAAA,CAAAA,KAAAA,CAAAA,EAAtC,IAAsCA,CAAtC;AATQ,OAAA;AAAV,KAAA;AADK,GAAA,EAYL,CAAA,GAAA,sBAAA,CAZF,OAYE,GAZK,CAAP;AAcD;;eAEcC,oB","sourcesContent":["import createToastMiddleware from '../../Toast/createToastMiddleware';\n\nfunction createCoreMiddleware() {\n  return [\n    () => next => (...args) => {\n      const [\n        {\n          notification: { id }\n        }\n      ] = args;\n\n      // We are ignoring \"connectivitystatus\" notifications, we will render it using <BasicConnectivityStatus> instead.\n      // If devs want to render it, they can add a middleware.\n      return id !== 'connectivitystatus' && next(...args);\n    },\n    createToastMiddleware()\n  ];\n}\n\nexport default createCoreMiddleware;\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}