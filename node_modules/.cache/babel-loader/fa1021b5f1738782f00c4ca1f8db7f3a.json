{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = whileConnectedEffect;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _connect = require(\"../../actions/connect\");\n\nvar _disconnect = require(\"../../actions/disconnect\");\n\nvar _reconnect = require(\"../../actions/reconnect\");\n\nfunction whileConnectedEffect(fn) {\n  return (0, _effects.call)( /*#__PURE__*/_regenerator[\"default\"].mark(function whileConnected() {\n    var _yield$take, _yield$take$meta, userID, username, directLine, task;\n\n    return _regenerator[\"default\"].wrap(function whileConnected$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _effects.take)([_connect.CONNECT_FULFILLING, _reconnect.RECONNECT_FULFILLING]);\n\n          case 2:\n            _yield$take = _context.sent;\n            _yield$take$meta = _yield$take.meta;\n            userID = _yield$take$meta.userID;\n            username = _yield$take$meta.username;\n            directLine = _yield$take.payload.directLine;\n            _context.next = 9;\n            return (0, _effects.fork)(fn, {\n              directLine: directLine,\n              userID: userID,\n              username: username\n            });\n\n          case 9:\n            task = _context.sent;\n            _context.next = 12;\n            return (0, _effects.take)([_disconnect.DISCONNECT_PENDING, _reconnect.RECONNECT_PENDING]);\n\n          case 12:\n            _context.next = 14;\n            return (0, _effects.cancel)(task);\n\n          case 14:\n            _context.next = 0;\n            break;\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, whileConnected);\n  }));\n}","map":{"version":3,"sources":["../../../src/sagas/effects/whileConnected.js"],"names":["userID","username","directLine","CONNECT_FULFILLING","RECONNECT_FULFILLING","task","DISCONNECT_PENDING","RECONNECT_PENDING"],"mappings":";;;;;;;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,IAAA,QAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAEe,SAAA,oBAAA,CAAA,EAAA,EAAkC;AAC/C,SAAO,CAAA,GAAA,QAAA,CAAA,IAAA,GAAA,aAAA,YAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAK,SAAA,cAAA,GAAA;AAAA,QAAA,WAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,IAAA;;AAAA,WAAA,YAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,eAAA,CAAA,QAAA,EAAA;AAAA,aAAA,CAAA,EAAA;AAAA,gBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,eAAA,CAAA;AAAA,YAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAKJ,mBAAM,CAAA,GAAA,QAAA,CAAA,IAAA,EAAK,CAACG,QAAAA,CAAD,kBAAA,EAAqBC,UAAAA,CAAhC,oBAAW,CAAL,CAAN;;AALI,eAAA,CAAA;AAAA,YAAA,WAAA,GAAA,QAAA,CAAA,IAAA;AAAA,YAAA,gBAAA,GAAA,WAAA,CAAA,IAAA;AAGEJ,YAAAA,MAHF,GAAA,gBAAA,CAAA,MAGEA;AAAQC,YAAAA,QAHV,GAAA,gBAAA,CAAA,QAGUA;AACLC,YAAAA,UAJL,GAAA,WAAA,CAAA,OAAA,CAAA,UAIKA;AAJL,YAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAMK,mBAAM,CAAA,GAAA,QAAA,CAAA,IAAA,EAAA,EAAA,EAAS;AAAEA,cAAAA,UAAU,EAAZ,UAAA;AAAcF,cAAAA,MAAM,EAApB,MAAA;AAAsBC,cAAAA,QAAQ,EAARA;AAAtB,aAAT,CAAN;;AANL,eAAA,CAAA;AAMFI,YAAAA,IANE,GAAA,QAAA,CAAA,IAMFA;AANE,YAAA,QAAA,CAAA,IAAA,GAAA,EAAA;AAUR,mBAAM,CAAA,GAAA,QAAA,CAAA,IAAA,EAAK,CAACC,WAAAA,CAAD,kBAAA,EAAqBC,UAAAA,CAAhC,iBAAW,CAAL,CAAN;;AAVQ,eAAA,EAAA;AAAA,YAAA,QAAA,CAAA,IAAA,GAAA,EAAA;AAWR,mBAAM,CAAA,GAAA,QAAA,CAAA,MAAA,EAAN,IAAM,CAAN;;AAXQ,eAAA,EAAA;AAAA,YAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA;;AAAA,eAAA,EAAA;AAAA,eAAA,KAAA;AAAA,mBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,KAAA,EAAA,cAAA,CAAA;AAAZ,GAAO,CAAA,CAAP;AAcD","sourcesContent":["import { call, cancel, fork, take } from 'redux-saga/effects';\n\nimport { CONNECT_FULFILLING } from '../../actions/connect';\nimport { DISCONNECT_PENDING } from '../../actions/disconnect';\nimport { RECONNECT_PENDING, RECONNECT_FULFILLING } from '../../actions/reconnect';\n\nexport default function whileConnectedEffect(fn) {\n  return call(function* whileConnected() {\n    for (;;) {\n      const {\n        meta: { userID, username },\n        payload: { directLine }\n      } = yield take([CONNECT_FULFILLING, RECONNECT_FULFILLING]);\n      const task = yield fork(fn, { directLine, userID, username });\n\n      // When we receive DISCONNECT_PENDING or RECONNECT_PENDING, the Direct Line connection is currently busy and should not be used.\n\n      yield take([DISCONNECT_PENDING, RECONNECT_PENDING]);\n      yield cancel(task);\n    }\n  });\n}\n"],"sourceRoot":"core:///"},"metadata":{},"sourceType":"script"}