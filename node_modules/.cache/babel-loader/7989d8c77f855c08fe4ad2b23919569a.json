{"ast":null,"code":"import _classCallCheck from \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts\";\n/**\n * Represents a keyword recognition model for recognizing when\n * the user says a keyword to initiate further speech recognition.\n * @class KeywordRecognitionModel\n */\n\nexport var KeywordRecognitionModel = /*#__PURE__*/function () {\n  /**\n   * Create and initializes a new instance.\n   * @constructor\n   */\n  function KeywordRecognitionModel() {\n    _classCallCheck(this, KeywordRecognitionModel);\n\n    this.privDisposed = false;\n  }\n  /**\n   * Creates a keyword recognition model using the specified filename.\n   * @member KeywordRecognitionModel.fromFile\n   * @function\n   * @public\n   * @param {string} fileName - A string that represents file name for the keyword recognition model.\n   *        Note, the file can point to a zip file in which case the model\n   *        will be extracted from the zip.\n   * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n   */\n\n\n  _createClass(KeywordRecognitionModel, [{\n    key: \"close\",\n    value:\n    /**\n     * Dispose of associated resources.\n     * @member KeywordRecognitionModel.prototype.close\n     * @function\n     * @public\n     */\n    function close() {\n      if (this.privDisposed) {\n        return;\n      }\n\n      this.privDisposed = true;\n    }\n  }], [{\n    key: \"fromFile\",\n    value: function fromFile(fileName) {\n      Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\n      throw new Error(\"Not yet implemented.\");\n    }\n    /**\n     * Creates a keyword recognition model using the specified filename.\n     * @member KeywordRecognitionModel.fromStream\n     * @function\n     * @public\n     * @param {string} file - A File that represents file for the keyword recognition model.\n     *        Note, the file can point to a zip file in which case the model will be extracted from the zip.\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n     */\n\n  }, {\n    key: \"fromStream\",\n    value: function fromStream(file) {\n      Contracts.throwIfNull(file, \"file\");\n      throw new Error(\"Not yet implemented.\");\n    }\n  }]);\n\n  return KeywordRecognitionModel;\n}();","map":{"version":3,"sources":["src/sdk/KeywordRecognitionModel.ts"],"names":[],"mappings":";;AAAA;AACA;AAEA,SAAS,SAAT,QAA0B,aAA1B;AAEA;;;;AAIG;;AACH,WAAa,uBAAb;AAGI;;;AAGG;AACH,qCAAA;AAAA;;AANQ,SAAA,YAAA,GAAwB,KAAxB;AAOP;AAED;;;;;;;;;AASG;;;AAnBP;AAAA;AAAA;AAyCI;;;;;AAKG;AACI,qBAAK;AACR,UAAI,KAAK,YAAT,EAAuB;AACnB;AACH;;AAED,WAAK,YAAL,GAAoB,IAApB;AACH;AArDL;AAAA;AAAA,WAoBW,kBAAgB,QAAhB,EAAgC;AACnC,MAAA,SAAS,CAAC,uBAAV,CAAkC,QAAlC,EAA4C,UAA5C;AAEA,YAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AACH;AAED;;;;;;;;AAQG;;AAlCP;AAAA;AAAA,WAmCW,oBAAkB,IAAlB,EAA4B;AAC/B,MAAA,SAAS,CAAC,WAAV,CAAsB,IAAtB,EAA4B,MAA5B;AAEA,YAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AACH;AAvCL;;AAAA;AAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts\";\r\n\r\n/**\r\n * Represents a keyword recognition model for recognizing when\r\n * the user says a keyword to initiate further speech recognition.\r\n * @class KeywordRecognitionModel\r\n */\r\nexport class KeywordRecognitionModel {\r\n    private privDisposed: boolean = false;\r\n\r\n    /**\r\n     * Create and initializes a new instance.\r\n     * @constructor\r\n     */\r\n    private constructor() {\r\n    }\r\n\r\n    /**\r\n     * Creates a keyword recognition model using the specified filename.\r\n     * @member KeywordRecognitionModel.fromFile\r\n     * @function\r\n     * @public\r\n     * @param {string} fileName - A string that represents file name for the keyword recognition model.\r\n     *        Note, the file can point to a zip file in which case the model\r\n     *        will be extracted from the zip.\r\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\r\n     */\r\n    public static fromFile(fileName: string): KeywordRecognitionModel {\r\n        Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\r\n\r\n        throw new Error(\"Not yet implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Creates a keyword recognition model using the specified filename.\r\n     * @member KeywordRecognitionModel.fromStream\r\n     * @function\r\n     * @public\r\n     * @param {string} file - A File that represents file for the keyword recognition model.\r\n     *        Note, the file can point to a zip file in which case the model will be extracted from the zip.\r\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\r\n     */\r\n    public static fromStream(file: File): KeywordRecognitionModel {\r\n        Contracts.throwIfNull(file, \"file\");\r\n\r\n        throw new Error(\"Not yet implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member KeywordRecognitionModel.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposed = true;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}