{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar root_1 = require('../util/root');\n\nvar Observable_1 = require('../Observable');\n\nvar iterator_1 = require('../symbol/iterator');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\n\n\nvar IteratorObservable = function (_super) {\n  __extends(IteratorObservable, _super);\n\n  function IteratorObservable(iterator, scheduler) {\n    _super.call(this);\n\n    this.scheduler = scheduler;\n\n    if (iterator == null) {\n      throw new Error('iterator cannot be null.');\n    }\n\n    this.iterator = getIterator(iterator);\n  }\n\n  IteratorObservable.create = function (iterator, scheduler) {\n    return new IteratorObservable(iterator, scheduler);\n  };\n\n  IteratorObservable.dispatch = function (state) {\n    var index = state.index,\n        hasError = state.hasError,\n        iterator = state.iterator,\n        subscriber = state.subscriber;\n\n    if (hasError) {\n      subscriber.error(state.error);\n      return;\n    }\n\n    var result = iterator.next();\n\n    if (result.done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(result.value);\n    state.index = index + 1;\n\n    if (subscriber.closed) {\n      if (typeof iterator.return === 'function') {\n        iterator.return();\n      }\n\n      return;\n    }\n\n    this.schedule(state);\n  };\n  /** @deprecated internal use only */\n\n\n  IteratorObservable.prototype._subscribe = function (subscriber) {\n    var index = 0;\n\n    var _a = this,\n        iterator = _a.iterator,\n        scheduler = _a.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(IteratorObservable.dispatch, 0, {\n        index: index,\n        iterator: iterator,\n        subscriber: subscriber\n      });\n    } else {\n      do {\n        var result = iterator.next();\n\n        if (result.done) {\n          subscriber.complete();\n          break;\n        } else {\n          subscriber.next(result.value);\n        }\n\n        if (subscriber.closed) {\n          if (typeof iterator.return === 'function') {\n            iterator.return();\n          }\n\n          break;\n        }\n      } while (true);\n    }\n  };\n\n  return IteratorObservable;\n}(Observable_1.Observable);\n\nexports.IteratorObservable = IteratorObservable;\n\nvar StringIterator = function () {\n  function StringIterator(str, idx, len) {\n    if (idx === void 0) {\n      idx = 0;\n    }\n\n    if (len === void 0) {\n      len = str.length;\n    }\n\n    this.str = str;\n    this.idx = idx;\n    this.len = len;\n  }\n\n  StringIterator.prototype[iterator_1.iterator] = function () {\n    return this;\n  };\n\n  StringIterator.prototype.next = function () {\n    return this.idx < this.len ? {\n      done: false,\n      value: this.str.charAt(this.idx++)\n    } : {\n      done: true,\n      value: undefined\n    };\n  };\n\n  return StringIterator;\n}();\n\nvar ArrayIterator = function () {\n  function ArrayIterator(arr, idx, len) {\n    if (idx === void 0) {\n      idx = 0;\n    }\n\n    if (len === void 0) {\n      len = toLength(arr);\n    }\n\n    this.arr = arr;\n    this.idx = idx;\n    this.len = len;\n  }\n\n  ArrayIterator.prototype[iterator_1.iterator] = function () {\n    return this;\n  };\n\n  ArrayIterator.prototype.next = function () {\n    return this.idx < this.len ? {\n      done: false,\n      value: this.arr[this.idx++]\n    } : {\n      done: true,\n      value: undefined\n    };\n  };\n\n  return ArrayIterator;\n}();\n\nfunction getIterator(obj) {\n  var i = obj[iterator_1.iterator];\n\n  if (!i && typeof obj === 'string') {\n    return new StringIterator(obj);\n  }\n\n  if (!i && obj.length !== undefined) {\n    return new ArrayIterator(obj);\n  }\n\n  if (!i) {\n    throw new TypeError('object is not iterable');\n  }\n\n  return obj[iterator_1.iterator]();\n}\n\nvar maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(o) {\n  var len = +o.length;\n\n  if (isNaN(len)) {\n    return 0;\n  }\n\n  if (len === 0 || !numberIsFinite(len)) {\n    return len;\n  }\n\n  len = sign(len) * Math.floor(Math.abs(len));\n\n  if (len <= 0) {\n    return 0;\n  }\n\n  if (len > maxSafeInteger) {\n    return maxSafeInteger;\n  }\n\n  return len;\n}\n\nfunction numberIsFinite(value) {\n  return typeof value === 'number' && root_1.root.isFinite(value);\n}\n\nfunction sign(value) {\n  var valueAsNumber = +value;\n\n  if (valueAsNumber === 0) {\n    return valueAsNumber;\n  }\n\n  if (isNaN(valueAsNumber)) {\n    return valueAsNumber;\n  }\n\n  return valueAsNumber < 0 ? -1 : 1;\n}","map":{"version":3,"sources":["../../src/observable/IteratorObservable.ts"],"names":[],"mappings":"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","sourcesContent":["import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IteratorObservable<T> extends Observable<T> {\n  private iterator: any;\n\n  static create<T>(iterator: any, scheduler?: IScheduler): IteratorObservable<T> {\n    return new IteratorObservable(iterator, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, hasError, iterator, subscriber } = state;\n\n    if (hasError) {\n      subscriber.error(state.error);\n      return;\n    }\n\n    let result = iterator.next();\n    if (result.done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(result.value);\n    state.index = index + 1;\n\n    if (subscriber.closed) {\n      if (typeof iterator.return === 'function') {\n        iterator.return();\n      }\n      return;\n    }\n\n    (<any> this).schedule(state);\n  }\n\n  constructor(iterator: any, private scheduler?: IScheduler) {\n    super();\n\n    if (iterator == null) {\n      throw new Error('iterator cannot be null.');\n    }\n\n    this.iterator = getIterator(iterator);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    let index = 0;\n    const { iterator, scheduler } = this;\n\n    if (scheduler) {\n      return scheduler.schedule(IteratorObservable.dispatch, 0, {\n        index, iterator, subscriber\n      });\n    } else {\n      do {\n        let result = iterator.next();\n        if (result.done) {\n          subscriber.complete();\n          break;\n        } else {\n          subscriber.next(result.value);\n        }\n        if (subscriber.closed) {\n          if (typeof iterator.return === 'function') {\n            iterator.return();\n          }\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n\nclass StringIterator {\n  constructor(private str: string,\n              private idx: number = 0,\n              private len: number = str.length) {\n  }\n  [Symbol_iterator]() { return (this); }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.str.charAt(this.idx++)\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nclass ArrayIterator {\n  constructor(private arr: Array<any>,\n              private idx: number = 0,\n              private len: number = toLength(arr)) {\n  }\n  [Symbol_iterator]() { return this; }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.arr[this.idx++]\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nfunction getIterator(obj: any) {\n  const i = obj[Symbol_iterator];\n  if (!i && typeof obj === 'string') {\n    return new StringIterator(obj);\n  }\n  if (!i && obj.length !== undefined) {\n    return new ArrayIterator(obj);\n  }\n  if (!i) {\n    throw new TypeError('object is not iterable');\n  }\n  return obj[Symbol_iterator]();\n}\n\nconst maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(o: any) {\n  let len = +o.length;\n  if (isNaN(len)) {\n      return 0;\n  }\n  if (len === 0 || !numberIsFinite(len)) {\n      return len;\n  }\n  len = sign(len) * Math.floor(Math.abs(len));\n  if (len <= 0) {\n      return 0;\n  }\n  if (len > maxSafeInteger) {\n      return maxSafeInteger;\n  }\n  return len;\n}\n\nfunction numberIsFinite(value: any) {\n  return typeof value === 'number' && root.isFinite(value);\n}\n\nfunction sign(value: any) {\n  let valueAsNumber = +value;\n  if (valueAsNumber === 0) {\n    return valueAsNumber;\n  }\n  if (isNaN(valueAsNumber)) {\n    return valueAsNumber;\n  }\n  return valueAsNumber < 0 ? -1 : 1;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}