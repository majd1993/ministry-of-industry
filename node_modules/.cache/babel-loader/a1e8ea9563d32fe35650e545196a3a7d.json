{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar AudioOutputFormat_1 = require(\"../sdk/Audio/AudioOutputFormat\");\n\nvar AudioOutputStream_1 = require(\"../sdk/Audio/AudioOutputStream\");\n\nvar ActivityResponsePayload_1 = require(\"./ServiceMessages/ActivityResponsePayload\");\n\nvar DialogServiceTurnState =\n/** @class */\nfunction () {\n  function DialogServiceTurnState(manager, requestId) {\n    this.privRequestId = requestId;\n    this.privIsCompleted = false;\n    this.privAudioStream = null;\n    this.privTurnManager = manager;\n    this.resetTurnEndTimeout(); // tslint:disable-next-line:no-console\n    // console.info(\"DialogServiceTurnState debugturn start:\" + this.privRequestId);\n  }\n\n  Object.defineProperty(DialogServiceTurnState.prototype, \"audioStream\", {\n    get: function get() {\n      // Called when is needed to stream.\n      this.resetTurnEndTimeout();\n      return this.privAudioStream;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  DialogServiceTurnState.prototype.processActivityPayload = function (payload, audioFormat) {\n    if (payload.messageDataStreamType === ActivityResponsePayload_1.MessageDataStreamType.TextToSpeechAudio) {\n      this.privAudioStream = AudioOutputStream_1.AudioOutputStream.createPullStream();\n      this.privAudioStream.format = audioFormat !== undefined ? audioFormat : AudioOutputFormat_1.AudioOutputFormatImpl.getDefaultOutputFormat(); // tslint:disable-next-line:no-console\n      // console.info(\"Audio start debugturn:\" + this.privRequestId);\n    }\n\n    return this.privAudioStream;\n  };\n\n  DialogServiceTurnState.prototype.endAudioStream = function () {\n    if (this.privAudioStream !== null && !this.privAudioStream.isClosed) {\n      this.privAudioStream.close();\n    }\n  };\n\n  DialogServiceTurnState.prototype.complete = function () {\n    if (this.privTimeoutToken !== undefined) {\n      clearTimeout(this.privTimeoutToken);\n    }\n\n    this.endAudioStream();\n  };\n\n  DialogServiceTurnState.prototype.resetTurnEndTimeout = function () {\n    var _this = this;\n\n    if (this.privTimeoutToken !== undefined) {\n      clearTimeout(this.privTimeoutToken);\n    } // tslint:disable-next-line:no-console\n    // console.info(\"Timeout reset debugturn:\" + this.privRequestId);\n\n\n    this.privTimeoutToken = setTimeout(function () {\n      // tslint:disable-next-line:no-console\n      // console.info(\"Timeout complete debugturn:\" + this.privRequestId);\n      _this.privTurnManager.CompleteTurn(_this.privRequestId);\n\n      return;\n    }, 2000);\n  };\n\n  return DialogServiceTurnState;\n}();\n\nexports.DialogServiceTurnState = DialogServiceTurnState;","map":{"version":3,"sources":["src/common.speech/DialogServiceTurnState.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;AAEA,IAAA,mBAAA,GAAA,OAAA,CAAA,gCAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,OAAA,CAAA,gCAAA,CAAA;;AAEA,IAAA,yBAAA,GAAA,OAAA,CAAA,2CAAA,CAAA;;AAEA,IAAA,sBAAA;AAAA;AAAA,YAAA;AAOI,WAAA,sBAAA,CAAY,OAAZ,EAAoD,SAApD,EAAqE;AACjE,SAAK,aAAL,GAAqB,SAArB;AACA,SAAK,eAAL,GAAuB,KAAvB;AACA,SAAK,eAAL,GAAuB,IAAvB;AACA,SAAK,eAAL,GAAuB,OAAvB;AACA,SAAK,mBAAL,GALiE,CAMjE;AACA;AACH;;AAED,EAAA,MAAA,CAAA,cAAA,CAAW,sBAAA,CAAA,SAAX,EAAW,aAAX,EAAsB;SAAtB,eAAA;AACI;AACA,WAAK,mBAAL;AACA,aAAO,KAAK,eAAZ;AACH,KAJqB;oBAAA;;AAAA,GAAtB;;AAMO,EAAA,sBAAA,CAAA,SAAA,CAAA,sBAAA,GAAP,UAA8B,OAA9B,EAAgE,WAAhE,EAAmG;AAC/F,QAAI,OAAO,CAAC,qBAAR,KAAkC,yBAAA,CAAA,qBAAA,CAAsB,iBAA5D,EAA+E;AAC3E,WAAK,eAAL,GAAuB,mBAAA,CAAA,iBAAA,CAAkB,gBAAlB,EAAvB;AACA,WAAK,eAAL,CAAqB,MAArB,GAA+B,WAAW,KAAK,SAAjB,GAA8B,WAA9B,GAA4C,mBAAA,CAAA,qBAAA,CAAsB,sBAAtB,EAA1E,CAF2E,CAG3E;AACA;AACH;;AACD,WAAO,KAAK,eAAZ;AACH,GARM;;AAUA,EAAA,sBAAA,CAAA,SAAA,CAAA,cAAA,GAAP,YAAA;AACI,QAAI,KAAK,eAAL,KAAyB,IAAzB,IAAiC,CAAC,KAAK,eAAL,CAAqB,QAA3D,EAAqE;AACjE,WAAK,eAAL,CAAqB,KAArB;AACH;AACJ,GAJM;;AAMA,EAAA,sBAAA,CAAA,SAAA,CAAA,QAAA,GAAP,YAAA;AACI,QAAI,KAAK,gBAAL,KAA0B,SAA9B,EAAyC;AACrC,MAAA,YAAY,CAAC,KAAK,gBAAN,CAAZ;AACH;;AACD,SAAK,cAAL;AACH,GALM;;AAOC,EAAA,sBAAA,CAAA,SAAA,CAAA,mBAAA,GAAR,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACI,QAAI,KAAK,gBAAL,KAA0B,SAA9B,EAAyC;AACrC,MAAA,YAAY,CAAC,KAAK,gBAAN,CAAZ;AACH,KAHL,CAII;AACA;;;AAEA,SAAK,gBAAL,GAAwB,UAAU,CAAC,YAAA;AAC/B;AACA;AAEA,MAAA,KAAI,CAAC,eAAL,CAAqB,YAArB,CAAkC,KAAI,CAAC,aAAvC;;AACA;AACH,KANiC,EAM/B,IAN+B,CAAlC;AAOH,GAdO;;AAeZ,SAAA,sBAAA;AAAC,CA7DD,EAAA;;AAAa,OAAA,CAAA,sBAAA,GAAA,sBAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { AudioOutputFormatImpl } from \"../sdk/Audio/AudioOutputFormat\";\r\nimport { AudioOutputStream, PullAudioOutputStreamImpl } from \"../sdk/Audio/AudioOutputStream\";\r\nimport { DialogServiceTurnStateManager } from \"./DialogServiceTurnStateManager\";\r\nimport { ActivityPayloadResponse, MessageDataStreamType } from \"./ServiceMessages/ActivityResponsePayload\";\r\n\r\nexport class DialogServiceTurnState {\r\n    private privRequestId: string;\r\n    private privIsCompleted: boolean;\r\n    private privAudioStream: PullAudioOutputStreamImpl;\r\n    private privTimeoutToken: any;\r\n    private privTurnManager: DialogServiceTurnStateManager;\r\n\r\n    constructor(manager: DialogServiceTurnStateManager, requestId: string) {\r\n        this.privRequestId = requestId;\r\n        this.privIsCompleted = false;\r\n        this.privAudioStream = null;\r\n        this.privTurnManager = manager;\r\n        this.resetTurnEndTimeout();\r\n        // tslint:disable-next-line:no-console\r\n        // console.info(\"DialogServiceTurnState debugturn start:\" + this.privRequestId);\r\n    }\r\n\r\n    public get audioStream(): PullAudioOutputStreamImpl {\r\n        // Called when is needed to stream.\r\n        this.resetTurnEndTimeout();\r\n        return this.privAudioStream;\r\n    }\r\n\r\n    public processActivityPayload(payload: ActivityPayloadResponse, audioFormat?: AudioOutputFormatImpl): PullAudioOutputStreamImpl {\r\n        if (payload.messageDataStreamType === MessageDataStreamType.TextToSpeechAudio) {\r\n            this.privAudioStream = AudioOutputStream.createPullStream() as PullAudioOutputStreamImpl;\r\n            this.privAudioStream.format = (audioFormat !== undefined) ? audioFormat : AudioOutputFormatImpl.getDefaultOutputFormat();\r\n            // tslint:disable-next-line:no-console\r\n            // console.info(\"Audio start debugturn:\" + this.privRequestId);\r\n        }\r\n        return this.privAudioStream;\r\n    }\r\n\r\n    public endAudioStream(): void {\r\n        if (this.privAudioStream !== null && !this.privAudioStream.isClosed) {\r\n            this.privAudioStream.close();\r\n        }\r\n    }\r\n\r\n    public complete(): void {\r\n        if (this.privTimeoutToken !== undefined) {\r\n            clearTimeout(this.privTimeoutToken);\r\n        }\r\n        this.endAudioStream();\r\n    }\r\n\r\n    private resetTurnEndTimeout(): void {\r\n        if (this.privTimeoutToken !== undefined) {\r\n            clearTimeout(this.privTimeoutToken);\r\n        }\r\n        // tslint:disable-next-line:no-console\r\n        // console.info(\"Timeout reset debugturn:\" + this.privRequestId);\r\n\r\n        this.privTimeoutToken = setTimeout((): void => {\r\n            // tslint:disable-next-line:no-console\r\n            // console.info(\"Timeout complete debugturn:\" + this.privRequestId);\r\n\r\n            this.privTurnManager.CompleteTurn(this.privRequestId);\r\n            return;\r\n        }, 2000);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}