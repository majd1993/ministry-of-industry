{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _botframeworkWebchatApi = require(\"botframework-webchat-api\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _ScreenReaderText = _interopRequireDefault(require(\"../ScreenReaderText\"));\n\nvar _SpinnerAnimation = _interopRequireDefault(require(\"./Assets/SpinnerAnimation\"));\n\nvar _useForceRender = _interopRequireDefault(require(\"../hooks/internal/useForceRender\"));\n\nvar _useStyleSet3 = _interopRequireDefault(require(\"../hooks/useStyleSet\"));\n\nvar _useTimer = _interopRequireDefault(require(\"../hooks/internal/useTimer\"));\n\nvar _WarningNotificationIcon = _interopRequireDefault(require(\"./Assets/WarningNotificationIcon\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar useDirection = _botframeworkWebchatApi.hooks.useDirection,\n    useLocalizer = _botframeworkWebchatApi.hooks.useLocalizer,\n    useStyleOptions = _botframeworkWebchatApi.hooks.useStyleOptions;\n\nvar ConnectivityStatusConnecting = function ConnectivityStatusConnecting(_ref) {\n  var reconnect = _ref.reconnect;\n\n  var _useStyleOptions = useStyleOptions(),\n      _useStyleOptions2 = _slicedToArray(_useStyleOptions, 1),\n      slowConnectionAfter = _useStyleOptions2[0].slowConnectionAfter;\n\n  var _useStyleSet = (0, _useStyleSet3.default)(),\n      _useStyleSet2 = _slicedToArray(_useStyleSet, 1),\n      _useStyleSet2$ = _useStyleSet2[0],\n      connectivityNotificationStyleSet = _useStyleSet2$.connectivityNotification,\n      warningNotificationStyleSet = _useStyleSet2$.warningNotification;\n\n  var _useDirection = useDirection(),\n      _useDirection2 = _slicedToArray(_useDirection, 1),\n      direction = _useDirection2[0];\n\n  var _useState = (0, _react.useState)(function () {\n    return Date.now();\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      initialRenderAt = _useState2[0];\n\n  var forceRender = (0, _useForceRender.default)();\n  var localize = useLocalizer();\n  var initialConnectionText = localize('CONNECTIVITY_STATUS_ALT_CONNECTING');\n  var interruptedConnectionText = localize('CONNECTIVITY_STATUS_ALT_RECONNECTING');\n  var slowConnectionText = localize('CONNECTIVITY_STATUS_ALT_SLOW_CONNECTION');\n  (0, _useTimer.default)(initialRenderAt + slowConnectionAfter, forceRender);\n  var now = Date.now();\n  var slow = now >= initialRenderAt + slowConnectionAfter;\n  return slow ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {\n    text: localize('CONNECTIVITY_STATUS_ALT', slowConnectionText)\n  }), /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"aria-hidden\": true,\n    className: (0, _classnames.default)('webchat__connectivityStatus', warningNotificationStyleSet + ''),\n    dir: direction\n  }, /*#__PURE__*/_react.default.createElement(_WarningNotificationIcon.default, null), slowConnectionText)) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ScreenReaderText.default, {\n    text: localize('CONNECTIVITY_STATUS_ALT', reconnect ? interruptedConnectionText : initialConnectionText)\n  }), /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"aria-hidden\": true,\n    className: (0, _classnames.default)('webchat__connectivityStatus', connectivityNotificationStyleSet + ''),\n    dir: direction\n  }, /*#__PURE__*/_react.default.createElement(_SpinnerAnimation.default, null), reconnect ? interruptedConnectionText : initialConnectionText));\n};\n\nConnectivityStatusConnecting.defaultProps = {\n  reconnect: false\n};\nConnectivityStatusConnecting.propTypes = {\n  reconnect: _propTypes.default.bool\n};\nvar _default = ConnectivityStatusConnecting;\nexports.default = _default;","map":{"version":3,"sources":["../../src/ConnectivityStatus/Connecting.js"],"names":["useDirection","useLocalizer","useStyleOptions","hooks","ConnectivityStatusConnecting","reconnect","slowConnectionAfter","connectivityNotificationStyleSet","warningNotificationStyleSet","direction","initialRenderAt","Date","forceRender","localize","initialConnectionText","interruptedConnectionText","slowConnectionText","now","slow","PropTypes","bool"],"mappings":"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","sourcesContent":["import { hooks } from 'botframework-webchat-api';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nimport ScreenReaderText from '../ScreenReaderText';\nimport SpinnerAnimation from './Assets/SpinnerAnimation';\nimport useForceRender from '../hooks/internal/useForceRender';\nimport useStyleSet from '../hooks/useStyleSet';\nimport useTimer from '../hooks/internal/useTimer';\nimport WarningNotificationIcon from './Assets/WarningNotificationIcon';\n\nconst { useDirection, useLocalizer, useStyleOptions } = hooks;\n\nconst ConnectivityStatusConnecting = ({ reconnect }) => {\n  const [{ slowConnectionAfter }] = useStyleOptions();\n  const [\n    { connectivityNotification: connectivityNotificationStyleSet, warningNotification: warningNotificationStyleSet }\n  ] = useStyleSet();\n  const [direction] = useDirection();\n  const [initialRenderAt] = useState(() => Date.now());\n  const forceRender = useForceRender();\n  const localize = useLocalizer();\n\n  const initialConnectionText = localize('CONNECTIVITY_STATUS_ALT_CONNECTING');\n  const interruptedConnectionText = localize('CONNECTIVITY_STATUS_ALT_RECONNECTING');\n  const slowConnectionText = localize('CONNECTIVITY_STATUS_ALT_SLOW_CONNECTION');\n\n  useTimer(initialRenderAt + slowConnectionAfter, forceRender);\n\n  const now = Date.now();\n  const slow = now >= initialRenderAt + slowConnectionAfter;\n\n  return slow ? (\n    <React.Fragment>\n      <ScreenReaderText text={localize('CONNECTIVITY_STATUS_ALT', slowConnectionText)} />\n      <div\n        aria-hidden={true}\n        className={classNames('webchat__connectivityStatus', warningNotificationStyleSet + '')}\n        dir={direction}\n      >\n        <WarningNotificationIcon />\n        {slowConnectionText}\n      </div>\n    </React.Fragment>\n  ) : (\n    <React.Fragment>\n      <ScreenReaderText\n        text={localize('CONNECTIVITY_STATUS_ALT', reconnect ? interruptedConnectionText : initialConnectionText)}\n      />\n      <div\n        aria-hidden={true}\n        className={classNames('webchat__connectivityStatus', connectivityNotificationStyleSet + '')}\n        dir={direction}\n      >\n        <SpinnerAnimation />\n        {reconnect ? interruptedConnectionText : initialConnectionText}\n      </div>\n    </React.Fragment>\n  );\n};\n\nConnectivityStatusConnecting.defaultProps = {\n  reconnect: false\n};\n\nConnectivityStatusConnecting.propTypes = {\n  reconnect: PropTypes.bool\n};\n\nexport default ConnectivityStatusConnecting;\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}