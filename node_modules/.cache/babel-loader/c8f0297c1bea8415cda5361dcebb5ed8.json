{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exports_1 = require(\"./Exports\");\n/**\n * Defines contents of speech recognizing/recognized event.\n * @class SpeechRecognitionEventArgs\n */\n\n\nvar SpeechRecognitionEventArgs =\n/** @class */\nfunction (_super) {\n  __extends(SpeechRecognitionEventArgs, _super);\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {SpeechRecognitionResult} result - The speech recognition result.\n   * @param {number} offset - The offset.\n   * @param {string} sessionId - The session id.\n   */\n\n\n  function SpeechRecognitionEventArgs(result, offset, sessionId) {\n    var _this = _super.call(this, offset, sessionId) || this;\n\n    _this.privResult = result;\n    return _this;\n  }\n\n  Object.defineProperty(SpeechRecognitionEventArgs.prototype, \"result\", {\n    /**\n     * Specifies the recognition result.\n     * @member SpeechRecognitionEventArgs.prototype.result\n     * @function\n     * @public\n     * @returns {SpeechRecognitionResult} the recognition result.\n     */\n    get: function get() {\n      return this.privResult;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return SpeechRecognitionEventArgs;\n}(Exports_1.RecognitionEventArgs);\n\nexports.SpeechRecognitionEventArgs = SpeechRecognitionEventArgs;","map":{"version":3,"sources":["src/sdk/SpeechRecognitionEventArgs.ts"],"names":[],"mappings":"cAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;AAEA;;;AAGG;;;AACH,IAAA,0BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgD,EAAA,SAAA,CAAA,0BAAA,EAAA,MAAA,CAAA;AAG5C;;;;;;AAMG;;;AACH,WAAA,0BAAA,CAAmB,MAAnB,EAAoD,MAApD,EAAqE,SAArE,EAAuF;AAAvF,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,MAAN,EAAc,SAAd,KAAwB,IAD5B;;AAGI,IAAA,KAAI,CAAC,UAAL,GAAkB,MAAlB;;AACH;;AASD,EAAA,MAAA,CAAA,cAAA,CAAW,0BAAA,CAAA,SAAX,EAAW,QAAX,EAAiB;AAPjB;;;;;;AAMG;SACH,eAAA;AACI,aAAO,KAAK,UAAZ;AACH,KAFgB;oBAAA;;AAAA,GAAjB;AAGJ,SAAA,0BAAA;AAAC,CA1BD,CAAgD,SAAA,CAAA,oBAAhD,CAAA;;AAAa,OAAA,CAAA,0BAAA,GAAA,0BAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionEventArgs, SpeechRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Defines contents of speech recognizing/recognized event.\r\n * @class SpeechRecognitionEventArgs\r\n */\r\nexport class SpeechRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: SpeechRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: SpeechRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member SpeechRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): SpeechRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}