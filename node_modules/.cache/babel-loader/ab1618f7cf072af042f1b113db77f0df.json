{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = sendPostBackToPostActivitySaga;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _sendPostBack = require(\"../actions/sendPostBack\");\n\nvar _postActivity = _interopRequireDefault(require(\"../actions/postActivity\"));\n\nvar _whileConnected = _interopRequireDefault(require(\"./effects/whileConnected\"));\n\nvar _marked = /*#__PURE__*/_regenerator[\"default\"].mark(postActivityWithPostBack),\n    _marked2 = /*#__PURE__*/_regenerator[\"default\"].mark(sendPostBackToPostActivity),\n    _marked3 = /*#__PURE__*/_regenerator[\"default\"].mark(sendPostBackToPostActivitySaga); // https://github.com/microsoft/botframework-sdk/blob/master/specs/botframework-activity/botframework-activity.md#post-back\n\n\nfunction postActivityWithPostBack(_ref) {\n  var value;\n  return _regenerator[\"default\"].wrap(function postActivityWithPostBack$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          value = _ref.payload.value;\n          _context.next = 3;\n          return (0, _effects.put)((0, _postActivity[\"default\"])({\n            channelData: {\n              postBack: true\n            },\n            text: typeof value === 'string' ? value : undefined,\n            type: 'message',\n            value: typeof value !== 'string' ? value : undefined\n          }));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction sendPostBackToPostActivity() {\n  return _regenerator[\"default\"].wrap(function sendPostBackToPostActivity$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return (0, _effects.takeEvery)(_sendPostBack.SEND_POST_BACK, postActivityWithPostBack);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction sendPostBackToPostActivitySaga() {\n  return _regenerator[\"default\"].wrap(function sendPostBackToPostActivitySaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return (0, _whileConnected[\"default\"])(sendPostBackToPostActivity);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["../../src/sagas/sendPostBackToPostActivitySaga.js"],"names":["postActivityWithPostBack","value","channelData","postBack","text","type","undefined","sendPostBackToPostActivity","SEND_POST_BACK","sendPostBackToPostActivitySaga"],"mappings":";;;;;;;;;;;AAGA,IAAA,QAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AACA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;wDAGUA,wB;yDAaAO,0B;yDAIeE,8B,GAlBzB;;;AACA,SAAA,wBAAA,CAAA,IAAA,EAAA;AAAA,MAAA,KAAA;AAAA,SAAA,YAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,yBAAA,CAAA,QAAA,EAAA;AAAA,WAAA,CAAA,EAAA;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,aAAA,CAAA;AAAgDR,UAAAA,KAAhD,GAAA,IAAA,CAAA,OAAA,CAAA,KAAgDA;AAAhD,UAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AACE,iBAAM,CAAA,GAAA,QAAA,CAAA,GAAA,EACJ,CAAA,GAAA,aAAA,CAAA,SAAA,CAAA,EAAa;AACXC,YAAAA,WAAW,EAAE;AACXC,cAAAA,QAAQ,EAAE;AADC,aADF;AAIXC,YAAAA,IAAI,EAAE,OAAA,KAAA,KAAA,QAAA,GAAA,KAAA,GAJK,SAAA;AAKXC,YAAAA,IAAI,EALO,SAAA;AAMXJ,YAAAA,KAAK,EAAE,OAAA,KAAA,KAAA,QAAA,GAAA,KAAA,GAAoCK;AANhC,WAAb,CADI,CAAN;;AADF,aAAA,CAAA;AAAA,aAAA,KAAA;AAAA,iBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,GAAA,EAAA,OAAA,CAAA;AAAA;;AAaA,SAAA,0BAAA,GAAA;AAAA,SAAA,YAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,2BAAA,CAAA,SAAA,EAAA;AAAA,WAAA,CAAA,EAAA;AAAA,cAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,aAAA,CAAA;AAAA,UAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AACE,iBAAM,CAAA,GAAA,QAAA,CAAA,SAAA,EAAUE,aAAAA,CAAV,cAAA,EAAN,wBAAM,CAAN;;AADF,aAAA,CAAA;AAAA,aAAA,KAAA;AAAA,iBAAA,SAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,GAAA,EAAA,QAAA,CAAA;AAAA;;AAIe,SAAA,8BAAA,GAAA;AAAA,SAAA,YAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,SAAA,+BAAA,CAAA,SAAA,EAAA;AAAA,WAAA,CAAA,EAAA;AAAA,cAAA,SAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AAAA,aAAA,CAAA;AAAA,UAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AACb,iBAAM,CAAA,GAAA,eAAA,CAAA,SAAA,CAAA,EAAN,0BAAM,CAAN;;AADa,aAAA,CAAA;AAAA,aAAA,KAAA;AAAA,iBAAA,SAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,GAAA,EAAA,QAAA,CAAA;AAAA","sourcesContent":["// This is for the ternary operator of text and value.\n/* eslint no-undefined: \"off\" */\n\nimport { put, takeEvery } from 'redux-saga/effects';\n\nimport { SEND_POST_BACK } from '../actions/sendPostBack';\nimport postActivity from '../actions/postActivity';\nimport whileConnected from './effects/whileConnected';\n\n// https://github.com/microsoft/botframework-sdk/blob/master/specs/botframework-activity/botframework-activity.md#post-back\nfunction* postActivityWithPostBack({ payload: { value } }) {\n  yield put(\n    postActivity({\n      channelData: {\n        postBack: true\n      },\n      text: typeof value === 'string' ? value : undefined,\n      type: 'message',\n      value: typeof value !== 'string' ? value : undefined\n    })\n  );\n}\n\nfunction* sendPostBackToPostActivity() {\n  yield takeEvery(SEND_POST_BACK, postActivityWithPostBack);\n}\n\nexport default function* sendPostBackToPostActivitySaga() {\n  yield whileConnected(sendPostBackToPostActivity);\n}\n"],"sourceRoot":"core:///"},"metadata":{},"sourceType":"script"}