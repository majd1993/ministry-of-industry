{"ast":null,"code":"\"use strict\"; // Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Exports_1 = require(\"../Exports\");\n\nvar User =\n/** @class */\nfunction () {\n  function User(userId) {\n    this.privUserId = userId;\n  }\n\n  Object.defineProperty(User.prototype, \"userId\", {\n    get: function get() {\n      return this.privUserId;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return User;\n}();\n\nexports.User = User; // tslint:disable-next-line: max-classes-per-file\n\nvar Participant =\n/** @class */\nfunction () {\n  function Participant(id, avatar, displayName, isHost, isMuted, isUsingTts, preferredLanguage) {\n    this.privId = id;\n    this.privAvatar = avatar;\n    this.privDisplayName = displayName;\n    this.privIsHost = isHost;\n    this.privIsMuted = isMuted;\n    this.privIsUsingTts = isUsingTts;\n    this.privPreferredLanguage = preferredLanguage;\n    this.privPoperties = new Exports_1.PropertyCollection();\n  }\n\n  Object.defineProperty(Participant.prototype, \"avatar\", {\n    get: function get() {\n      return this.privAvatar;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Participant.prototype, \"displayName\", {\n    get: function get() {\n      return this.privDisplayName;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Participant.prototype, \"id\", {\n    get: function get() {\n      return this.privId;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Participant.prototype, \"preferredLanguage\", {\n    get: function get() {\n      return this.privPreferredLanguage;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Participant.prototype, \"isHost\", {\n    get: function get() {\n      return this.privIsHost;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Participant.prototype, \"isMuted\", {\n    get: function get() {\n      return this.privIsMuted;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Participant.prototype, \"isUsingTts\", {\n    get: function get() {\n      return this.privIsUsingTts;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Participant.prototype, \"properties\", {\n    get: function get() {\n      return this.privPoperties;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Participant;\n}();\n\nexports.Participant = Participant;","map":{"version":3,"sources":["src/sdk/Transcription/IParticipant.ts"],"names":[],"mappings":"cAAA;AACA;AACA;;;;;;AAEA,IAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AAWA,IAAA,IAAA;AAAA;AAAA,YAAA;AAGI,WAAA,IAAA,CAAY,MAAZ,EAA0B;AACtB,SAAK,UAAL,GAAkB,MAAlB;AACH;;AAED,EAAA,MAAA,CAAA,cAAA,CAAW,IAAA,CAAA,SAAX,EAAW,QAAX,EAAiB;SAAjB,eAAA;AACI,aAAO,KAAK,UAAZ;AACH,KAFgB;oBAAA;;AAAA,GAAjB;AAGJ,SAAA,IAAA;AAAC,CAVD,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA,C,CAsCb;;AACA,IAAA,WAAA;AAAA;AAAA,YAAA;AAUI,WAAA,WAAA,CAAY,EAAZ,EAAwB,MAAxB,EAAwC,WAAxC,EAA6D,MAA7D,EAA8E,OAA9E,EAAgG,UAAhG,EAAqH,iBAArH,EAA8I;AAC1I,SAAK,MAAL,GAAc,EAAd;AACA,SAAK,UAAL,GAAkB,MAAlB;AACA,SAAK,eAAL,GAAuB,WAAvB;AACA,SAAK,UAAL,GAAkB,MAAlB;AACA,SAAK,WAAL,GAAmB,OAAnB;AACA,SAAK,cAAL,GAAsB,UAAtB;AACA,SAAK,qBAAL,GAA6B,iBAA7B;AACA,SAAK,aAAL,GAAqB,IAAI,SAAA,CAAA,kBAAJ,EAArB;AACH;;AACD,EAAA,MAAA,CAAA,cAAA,CAAW,WAAA,CAAA,SAAX,EAAW,QAAX,EAAiB;SAAjB,eAAA;AACI,aAAO,KAAK,UAAZ;AACH,KAFgB;oBAAA;;AAAA,GAAjB;AAIA,EAAA,MAAA,CAAA,cAAA,CAAW,WAAA,CAAA,SAAX,EAAW,aAAX,EAAsB;SAAtB,eAAA;AACI,aAAO,KAAK,eAAZ;AACH,KAFqB;oBAAA;;AAAA,GAAtB;AAIA,EAAA,MAAA,CAAA,cAAA,CAAW,WAAA,CAAA,SAAX,EAAW,IAAX,EAAa;SAAb,eAAA;AACI,aAAO,KAAK,MAAZ;AACH,KAFY;oBAAA;;AAAA,GAAb;AAIA,EAAA,MAAA,CAAA,cAAA,CAAW,WAAA,CAAA,SAAX,EAAW,mBAAX,EAA4B;SAA5B,eAAA;AACI,aAAO,KAAK,qBAAZ;AACH,KAF2B;oBAAA;;AAAA,GAA5B;AAIA,EAAA,MAAA,CAAA,cAAA,CAAW,WAAA,CAAA,SAAX,EAAW,QAAX,EAAiB;SAAjB,eAAA;AACI,aAAO,KAAK,UAAZ;AACH,KAFgB;oBAAA;;AAAA,GAAjB;AAIA,EAAA,MAAA,CAAA,cAAA,CAAW,WAAA,CAAA,SAAX,EAAW,SAAX,EAAkB;SAAlB,eAAA;AACI,aAAO,KAAK,WAAZ;AACH,KAFiB;oBAAA;;AAAA,GAAlB;AAIA,EAAA,MAAA,CAAA,cAAA,CAAW,WAAA,CAAA,SAAX,EAAW,YAAX,EAAqB;SAArB,eAAA;AACI,aAAO,KAAK,cAAZ;AACH,KAFoB;oBAAA;;AAAA,GAArB;AAIA,EAAA,MAAA,CAAA,cAAA,CAAW,WAAA,CAAA,SAAX,EAAW,YAAX,EAAqB;SAArB,eAAA;AACI,aAAO,KAAK,aAAZ;AACH,KAFoB;oBAAA;;AAAA,GAArB;AAGJ,SAAA,WAAA;AAAC,CAnDD,EAAA;;AAAa,OAAA,CAAA,WAAA,GAAA,WAAA","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\nimport { PropertyCollection } from \"../Exports\";\r\n\r\n/**\r\n * Represents a user in a conversation.\r\n * Added in version 1.4.0\r\n */\r\nexport interface IUser {\r\n    /** Gets the user's ID */\r\n    readonly userId: string;\r\n}\r\n\r\nexport class User implements IUser {\r\n    private privUserId: string;\r\n\r\n    constructor(userId: string) {\r\n        this.privUserId = userId;\r\n    }\r\n\r\n    public get userId(): string {\r\n        return this.privUserId;\r\n    }\r\n}\r\n\r\n/**\r\n * Represents a participant in a conversation.\r\n * Added in version 1.4.0\r\n */\r\nexport interface IParticipant {\r\n    /** Gets the colour of the user's avatar as an HTML hex string (e.g. FF0000 for red). */\r\n    readonly avatar: string;\r\n    /**\r\n     * The participant's display name. Please note that there may be more than one participant\r\n     * with the same name. You can use <see cref=\"Id\"/> property to tell them apart.\r\n     */\r\n    readonly displayName: string;\r\n    /** The unique identifier for the participant. */\r\n    readonly id: string;\r\n    /** Gets whether or not this participant is the host. */\r\n    readonly isHost: boolean;\r\n    /** Gets whether or not this participant is muted. */\r\n    readonly isMuted: boolean;\r\n    /** Gets whether or not the participant is using Text To Speech (TTS). */\r\n    readonly isUsingTts: boolean;\r\n    /** The participant's preferred spoken language. */\r\n    readonly preferredLanguage: string;\r\n    /** Contains properties of the participant. */\r\n    readonly properties: PropertyCollection;\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class Participant implements IParticipant {\r\n    private privAvatar: string;\r\n    private privDisplayName: string;\r\n    private privId: string;\r\n    private privIsHost: boolean;\r\n    private privIsMuted: boolean;\r\n    private privIsUsingTts: boolean;\r\n    private privPreferredLanguage: string;\r\n    private privPoperties: PropertyCollection;\r\n\r\n    constructor(id: string, avatar: string, displayName: string, isHost: boolean, isMuted: boolean, isUsingTts: boolean, preferredLanguage: string) {\r\n        this.privId = id;\r\n        this.privAvatar = avatar;\r\n        this.privDisplayName = displayName;\r\n        this.privIsHost = isHost;\r\n        this.privIsMuted = isMuted;\r\n        this.privIsUsingTts = isUsingTts;\r\n        this.privPreferredLanguage = preferredLanguage;\r\n        this.privPoperties = new PropertyCollection();\r\n    }\r\n    public get avatar(): string {\r\n        return this.privAvatar;\r\n    }\r\n\r\n    public get displayName(): string {\r\n        return this.privDisplayName;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public get preferredLanguage(): string {\r\n        return this.privPreferredLanguage;\r\n    }\r\n\r\n    public get isHost(): boolean {\r\n        return this.privIsHost;\r\n    }\r\n\r\n    public get isMuted(): boolean {\r\n        return this.privIsMuted;\r\n    }\r\n\r\n    public get isUsingTts(): boolean {\r\n        return this.privIsUsingTts;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privPoperties;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}