{"ast":null,"code":"'use strict';\n\nvar streak = require('longest-streak');\n\nvar repeat = require('repeat-string');\n\nmodule.exports = inlineCode;\nvar space = ' ';\nvar graveAccent = '`'; // Stringify inline code.\n//\n// Knows about internal ticks (`\\``), and ensures one more tick is used to\n// enclose the inline code:\n//\n// ````markdown\n// ```foo ``bar`` baz```\n// ````\n//\n// Even knows about inital and final ticks:\n//\n// ``markdown\n// `` `foo ``\n// `` foo` ``\n// ```\n\nfunction inlineCode(node) {\n  var value = node.value;\n  var ticks = repeat(graveAccent, streak(value, graveAccent) + 1);\n  var start = ticks;\n  var end = ticks;\n\n  if (value.charAt(0) === graveAccent) {\n    start += space;\n  }\n\n  if (value.charAt(value.length - 1) === graveAccent) {\n    end = space + end;\n  }\n\n  return start + value + end;\n}","map":{"version":3,"sources":["/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/remark-stringify/lib/visitors/inline-code.js"],"names":["streak","require","repeat","module","exports","inlineCode","space","graveAccent","node","value","ticks","start","end","charAt","length"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAApB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,eAAD,CAApB;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,UAAjB;AAEA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,WAAW,GAAG,GAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASF,UAAT,CAAoBG,IAApB,EAA0B;AACxB,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AACA,MAAIC,KAAK,GAAGR,MAAM,CAACK,WAAD,EAAcP,MAAM,CAACS,KAAD,EAAQF,WAAR,CAAN,GAA6B,CAA3C,CAAlB;AACA,MAAII,KAAK,GAAGD,KAAZ;AACA,MAAIE,GAAG,GAAGF,KAAV;;AAEA,MAAID,KAAK,CAACI,MAAN,CAAa,CAAb,MAAoBN,WAAxB,EAAqC;AACnCI,IAAAA,KAAK,IAAIL,KAAT;AACD;;AAED,MAAIG,KAAK,CAACI,MAAN,CAAaJ,KAAK,CAACK,MAAN,GAAe,CAA5B,MAAmCP,WAAvC,EAAoD;AAClDK,IAAAA,GAAG,GAAGN,KAAK,GAAGM,GAAd;AACD;;AAED,SAAOD,KAAK,GAAGF,KAAR,GAAgBG,GAAvB;AACD","sourcesContent":["'use strict'\n\nvar streak = require('longest-streak')\nvar repeat = require('repeat-string')\n\nmodule.exports = inlineCode\n\nvar space = ' '\nvar graveAccent = '`'\n\n// Stringify inline code.\n//\n// Knows about internal ticks (`\\``), and ensures one more tick is used to\n// enclose the inline code:\n//\n// ````markdown\n// ```foo ``bar`` baz```\n// ````\n//\n// Even knows about inital and final ticks:\n//\n// ``markdown\n// `` `foo ``\n// `` foo` ``\n// ```\nfunction inlineCode(node) {\n  var value = node.value\n  var ticks = repeat(graveAccent, streak(value, graveAccent) + 1)\n  var start = ticks\n  var end = ticks\n\n  if (value.charAt(0) === graveAccent) {\n    start += space\n  }\n\n  if (value.charAt(value.length - 1) === graveAccent) {\n    end = space + end\n  }\n\n  return start + value + end\n}\n"]},"metadata":{},"sourceType":"script"}