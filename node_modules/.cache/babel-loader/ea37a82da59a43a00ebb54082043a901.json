{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useEvent;\n\nvar _useImmediateEffect = _interopRequireDefault(require(\"./useImmediateEffect\"));\n\nfunction useEvent(target, name, listener, options) {\n  (0, _useImmediateEffect[\"default\"])(function () {\n    var handler = function handler(event) {\n      return listener && listener(event);\n    };\n\n    target.addEventListener(name, handler, options);\n    return function () {\n      // It seems speechSynthesis.onvoiceschanged still fire after we called removeEventListener.\n      // We are protecting this scenario by setting listener to falsy.\n      listener = null;\n      target.removeEventListener(name, handler, options);\n    };\n  }, [listener, name, options, target]);\n}","map":{"version":3,"sources":["../src/useEvent.js"],"names":["handler","listener","target"],"mappings":";;;;;;;;;AAAA,IAAA,mBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;AAEe,SAAA,QAAA,CAAA,MAAA,EAAA,IAAA,EAAA,QAAA,EAAA,OAAA,EAAmD;AAChE,GAAA,GAAA,mBAAA,CAAA,SAAA,CAAA,EAAmB,YAAM;AACvB,QAAMA,OAAO,GAAG,SAAVA,OAAU,CAAA,KAAA,EAAK;AAAA,aAAIC,QAAQ,IAAIA,QAAQ,CAAxB,KAAwB,CAAxB;AAArB,KAAA;;AAEAC,IAAAA,MAAM,CAANA,gBAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAAA,OAAAA;AAEA,WAAO,YAAM;AACX;AACA;AACAD,MAAAA,QAAQ,GAARA,IAAAA;AACAC,MAAAA,MAAM,CAANA,mBAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAAA,OAAAA;AAJF,KAAA;AALF,GAAA,EAWG,CAAA,QAAA,EAAA,IAAA,EAAA,OAAA,EAXH,MAWG,CAXH;AAYD","sourcesContent":["import useImmediateEffect from './useImmediateEffect';\n\nexport default function useEvent(target, name, listener, options) {\n  useImmediateEffect(() => {\n    const handler = event => listener && listener(event);\n\n    target.addEventListener(name, handler, options);\n\n    return () => {\n      // It seems speechSynthesis.onvoiceschanged still fire after we called removeEventListener.\n      // We are protecting this scenario by setting listener to falsy.\n      listener = null;\n      target.removeEventListener(name, handler, options);\n    };\n  }, [listener, name, options, target]);\n}\n"]},"metadata":{},"sourceType":"script"}