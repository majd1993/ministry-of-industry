{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = lastTypingAt;\n\nvar _simpleUpdateIn = _interopRequireDefault(require(\"simple-update-in\"));\n\nvar _incomingActivity = require(\"../actions/incomingActivity\");\n/*eslint no-case-declarations: \"off\"*/\n\n/*eslint no-unused-vars: \"off\"*/\n\n\nvar DEFAULT_STATE = {};\n\nfunction lastTypingAt() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_STATE;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      payload = _ref.payload,\n      type = _ref.type;\n\n  if (type === _incomingActivity.INCOMING_ACTIVITY) {\n    var _payload$activity = payload.activity,\n        _payload$activity$fro = _payload$activity.from,\n        id = _payload$activity$fro.id,\n        role = _payload$activity$fro.role,\n        activityType = _payload$activity.type;\n\n    if (role !== 'user') {\n      if (activityType === 'typing') {\n        state = (0, _simpleUpdateIn[\"default\"])(state, [id], function () {\n          return Date.now();\n        });\n      } else if (activityType === 'message') {\n        state = (0, _simpleUpdateIn[\"default\"])(state, [id]);\n      }\n    }\n  }\n\n  return state;\n}","map":{"version":3,"sources":["../../src/reducers/lastTypingAt.js"],"names":["DEFAULT_STATE","state","payload","type","INCOMING_ACTIVITY","id","role","activityType","Date"],"mappings":";;;;;;;;;AAGA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;AAEA,IAAA,iBAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;AALA;;AACA;;;AAMA,IAAMA,aAAa,GAAnB,EAAA;;AAEe,SAAA,YAAA,GAAgE;AAAA,MAA1CC,KAA0C,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAlCD,aAAkC;;AAAA,MAAA,IAAA,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA;AAAA,MAAjBE,OAAiB,GAAA,IAAA,CAAjBA,OAAiB;AAAA,MAARC,IAAQ,GAAA,IAAA,CAARA,IAAQ;;AAC7E,MAAIA,IAAI,KAAKC,iBAAAA,CAAb,iBAAA,EAAgC;AAAA,QAAA,iBAAA,GAM1BF,OAN0B,CAAA,QAAA;AAAA,QAAA,qBAAA,GAAA,iBAAA,CAAA,IAAA;AAAA,QAGlBG,EAHkB,GAAA,qBAAA,CAAA,EAAA;AAAA,QAGdC,IAHc,GAAA,qBAAA,CAAA,IAAA;AAAA,QAIpBC,YAJoB,GAAA,iBAAA,CAAA,IAAA;;AAQ9B,QAAID,IAAI,KAAR,MAAA,EAAqB;AACnB,UAAIC,YAAY,KAAhB,QAAA,EAA+B;AAC7BN,QAAAA,KAAK,GAAG,CAAA,GAAA,eAAA,CAAA,SAAA,CAAA,EAAA,KAAA,EAAgB,CAAhB,EAAgB,CAAhB,EAAsB,YAAA;AAAA,iBAAMO,IAAI,CAAV,GAAMA,EAAN;AAA9BP,SAAQ,CAARA;AADF,OAAA,MAEO,IAAIM,YAAY,KAAhB,SAAA,EAAgC;AACrCN,QAAAA,KAAK,GAAG,CAAA,GAAA,eAAA,CAAA,SAAA,CAAA,EAAA,KAAA,EAAgB,CAAxBA,EAAwB,CAAhB,CAARA;AACD;AACF;AACF;;AAED,SAAA,KAAA;AACD","sourcesContent":["/*eslint no-case-declarations: \"off\"*/\n/*eslint no-unused-vars: \"off\"*/\n\nimport updateIn from 'simple-update-in';\n\nimport { INCOMING_ACTIVITY } from '../actions/incomingActivity';\n\nconst DEFAULT_STATE = {};\n\nexport default function lastTypingAt(state = DEFAULT_STATE, { payload, type }) {\n  if (type === INCOMING_ACTIVITY) {\n    const {\n      activity: {\n        from: { id, role },\n        type: activityType\n      }\n    } = payload;\n\n    if (role !== 'user') {\n      if (activityType === 'typing') {\n        state = updateIn(state, [id], () => Date.now());\n      } else if (activityType === 'message') {\n        state = updateIn(state, [id]);\n      }\n    }\n  }\n\n  return state;\n}\n"],"sourceRoot":"core:///"},"metadata":{},"sourceType":"script"}