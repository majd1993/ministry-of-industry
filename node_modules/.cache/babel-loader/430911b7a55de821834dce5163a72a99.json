{"ast":null,"code":"'use strict';\n\nmodule.exports = unorderedItems;\nvar lineFeed = '\\n';\nvar blank = lineFeed + lineFeed; // Visit unordered list items.  Uses `options.bullet` as each item’s bullet.\n\nfunction unorderedItems(node) {\n  var self = this;\n  var bullet = self.options.bullet;\n  var fn = self.visitors.listItem;\n  var children = node.children;\n  var length = children.length;\n  var index = -1;\n  var values = [];\n\n  while (++index < length) {\n    values[index] = fn.call(self, children[index], node, index, bullet);\n  }\n\n  return values.join(node.spread ? blank : lineFeed);\n}","map":{"version":3,"sources":["/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/remark-stringify/lib/macro/unordered-items.js"],"names":["module","exports","unorderedItems","lineFeed","blank","node","self","bullet","options","fn","visitors","listItem","children","length","index","values","call","join","spread"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,cAAjB;AAEA,IAAIC,QAAQ,GAAG,IAAf;AAEA,IAAIC,KAAK,GAAGD,QAAQ,GAAGA,QAAvB,C,CAEA;;AACA,SAASD,cAAT,CAAwBG,IAAxB,EAA8B;AAC5B,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,MAAM,GAAGD,IAAI,CAACE,OAAL,CAAaD,MAA1B;AACA,MAAIE,EAAE,GAAGH,IAAI,CAACI,QAAL,CAAcC,QAAvB;AACA,MAAIC,QAAQ,GAAGP,IAAI,CAACO,QAApB;AACA,MAAIC,MAAM,GAAGD,QAAQ,CAACC,MAAtB;AACA,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,MAAM,GAAG,EAAb;;AAEA,SAAO,EAAED,KAAF,GAAUD,MAAjB,EAAyB;AACvBE,IAAAA,MAAM,CAACD,KAAD,CAAN,GAAgBL,EAAE,CAACO,IAAH,CAAQV,IAAR,EAAcM,QAAQ,CAACE,KAAD,CAAtB,EAA+BT,IAA/B,EAAqCS,KAArC,EAA4CP,MAA5C,CAAhB;AACD;;AAED,SAAOQ,MAAM,CAACE,IAAP,CAAYZ,IAAI,CAACa,MAAL,GAAcd,KAAd,GAAsBD,QAAlC,CAAP;AACD","sourcesContent":["'use strict'\n\nmodule.exports = unorderedItems\n\nvar lineFeed = '\\n'\n\nvar blank = lineFeed + lineFeed\n\n// Visit unordered list items.  Uses `options.bullet` as each item’s bullet.\nfunction unorderedItems(node) {\n  var self = this\n  var bullet = self.options.bullet\n  var fn = self.visitors.listItem\n  var children = node.children\n  var length = children.length\n  var index = -1\n  var values = []\n\n  while (++index < length) {\n    values[index] = fn.call(self, children[index], node, index, bullet)\n  }\n\n  return values.join(node.spread ? blank : lineFeed)\n}\n"]},"metadata":{},"sourceType":"script"}