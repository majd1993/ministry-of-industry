{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/Ubility/Desktop/ministry-of-industry-and-advanced-technology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useTrackTiming;\n\nvar _react = require(\"react\");\n\nvar _createCustomEvent = _interopRequireDefault(require(\"../utils/createCustomEvent\"));\n\nvar _randomId = _interopRequireDefault(require(\"../utils/randomId\"));\n\nvar _useReadTelemetryDimensions = _interopRequireDefault(require(\"./internal/useReadTelemetryDimensions\"));\n\nvar _useTrackException = _interopRequireDefault(require(\"./useTrackException\"));\n\nvar _useWebChatAPIContext2 = _interopRequireDefault(require(\"./internal/useWebChatAPIContext\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction useTrackTiming() {\n  var _useWebChatAPIContext = (0, _useWebChatAPIContext2.default)(),\n      onTelemetry = _useWebChatAPIContext.onTelemetry;\n\n  var readTelemetryDimensions = (0, _useReadTelemetryDimensions.default)();\n  var trackException = (0, _useTrackException.default)();\n  return (0, _react.useCallback)( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name, functionOrPromise) {\n      var timingId, startTime, duration;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!name || typeof name !== 'string')) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\", console.warn('botframework-webchat: \"name\" passed to \"useTrackTiming\" hook must be specified and of type string.'));\n\n            case 4:\n              if (!(typeof functionOrPromise !== 'function' && typeof functionOrPromise.then !== 'function')) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", console.warn('botframework-webchat: \"functionOrPromise\" passed to \"useTrackTiming\" hook must be specified, of type function or Promise.'));\n\n            case 6:\n              timingId = (0, _randomId.default)();\n              onTelemetry && onTelemetry((0, _createCustomEvent.default)('timingstart', {\n                dimensions: readTelemetryDimensions(),\n                name: name,\n                timingId: timingId\n              }));\n              startTime = Date.now();\n              _context.prev = 9;\n              _context.next = 12;\n              return typeof functionOrPromise === 'function' ? functionOrPromise() : functionOrPromise;\n\n            case 12:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](9);\n              trackException(_context.t0, false);\n              throw _context.t0;\n\n            case 19:\n              _context.prev = 19;\n              duration = Date.now() - startTime;\n              onTelemetry && onTelemetry((0, _createCustomEvent.default)('timingend', {\n                dimensions: readTelemetryDimensions(),\n                duration: duration,\n                name: name,\n                timingId: timingId\n              }));\n              return _context.finish(19);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 15, 19, 23]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [onTelemetry, readTelemetryDimensions, trackException]);\n}","map":{"version":3,"sources":["../../src/hooks/useTrackTiming.js"],"names":["onTelemetry","readTelemetryDimensions","trackException","console","functionOrPromise","timingId","dimensions","name","startTime","Date","duration"],"mappings":"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","sourcesContent":["import { useCallback } from 'react';\n\nimport createCustomEvent from '../utils/createCustomEvent';\nimport randomId from '../utils/randomId';\nimport useReadTelemetryDimensions from './internal/useReadTelemetryDimensions';\nimport useTrackException from './useTrackException';\nimport useWebChatAPIContext from './internal/useWebChatAPIContext';\n\nexport default function useTrackTiming() {\n  const { onTelemetry } = useWebChatAPIContext();\n  const readTelemetryDimensions = useReadTelemetryDimensions();\n  const trackException = useTrackException();\n\n  return useCallback(\n    async (name, functionOrPromise) => {\n      if (!name || typeof name !== 'string') {\n        return console.warn(\n          'botframework-webchat: \"name\" passed to \"useTrackTiming\" hook must be specified and of type string.'\n        );\n      } else if (typeof functionOrPromise !== 'function' && typeof functionOrPromise.then !== 'function') {\n        return console.warn(\n          'botframework-webchat: \"functionOrPromise\" passed to \"useTrackTiming\" hook must be specified, of type function or Promise.'\n        );\n      }\n\n      const timingId = randomId();\n\n      onTelemetry &&\n        onTelemetry(\n          createCustomEvent('timingstart', {\n            dimensions: readTelemetryDimensions(),\n            name,\n            timingId\n          })\n        );\n\n      const startTime = Date.now();\n\n      try {\n        return await (typeof functionOrPromise === 'function' ? functionOrPromise() : functionOrPromise);\n      } catch (err) {\n        trackException(err, false);\n\n        throw err;\n      } finally {\n        const duration = Date.now() - startTime;\n\n        onTelemetry &&\n          onTelemetry(\n            createCustomEvent('timingend', {\n              dimensions: readTelemetryDimensions(),\n              duration,\n              name,\n              timingId\n            })\n          );\n      }\n    },\n    [onTelemetry, readTelemetryDimensions, trackException]\n  );\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}