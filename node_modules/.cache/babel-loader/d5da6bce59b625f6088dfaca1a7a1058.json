{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addTargetBlankToHyperlinksMarkdown;\n\nvar _updateMarkdownAttrs = _interopRequireDefault(require(\"./updateMarkdownAttrs\"));\n\nvar _walkMarkdownTokens = _interopRequireDefault(require(\"./walkMarkdownTokens\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction addTargetBlankToHyperlinksMarkdown(tokens) {\n  return (0, _walkMarkdownTokens.default)(tokens, function (token) {\n    switch (token.type) {\n      case 'link_open':\n        token = (0, _updateMarkdownAttrs.default)(token, function (attrs) {\n          return (// Adds only for external links, e.g. https://, data:\n            // Don't add for internal links, e.g. #ref-1, ?q=doc\n            /^[0-9A-Z_a-z]/.test(attrs.href) ? _objectSpread(_objectSpread({}, attrs), {}, {\n              rel: 'noopener noreferrer',\n              target: '_blank'\n            }) : attrs\n          );\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    return token;\n  });\n}","map":{"version":3,"sources":["../../src/Utils/addTargetBlankToHyperlinksMarkdown.js"],"names":["token","attrs","rel","target"],"mappings":";;;;;;;AAAA,IAAA,oBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAAA,kCAAA,CAAA,MAAA,EAAoD;AACjE,SAAO,CAAA,GAAA,mBAAA,CAAA,OAAA,EAAA,MAAA,EAA2B,UAAA,KAAA,EAAS;AACzC,YAAQA,KAAK,CAAb,IAAA;AACE,WAAA,WAAA;AACEA,QAAAA,KAAK,GAAG,CAAA,GAAA,oBAAA,CAAA,OAAA,EAAA,KAAA,EAA2B,UAAA,KAAA,EAAK;AAAA,iBACtC;AACA;AACA,4BAAA,IAAA,CAAYC,KAAK,CAAjB,IAAA,IAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA;AAGMC,cAAAA,GAAG,EAHT,qBAAA;AAIMC,cAAAA,MAAM,EAAE;AAJd,aAAA,CAAA,GAMIF;AATkC;AAAxCD,SAAQ,CAARA;AAYA;;AAEF;AACE;AAjBJ;;AAoBA,WAAA,KAAA;AArBF,GAAO,CAAP;AAuBD","sourcesContent":["import updateMarkdownAttrs from './updateMarkdownAttrs';\nimport walkMarkdownTokens from './walkMarkdownTokens';\n\nexport default function addTargetBlankToHyperlinksMarkdown(tokens) {\n  return walkMarkdownTokens(tokens, token => {\n    switch (token.type) {\n      case 'link_open':\n        token = updateMarkdownAttrs(token, attrs =>\n          // Adds only for external links, e.g. https://, data:\n          // Don't add for internal links, e.g. #ref-1, ?q=doc\n          /^\\w/u.test(attrs.href)\n            ? {\n                ...attrs,\n                rel: 'noopener noreferrer',\n                target: '_blank'\n              }\n            : attrs\n        );\n\n        break;\n\n      default:\n        break;\n    }\n\n    return token;\n  });\n}\n"],"sourceRoot":"component:///"},"metadata":{},"sourceType":"script"}